function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var a=e(require("path")),t=e(require("os")),p=e(require("fs")),r=e(require("http")),i=e(require("https"));require("net");var o=e(require("tls")),d=e(require("events")),s=e(require("assert")),n=e(require("util")),l=e(require("stream")),m=e(require("url")),c=e(require("punycode")),u=e(require("zlib")),h=e(require("string_decoder")),f=e(require("child_process")),v=e(require("timers")),g=e(require("tty")),w=e(require("constants")),y="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function b(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function _(e,a,t){return e(t={path:a,exports:{},require:function(e,a){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}()}},t.exports),t.exports}function E(e){return e&&e.default||e}var T,S=_(function(e,a){Object.defineProperty(a,"__esModule",{value:!0}),a.toCommandProperties=a.toCommandValue=void 0,a.toCommandValue=function(e){return null==e?"":"string"==typeof e||e instanceof String?e:JSON.stringify(e)},a.toCommandProperties=function(e){return Object.keys(e).length?{title:e.title,file:e.file,line:e.startLine,endLine:e.endLine,col:e.startColumn,endColumn:e.endColumn}:{}}}),O=_(function(e,a){var p=y&&y.__createBinding||(Object.create?function(e,a,t,p){void 0===p&&(p=t),Object.defineProperty(e,p,{enumerable:!0,get:function(){return a[t]}})}:function(e,a,t,p){void 0===p&&(p=t),e[p]=a[t]}),r=y&&y.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),i=y&&y.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var t in e)"default"!==t&&Object.hasOwnProperty.call(e,t)&&p(a,e,t);return r(a,e),a};Object.defineProperty(a,"__esModule",{value:!0}),a.issue=a.issueCommand=void 0;const o=i(t);function d(e,a,t){const p=new s(e,a,t);process.stdout.write(p.toString()+o.EOL)}a.issueCommand=d,a.issue=function(e,a=""){d(e,{},a)};class s{constructor(e,a,t){e||(e="missing.command"),this.command=e,this.properties=a,this.message=t}toString(){let e="::"+this.command;if(this.properties&&Object.keys(this.properties).length>0){e+=" ";let a=!0;for(const t in this.properties)if(this.properties.hasOwnProperty(t)){const p=this.properties[t];p&&(a?a=!1:e+=",",e+=`${t}=${n(p)}`)}}return e+="::"+function(e){return S.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}(this.message),e}}function n(e){return S.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}}),A=_(function(e,a){var r=y&&y.__createBinding||(Object.create?function(e,a,t,p){void 0===p&&(p=t),Object.defineProperty(e,p,{enumerable:!0,get:function(){return a[t]}})}:function(e,a,t,p){void 0===p&&(p=t),e[p]=a[t]}),i=y&&y.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),o=y&&y.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var t in e)"default"!==t&&Object.hasOwnProperty.call(e,t)&&r(a,e,t);return i(a,e),a};Object.defineProperty(a,"__esModule",{value:!0}),a.issueCommand=void 0;const d=o(p),s=o(t);a.issueCommand=function(e,a){const t=process.env["GITHUB_"+e];if(!t)throw new Error("Unable to find environment variable for file command "+e);if(!d.existsSync(t))throw new Error("Missing file at path: "+t);d.appendFileSync(t,`${S.toCommandValue(a)}${s.EOL}`,{encoding:"utf8"})}}),N=_(function(e,a){function t(e){if(!e.hostname)return!1;let a,t=process.env.no_proxy||process.env.NO_PROXY||"";if(!t)return!1;e.port?a=Number(e.port):"http:"===e.protocol?a=80:"https:"===e.protocol&&(a=443);let p=[e.hostname.toUpperCase()];"number"==typeof a&&p.push(`${p[0]}:${a}`);for(let e of t.split(",").map(e=>e.trim().toUpperCase()).filter(e=>e))if(p.some(a=>a===e))return!0;return!1}Object.defineProperty(a,"__esModule",{value:!0}),a.getProxyUrl=function(e){let a,p,r="https:"===e.protocol;return t(e)||(p=r?process.env.https_proxy||process.env.HTTPS_PROXY:process.env.http_proxy||process.env.HTTP_PROXY,p&&(a=new URL(p))),a},a.checkBypass=t});function D(e){var a=this;a.options=e||{},a.proxyOptions=a.options.proxy||{},a.maxSockets=a.options.maxSockets||r.Agent.defaultMaxSockets,a.requests=[],a.sockets=[],a.on("free",function(e,t,p,r){for(var i=k(t,p,r),o=0,d=a.requests.length;o<d;++o){var s=a.requests[o];if(s.host===i.host&&s.port===i.port)return a.requests.splice(o,1),void s.request.onSocket(e)}e.destroy(),a.removeSocket(e)})}function C(e,a){var t=this;D.prototype.createSocket.call(t,e,function(p){var r=e.request.getHeader("host"),i=P({},t.options,{socket:p,servername:r?r.replace(/:.*$/,""):e.host}),d=o.connect(0,i);t.sockets[t.sockets.indexOf(p)]=d,a(d)})}function k(e,a,t){return"string"==typeof e?{host:e,port:a,localAddress:t}:e}function P(e){for(var a=1,t=arguments.length;a<t;++a){var p=arguments[a];if("object"==typeof p)for(var r=Object.keys(p),i=0,o=r.length;i<o;++i){var d=r[i];void 0!==p[d]&&(e[d]=p[d])}}return e}n.inherits(D,d.EventEmitter),D.prototype.addRequest=function(e,a,t,p){var r=this,i=P({request:e},r.options,k(a,t,p));r.sockets.length>=this.maxSockets?r.requests.push(i):r.createSocket(i,function(a){function t(){r.emit("free",a,i)}function p(e){r.removeSocket(a),a.removeListener("free",t),a.removeListener("close",p),a.removeListener("agentRemove",p)}a.on("free",t),a.on("close",p),a.on("agentRemove",p),e.onSocket(a)})},D.prototype.createSocket=function(e,a){var t=this,p={};t.sockets.push(p);var r=P({},t.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:!1,headers:{host:e.host+":"+e.port}});e.localAddress&&(r.localAddress=e.localAddress),r.proxyAuth&&(r.headers=r.headers||{},r.headers["Proxy-Authorization"]="Basic "+new Buffer(r.proxyAuth).toString("base64")),T("making CONNECT request");var i=t.request(r);function o(r,o,d){var s;return i.removeAllListeners(),o.removeAllListeners(),200!==r.statusCode?(T("tunneling socket could not be established, statusCode=%d",r.statusCode),o.destroy(),(s=new Error("tunneling socket could not be established, statusCode="+r.statusCode)).code="ECONNRESET",e.request.emit("error",s),void t.removeSocket(p)):d.length>0?(T("got illegal response body from proxy"),o.destroy(),(s=new Error("got illegal response body from proxy")).code="ECONNRESET",e.request.emit("error",s),void t.removeSocket(p)):(T("tunneling connection has established"),t.sockets[t.sockets.indexOf(p)]=o,a(o))}i.useChunkedEncodingByDefault=!1,i.once("response",function(e){e.upgrade=!0}),i.once("upgrade",function(e,a,t){process.nextTick(function(){o(e,a,t)})}),i.once("connect",o),i.once("error",function(a){i.removeAllListeners(),T("tunneling socket could not be established, cause=%s\n",a.message,a.stack);var r=new Error("tunneling socket could not be established, cause="+a.message);r.code="ECONNRESET",e.request.emit("error",r),t.removeSocket(p)}),i.end()},D.prototype.removeSocket=function(e){var a=this.sockets.indexOf(e);if(-1!==a){this.sockets.splice(a,1);var t=this.requests.shift();t&&this.createSocket(t,function(e){t.request.onSocket(e)})}};var R={httpOverHttp:function(e){var a=new D(e);return a.request=r.request,a},httpsOverHttp:function(e){var a=new D(e);return a.request=r.request,a.createSocket=C,a.defaultPort=443,a},httpOverHttps:function(e){var a=new D(e);return a.request=i.request,a},httpsOverHttps:function(e){var a=new D(e);return a.request=i.request,a.createSocket=C,a.defaultPort=443,a},debug:T=process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments);"string"==typeof e[0]?e[0]="TUNNEL: "+e[0]:e.unshift("TUNNEL:"),console.error.apply(console,e)}:function(){}},F=_(function(e,a){let t;var p,o,d;Object.defineProperty(a,"__esModule",{value:!0}),function(e){e[e.OK=200]="OK",e[e.MultipleChoices=300]="MultipleChoices",e[e.MovedPermanently=301]="MovedPermanently",e[e.ResourceMoved=302]="ResourceMoved",e[e.SeeOther=303]="SeeOther",e[e.NotModified=304]="NotModified",e[e.UseProxy=305]="UseProxy",e[e.SwitchProxy=306]="SwitchProxy",e[e.TemporaryRedirect=307]="TemporaryRedirect",e[e.PermanentRedirect=308]="PermanentRedirect",e[e.BadRequest=400]="BadRequest",e[e.Unauthorized=401]="Unauthorized",e[e.PaymentRequired=402]="PaymentRequired",e[e.Forbidden=403]="Forbidden",e[e.NotFound=404]="NotFound",e[e.MethodNotAllowed=405]="MethodNotAllowed",e[e.NotAcceptable=406]="NotAcceptable",e[e.ProxyAuthenticationRequired=407]="ProxyAuthenticationRequired",e[e.RequestTimeout=408]="RequestTimeout",e[e.Conflict=409]="Conflict",e[e.Gone=410]="Gone",e[e.TooManyRequests=429]="TooManyRequests",e[e.InternalServerError=500]="InternalServerError",e[e.NotImplemented=501]="NotImplemented",e[e.BadGateway=502]="BadGateway",e[e.ServiceUnavailable=503]="ServiceUnavailable",e[e.GatewayTimeout=504]="GatewayTimeout"}(p=a.HttpCodes||(a.HttpCodes={})),function(e){e.Accept="accept",e.ContentType="content-type"}(o=a.Headers||(a.Headers={})),function(e){e.ApplicationJson="application/json"}(d=a.MediaTypes||(a.MediaTypes={})),a.getProxyUrl=function(e){let a=N.getProxyUrl(new URL(e));return a?a.href:""};const s=[p.MovedPermanently,p.ResourceMoved,p.SeeOther,p.TemporaryRedirect,p.PermanentRedirect],n=[p.BadGateway,p.ServiceUnavailable,p.GatewayTimeout],l=["OPTIONS","GET","DELETE","HEAD"];class m extends Error{constructor(e,a){super(e),this.name="HttpClientError",this.statusCode=a,Object.setPrototypeOf(this,m.prototype)}}a.HttpClientError=m;class c{constructor(e){this.message=e}readBody(){return new Promise(async(e,a)=>{let t=Buffer.alloc(0);this.message.on("data",e=>{t=Buffer.concat([t,e])}),this.message.on("end",()=>{e(t.toString())})})}}a.HttpClientResponse=c,a.isHttps=function(e){return"https:"===new URL(e).protocol};class u{constructor(e,a,t){this._ignoreSslError=!1,this._allowRedirects=!0,this._allowRedirectDowngrade=!1,this._maxRedirects=50,this._allowRetries=!1,this._maxRetries=1,this._keepAlive=!1,this._disposed=!1,this.userAgent=e,this.handlers=a||[],this.requestOptions=t,t&&(null!=t.ignoreSslError&&(this._ignoreSslError=t.ignoreSslError),this._socketTimeout=t.socketTimeout,null!=t.allowRedirects&&(this._allowRedirects=t.allowRedirects),null!=t.allowRedirectDowngrade&&(this._allowRedirectDowngrade=t.allowRedirectDowngrade),null!=t.maxRedirects&&(this._maxRedirects=Math.max(t.maxRedirects,0)),null!=t.keepAlive&&(this._keepAlive=t.keepAlive),null!=t.allowRetries&&(this._allowRetries=t.allowRetries),null!=t.maxRetries&&(this._maxRetries=t.maxRetries))}options(e,a){return this.request("OPTIONS",e,null,a||{})}get(e,a){return this.request("GET",e,null,a||{})}del(e,a){return this.request("DELETE",e,null,a||{})}post(e,a,t){return this.request("POST",e,a,t||{})}patch(e,a,t){return this.request("PATCH",e,a,t||{})}put(e,a,t){return this.request("PUT",e,a,t||{})}head(e,a){return this.request("HEAD",e,null,a||{})}sendStream(e,a,t,p){return this.request(e,a,t,p)}async getJson(e,a={}){a[o.Accept]=this._getExistingOrDefaultHeader(a,o.Accept,d.ApplicationJson);let t=await this.get(e,a);return this._processResponse(t,this.requestOptions)}async postJson(e,a,t={}){let p=JSON.stringify(a,null,2);t[o.Accept]=this._getExistingOrDefaultHeader(t,o.Accept,d.ApplicationJson),t[o.ContentType]=this._getExistingOrDefaultHeader(t,o.ContentType,d.ApplicationJson);let r=await this.post(e,p,t);return this._processResponse(r,this.requestOptions)}async putJson(e,a,t={}){let p=JSON.stringify(a,null,2);t[o.Accept]=this._getExistingOrDefaultHeader(t,o.Accept,d.ApplicationJson),t[o.ContentType]=this._getExistingOrDefaultHeader(t,o.ContentType,d.ApplicationJson);let r=await this.put(e,p,t);return this._processResponse(r,this.requestOptions)}async patchJson(e,a,t={}){let p=JSON.stringify(a,null,2);t[o.Accept]=this._getExistingOrDefaultHeader(t,o.Accept,d.ApplicationJson),t[o.ContentType]=this._getExistingOrDefaultHeader(t,o.ContentType,d.ApplicationJson);let r=await this.patch(e,p,t);return this._processResponse(r,this.requestOptions)}async request(e,a,t,r){if(this._disposed)throw new Error("Client has already been disposed.");let i,o=new URL(a),d=this._prepareRequest(e,o,r),m=this._allowRetries&&-1!=l.indexOf(e)?this._maxRetries+1:1,c=0;for(;c<m;){if(i=await this.requestRaw(d,t),i&&i.message&&i.message.statusCode===p.Unauthorized){let e;for(let a=0;a<this.handlers.length;a++)if(this.handlers[a].canHandleAuthentication(i)){e=this.handlers[a];break}return e?e.handleAuthentication(this,d,t):i}let a=this._maxRedirects;for(;-1!=s.indexOf(i.message.statusCode)&&this._allowRedirects&&a>0;){const p=i.message.headers.location;if(!p)break;let s=new URL(p);if("https:"==o.protocol&&o.protocol!=s.protocol&&!this._allowRedirectDowngrade)throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.");if(await i.readBody(),s.hostname!==o.hostname)for(let e in r)"authorization"===e.toLowerCase()&&delete r[e];d=this._prepareRequest(e,s,r),i=await this.requestRaw(d,t),a--}if(-1==n.indexOf(i.message.statusCode))return i;c+=1,c<m&&(await i.readBody(),await this._performExponentialBackoff(c))}return i}dispose(){this._agent&&this._agent.destroy(),this._disposed=!0}requestRaw(e,a){return new Promise((t,p)=>{this.requestRawWithCallback(e,a,function(e,a){e&&p(e),t(a)})})}requestRawWithCallback(e,a,t){let p;"string"==typeof a&&(e.options.headers["Content-Length"]=Buffer.byteLength(a,"utf8"));let r=!1,i=(e,a)=>{r||(r=!0,t(e,a))},o=e.httpModule.request(e.options,e=>{let a=new c(e);i(null,a)});o.on("socket",e=>{p=e}),o.setTimeout(this._socketTimeout||18e4,()=>{p&&p.end(),i(new Error("Request timeout: "+e.options.path),null)}),o.on("error",function(e){i(e,null)}),a&&"string"==typeof a&&o.write(a,"utf8"),a&&"string"!=typeof a?(a.on("close",function(){o.end()}),a.pipe(o)):o.end()}getAgent(e){let a=new URL(e);return this._getAgent(a)}_prepareRequest(e,a,t){const p={};p.parsedUrl=a;const o="https:"===p.parsedUrl.protocol;p.httpModule=o?i:r;const d=o?443:80;return p.options={},p.options.host=p.parsedUrl.hostname,p.options.port=p.parsedUrl.port?parseInt(p.parsedUrl.port):d,p.options.path=(p.parsedUrl.pathname||"")+(p.parsedUrl.search||""),p.options.method=e,p.options.headers=this._mergeHeaders(t),null!=this.userAgent&&(p.options.headers["user-agent"]=this.userAgent),p.options.agent=this._getAgent(p.parsedUrl),this.handlers&&this.handlers.forEach(e=>{e.prepareRequest(p.options)}),p}_mergeHeaders(e){const a=e=>Object.keys(e).reduce((a,t)=>(a[t.toLowerCase()]=e[t],a),{});return this.requestOptions&&this.requestOptions.headers?Object.assign({},a(this.requestOptions.headers),a(e)):a(e||{})}_getExistingOrDefaultHeader(e,a,t){let p;var r;return this.requestOptions&&this.requestOptions.headers&&(p=(r=this.requestOptions.headers,Object.keys(r).reduce((e,a)=>(e[a.toLowerCase()]=r[a],e),{}))[a]),e[a]||p||t}_getAgent(e){let a,p=N.getProxyUrl(e),o=p&&p.hostname;if(this._keepAlive&&o&&(a=this._proxyAgent),this._keepAlive&&!o&&(a=this._agent),a)return a;const d="https:"===e.protocol;let s=100;if(this.requestOptions&&(s=this.requestOptions.maxSockets||r.globalAgent.maxSockets),o){t||(t=R);const e={maxSockets:s,keepAlive:this._keepAlive,proxy:{...(p.username||p.password)&&{proxyAuth:`${p.username}:${p.password}`},host:p.hostname,port:p.port}};let r;const i="https:"===p.protocol;r=d?i?t.httpsOverHttps:t.httpsOverHttp:i?t.httpOverHttps:t.httpOverHttp,a=r(e),this._proxyAgent=a}if(this._keepAlive&&!a){const e={keepAlive:this._keepAlive,maxSockets:s};a=d?new i.Agent(e):new r.Agent(e),this._agent=a}return a||(a=d?i.globalAgent:r.globalAgent),d&&this._ignoreSslError&&(a.options=Object.assign(a.options||{},{rejectUnauthorized:!1})),a}_performExponentialBackoff(e){e=Math.min(10,e);const a=5*Math.pow(2,e);return new Promise(e=>setTimeout(()=>e(),a))}static dateTimeDeserializer(e,a){if("string"==typeof a){let e=new Date(a);if(!isNaN(e.valueOf()))return e}return a}async _processResponse(e,a){return new Promise(async(t,r)=>{const i=e.message.statusCode,o={statusCode:i,result:null,headers:{}};let d,s;i==p.NotFound&&t(o);try{s=await e.readBody(),s&&s.length>0&&(d=a&&a.deserializeDates?JSON.parse(s,u.dateTimeDeserializer):JSON.parse(s),o.result=d),o.headers=e.message.headers}catch(e){}if(i>299){let e;e=d&&d.message?d.message:s&&s.length>0?s:"Failed request: ("+i+")";let a=new m(e,i);a.result=o.result,r(a)}else t(o)})}}a.HttpClient=u}),V=_(function(e,a){Object.defineProperty(a,"__esModule",{value:!0}),a.BasicCredentialHandler=class{constructor(e,a){this.username=e,this.password=a}prepareRequest(e){e.headers.Authorization="Basic "+Buffer.from(this.username+":"+this.password).toString("base64")}canHandleAuthentication(e){return!1}handleAuthentication(e,a,t){return null}},a.BearerCredentialHandler=class{constructor(e){this.token=e}prepareRequest(e){e.headers.Authorization="Bearer "+this.token}canHandleAuthentication(e){return!1}handleAuthentication(e,a,t){return null}},a.PersonalAccessTokenCredentialHandler=class{constructor(e){this.token=e}prepareRequest(e){e.headers.Authorization="Basic "+Buffer.from("PAT:"+this.token).toString("base64")}canHandleAuthentication(e){return!1}handleAuthentication(e,a,t){return null}}}),j=_(function(e,a){var t=y&&y.__awaiter||function(e,a,t,p){return new(t||(t=Promise))(function(r,i){function o(e){try{s(p.next(e))}catch(e){i(e)}}function d(e){try{s(p.throw(e))}catch(e){i(e)}}function s(e){var a;e.done?r(e.value):(a=e.value,a instanceof t?a:new t(function(e){e(a)})).then(o,d)}s((p=p.apply(e,a||[])).next())})};Object.defineProperty(a,"__esModule",{value:!0}),a.OidcClient=void 0;class p{static createHttpClient(e=!0,a=10){const t={allowRetries:e,maxRetries:a};return new F.HttpClient("actions/oidc-client",[new V.BearerCredentialHandler(p.getRequestToken())],t)}static getRequestToken(){const e=process.env.ACTIONS_ID_TOKEN_REQUEST_TOKEN;if(!e)throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable");return e}static getIDTokenUrl(){const e=process.env.ACTIONS_ID_TOKEN_REQUEST_URL;if(!e)throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable");return e}static getCall(e){var a;return t(this,void 0,void 0,function*(){const t=p.createHttpClient(),r=yield t.getJson(e).catch(e=>{throw new Error(`Failed to get ID Token. \n \n        Error Code : ${e.statusCode}\n \n        Error Message: ${e.result.message}`)}),i=null===(a=r.result)||void 0===a?void 0:a.value;if(!i)throw new Error("Response json body do not have ID Token field");return i})}static getIDToken(e){return t(this,void 0,void 0,function*(){try{let a=p.getIDTokenUrl();e&&(a=`${a}&audience=${encodeURIComponent(e)}`),x.debug("ID token url is "+a);const t=yield p.getCall(a);return x.setSecret(t),t}catch(e){throw new Error("Error message: "+e.message)}})}}a.OidcClient=p}),x=_(function(e,p){var r=y&&y.__createBinding||(Object.create?function(e,a,t,p){void 0===p&&(p=t),Object.defineProperty(e,p,{enumerable:!0,get:function(){return a[t]}})}:function(e,a,t,p){void 0===p&&(p=t),e[p]=a[t]}),i=y&&y.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),o=y&&y.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var t in e)"default"!==t&&Object.hasOwnProperty.call(e,t)&&r(a,e,t);return i(a,e),a},d=y&&y.__awaiter||function(e,a,t,p){return new(t||(t=Promise))(function(r,i){function o(e){try{s(p.next(e))}catch(e){i(e)}}function d(e){try{s(p.throw(e))}catch(e){i(e)}}function s(e){var a;e.done?r(e.value):(a=e.value,a instanceof t?a:new t(function(e){e(a)})).then(o,d)}s((p=p.apply(e,a||[])).next())})};Object.defineProperty(p,"__esModule",{value:!0}),p.getIDToken=p.getState=p.saveState=p.group=p.endGroup=p.startGroup=p.info=p.notice=p.warning=p.error=p.debug=p.isDebug=p.setFailed=p.setCommandEcho=p.setOutput=p.getBooleanInput=p.getMultilineInput=p.getInput=p.addPath=p.setSecret=p.exportVariable=p.ExitCode=void 0;const s=o(t),n=o(a);var l;function m(e,a){const t=process.env["INPUT_"+e.replace(/ /g,"_").toUpperCase()]||"";if(a&&a.required&&!t)throw new Error("Input required and not supplied: "+e);return a&&!1===a.trimWhitespace?t:t.trim()}function c(e,a={}){O.issueCommand("error",S.toCommandProperties(a),e instanceof Error?e.toString():e)}function u(e){O.issue("group",e)}function h(){O.issue("endgroup")}!function(e){e[e.Success=0]="Success",e[e.Failure=1]="Failure"}(l=p.ExitCode||(p.ExitCode={})),p.exportVariable=function(e,a){const t=S.toCommandValue(a);if(process.env[e]=t,process.env.GITHUB_ENV){const a="_GitHubActionsFileCommandDelimeter_";A.issueCommand("ENV",`${e}<<${a}${s.EOL}${t}${s.EOL}${a}`)}else O.issueCommand("set-env",{name:e},t)},p.setSecret=function(e){O.issueCommand("add-mask",{},e)},p.addPath=function(e){process.env.GITHUB_PATH?A.issueCommand("PATH",e):O.issueCommand("add-path",{},e),process.env.PATH=`${e}${n.delimiter}${process.env.PATH}`},p.getInput=m,p.getMultilineInput=function(e,a){return m(e,a).split("\n").filter(e=>""!==e)},p.getBooleanInput=function(e,a){const t=m(e,a);if(["true","True","TRUE"].includes(t))return!0;if(["false","False","FALSE"].includes(t))return!1;throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${e}\nSupport boolean input list: \`true | True | TRUE | false | False | FALSE\``)},p.setOutput=function(e,a){process.stdout.write(s.EOL),O.issueCommand("set-output",{name:e},a)},p.setCommandEcho=function(e){O.issue("echo",e?"on":"off")},p.setFailed=function(e){process.exitCode=l.Failure,c(e)},p.isDebug=function(){return"1"===process.env.RUNNER_DEBUG},p.debug=function(e){O.issueCommand("debug",{},e)},p.error=c,p.warning=function(e,a={}){O.issueCommand("warning",S.toCommandProperties(a),e instanceof Error?e.toString():e)},p.notice=function(e,a={}){O.issueCommand("notice",S.toCommandProperties(a),e instanceof Error?e.toString():e)},p.info=function(e){process.stdout.write(e+s.EOL)},p.startGroup=u,p.endGroup=h,p.group=function(e,a){return d(this,void 0,void 0,function*(){let t;u(e);try{t=yield a()}finally{h()}return t})},p.saveState=function(e,a){O.issueCommand("save-state",{name:e},a)},p.getState=function(e){return process.env["STATE_"+e]||""},p.getIDToken=function(e){return d(this,void 0,void 0,function*(){return yield j.OidcClient.getIDToken(e)})}}),I=_(function(e,a){Object.defineProperty(a,"__esModule",{value:!0}),a.Context=void 0,a.Context=class{constructor(){if(this.payload={},process.env.GITHUB_EVENT_PATH)if(p.existsSync(process.env.GITHUB_EVENT_PATH))this.payload=JSON.parse(p.readFileSync(process.env.GITHUB_EVENT_PATH,{encoding:"utf8"}));else{const e=process.env.GITHUB_EVENT_PATH;process.stdout.write(`GITHUB_EVENT_PATH ${e} does not exist${t.EOL}`)}this.eventName=process.env.GITHUB_EVENT_NAME,this.sha=process.env.GITHUB_SHA,this.ref=process.env.GITHUB_REF,this.workflow=process.env.GITHUB_WORKFLOW,this.action=process.env.GITHUB_ACTION,this.actor=process.env.GITHUB_ACTOR,this.job=process.env.GITHUB_JOB,this.runNumber=parseInt(process.env.GITHUB_RUN_NUMBER,10),this.runId=parseInt(process.env.GITHUB_RUN_ID,10)}get issue(){const e=this.payload;return Object.assign(Object.assign({},this.repo),{number:(e.issue||e.pull_request||e).number})}get repo(){if(process.env.GITHUB_REPOSITORY){const[e,a]=process.env.GITHUB_REPOSITORY.split("/");return{owner:e,repo:a}}if(this.payload.repository)return{owner:this.payload.repository.owner.login,repo:this.payload.repository.name};throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'")}}}),U=_(function(e,a){var t=y&&y.__createBinding||(Object.create?function(e,a,t,p){void 0===p&&(p=t),Object.defineProperty(e,p,{enumerable:!0,get:function(){return a[t]}})}:function(e,a,t,p){void 0===p&&(p=t),e[p]=a[t]}),p=y&&y.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),r=y&&y.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&t(a,e,r);return p(a,e),a};Object.defineProperty(a,"__esModule",{value:!0}),a.getApiBaseUrl=a.getProxyAgent=a.getAuthString=void 0;const i=r(F);a.getAuthString=function(e,a){if(!e&&!a.auth)throw new Error("Parameter token or opts.auth is required");if(e&&a.auth)throw new Error("Parameters token and opts.auth may not both be specified");return"string"==typeof a.auth?a.auth:"token "+e},a.getProxyAgent=function(e){return(new i.HttpClient).getAgent(e)},a.getApiBaseUrl=function(){return process.env.GITHUB_API_URL||"https://api.github.com"}});function G(){return"object"==typeof process&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}var B=function e(a,t,p,r){if("function"!=typeof p)throw new Error("method for before hook must be a function");return r||(r={}),Array.isArray(t)?t.reverse().reduce(function(t,p){return e.bind(null,a,p,t,r)},p)():Promise.resolve().then(function(){return a.registry[t]?a.registry[t].reduce(function(e,a){return a.hook.bind(null,e,r)},p)():p(r)})},L=function(e,a,t,p){var r=p;e.registry[t]||(e.registry[t]=[]),"before"===a&&(p=function(e,a){return Promise.resolve().then(r.bind(null,a)).then(e.bind(null,a))}),"after"===a&&(p=function(e,a){var t;return Promise.resolve().then(e.bind(null,a)).then(function(e){return r(t=e,a)}).then(function(){return t})}),"error"===a&&(p=function(e,a){return Promise.resolve().then(e.bind(null,a)).catch(function(e){return r(e,a)})}),e.registry[t].push({hook:p,orig:r})},M=function(e,a,t){if(e.registry[a]){var p=e.registry[a].map(function(e){return e.orig}).indexOf(t);-1!==p&&e.registry[a].splice(p,1)}},q=Function.bind,$=q.bind(q);function H(e,a,t){var p=$(M,null).apply(null,t?[a,t]:[a]);e.api={remove:p},e.remove=p,["before","error","after","wrap"].forEach(function(p){var r=t?[a,p,t]:[a,p];e[p]=e.api[p]=$(L,null).apply(null,r)})}function z(){var e={registry:{}},a=B.bind(null,e);return H(a,e),a}var W=!1;function J(){return W||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),W=!0),z()}J.Singular=function(){var e={registry:{}},a=B.bind(null,e,"h");return H(a,e,"h"),a}.bind(),J.Collection=z.bind();var Y=J,K=J.Singular,Q=J.Collection;function X(e){return"[object Object]"===Object.prototype.toString.call(e)}function Z(e){for(const a in e)void 0===e[a]&&delete e[a];return e}function ee(e,a,t){if("string"==typeof a){let[e,p]=a.split(" ");t=Object.assign(p?{method:e,url:p}:{url:e},t)}else t=Object.assign({},a);var p;t.headers=(p=t.headers)?Object.keys(p).reduce((e,a)=>(e[a.toLowerCase()]=p[a],e),{}):{},Z(t),Z(t.headers);const r=function e(a,t){const p=Object.assign({},a);return Object.keys(t).forEach(r=>{var i,o,d;!1!==X(i=t[r])&&(void 0===(o=i.constructor)||!1!==X(d=o.prototype)&&!1!==d.hasOwnProperty("isPrototypeOf"))?r in a?p[r]=e(a[r],t[r]):Object.assign(p,{[r]:t[r]}):Object.assign(p,{[r]:t[r]})}),p}(e||{},t);return e&&e.mediaType.previews.length&&(r.mediaType.previews=e.mediaType.previews.filter(e=>!r.mediaType.previews.includes(e)).concat(r.mediaType.previews)),r.mediaType.previews=r.mediaType.previews.map(e=>e.replace(/-preview/,"")),r}Y.Hook=J,Y.Singular=K,Y.Collection=Q;const ae=/\{[^}]+\}/g;function te(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function pe(e,a){return Object.keys(e).filter(e=>!a.includes(e)).reduce((a,t)=>(a[t]=e[t],a),{})}function re(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e}).join("")}function ie(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function oe(e,a,t){return a="+"===e||"#"===e?re(a):ie(a),t?ie(t)+"="+a:a}function de(e){return null!=e}function se(e){return";"===e||"&"===e||"?"===e}function ne(e,a){var t=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(e,p,r){if(p){let e="";const r=[];if(-1!==t.indexOf(p.charAt(0))&&(e=p.charAt(0),p=p.substr(1)),p.split(/,/g).forEach(function(t){var p=/([^:\*]*)(?::(\d+)|(\*))?/.exec(t);r.push(function(e,a,t,p){var r=e[t],i=[];if(de(r)&&""!==r)if("string"==typeof r||"number"==typeof r||"boolean"==typeof r)r=r.toString(),p&&"*"!==p&&(r=r.substring(0,parseInt(p,10))),i.push(oe(a,r,se(a)?t:""));else if("*"===p)Array.isArray(r)?r.filter(de).forEach(function(e){i.push(oe(a,e,se(a)?t:""))}):Object.keys(r).forEach(function(e){de(r[e])&&i.push(oe(a,r[e],e))});else{const e=[];Array.isArray(r)?r.filter(de).forEach(function(t){e.push(oe(a,t))}):Object.keys(r).forEach(function(t){de(r[t])&&(e.push(ie(t)),e.push(oe(a,r[t].toString())))}),se(a)?i.push(ie(t)+"="+e.join(",")):0!==e.length&&i.push(e.join(","))}else";"===a?de(r)&&i.push(ie(t)):""!==r||"&"!==a&&"?"!==a?""===r&&i.push(""):i.push(ie(t)+"=");return i}(a,e,p[1],p[2]||p[3]))}),e&&"+"!==e){var i=",";return"?"===e?i="&":"#"!==e&&(i=e),(0!==r.length?e:"")+r.join(i)}return r.join(",")}return re(r)})}function le(e){let a,t=e.method.toUpperCase(),p=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),r=Object.assign({},e.headers),i=pe(e,["method","baseUrl","url","headers","request","mediaType"]);const o=function(e){const a=e.match(ae);return a?a.map(te).reduce((e,a)=>e.concat(a),[]):[]}(p);var d;p=(d=p,{expand:ne.bind(null,d)}).expand(i),/^http/.test(p)||(p=e.baseUrl+p);const s=pe(i,Object.keys(e).filter(e=>o.includes(e)).concat("baseUrl"));if(!/application\/octet-stream/i.test(r.accept)&&(e.mediaType.format&&(r.accept=r.accept.split(/,/).map(a=>a.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,"application/vnd$1$2."+e.mediaType.format)).join(",")),e.mediaType.previews.length)){const a=r.accept.match(/[\w-]+(?=-preview)/g)||[];r.accept=a.concat(e.mediaType.previews).map(a=>`application/vnd.github.${a}-preview${e.mediaType.format?"."+e.mediaType.format:"+json"}`).join(",")}return["GET","HEAD"].includes(t)?p=function(e,a){const t=/\?/.test(e)?"&":"?",p=Object.keys(a);return 0===p.length?e:e+t+p.map(e=>"q"===e?"q="+a.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(a[e])}`).join("&")}(p,s):"data"in s?a=s.data:Object.keys(s).length?a=s:r["content-length"]=0,r["content-type"]||void 0===a||(r["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&void 0===a&&(a=""),Object.assign({method:t,url:p,headers:r},void 0!==a?{body:a}:null,e.request?{request:e.request}:null)}function me(e,a,t){return le(ee(e,a,t))}const ce=function e(a,t){const p=ee(a,t),r=me.bind(null,p);return Object.assign(r,{DEFAULTS:p,defaults:e.bind(null,p),merge:ee.bind(null,p),parse:le})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":"octokit-endpoint.js/6.0.12 "+G()},mediaType:{format:"",previews:[]}});function ue(e){return"[object Object]"===Object.prototype.toString.call(e)}var he={},fe=he;function ve(e){return e<0?-1:1}function ge(e,a){a.unsigned||--e;const t=a.unsigned?0:-Math.pow(2,e),p=Math.pow(2,e)-1,r=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e),i=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(e,o){o||(o={});let d=+e;if(o.enforceRange){if(!Number.isFinite(d))throw new TypeError("Argument is not a finite number");if(d=ve(d)*Math.floor(Math.abs(d)),d<t||d>p)throw new TypeError("Argument is not in byte range");return d}if(!isNaN(d)&&o.clamp)return d=function(e){return e%1==.5&&0==(1&e)?Math.floor(e):Math.round(e)}(d),d<t&&(d=t),d>p&&(d=p),d;if(!Number.isFinite(d)||0===d)return 0;if(d=ve(d)*Math.floor(Math.abs(d)),d%=r,!a.unsigned&&d>=i)return d-r;if(a.unsigned)if(d<0)d+=r;else if(-0===d)return 0;return d}}he.void=function(){},he.boolean=function(e){return!!e},he.byte=ge(8,{unsigned:!1}),he.octet=ge(8,{unsigned:!0}),he.short=ge(16,{unsigned:!1}),he["unsigned short"]=ge(16,{unsigned:!0}),he.long=ge(32,{unsigned:!1}),he["unsigned long"]=ge(32,{unsigned:!0}),he["long long"]=ge(32,{unsigned:!1,moduloBitLength:64}),he["unsigned long long"]=ge(32,{unsigned:!0,moduloBitLength:64}),he.double=function(e){const a=+e;if(!Number.isFinite(a))throw new TypeError("Argument is not a finite floating-point value");return a},he["unrestricted double"]=function(e){const a=+e;if(isNaN(a))throw new TypeError("Argument is NaN");return a},he.float=he.double,he["unrestricted float"]=he["unrestricted double"],he.DOMString=function(e,a){return a||(a={}),a.treatNullAsEmptyString&&null===e?"":String(e)},he.ByteString=function(e,a){const t=String(e);let p=void 0;for(let e=0;void 0!==(p=t.codePointAt(e));++e)if(p>255)throw new TypeError("Argument is not a valid bytestring");return t},he.USVString=function(e){const a=String(e),t=a.length,p=[];for(let e=0;e<t;++e){const r=a.charCodeAt(e);if(r<55296||r>57343)p.push(String.fromCodePoint(r));else if(56320<=r&&r<=57343)p.push(String.fromCodePoint(65533));else if(e===t-1)p.push(String.fromCodePoint(65533));else{const t=a.charCodeAt(e+1);56320<=t&&t<=57343?(p.push(String.fromCodePoint(65536+1024*(1023&r)+(1023&t))),++e):p.push(String.fromCodePoint(65533))}}return p.join("")},he.Date=function(e,a){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},he.RegExp=function(e,a){return e instanceof RegExp||(e=new RegExp(e)),e};var we=_(function(e){e.exports.mixin=function(e,a){const t=Object.getOwnPropertyNames(a);for(let p=0;p<t.length;++p)Object.defineProperty(e,t[p],Object.getOwnPropertyDescriptor(a,t[p]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(a){return a[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(a){return a[e.exports.implSymbol]}}),ye=E({__proto__:null,default:[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1e3,1e3],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6e3],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8e3,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8e3]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9e3],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[3e4]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13e3,13e3],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43e3,43e3],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64e3,64e3],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66e3,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[12e4,12e4],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128e3,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23e3]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149e3]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32e3]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195e3,195e3],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[4e4]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918e3,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]}),be={TRANSITIONAL:0,NONTRANSITIONAL:1};function _e(e){return e.split("\0").map(function(e){return e.normalize("NFC")}).join("\0")}function Ee(e){for(var a=0,t=ye.length-1;a<=t;){var p=Math.floor((a+t)/2),r=ye[p];if(r[0][0]<=e&&r[0][1]>=e)return r;r[0][0]>e?t=p-1:a=p+1}return null}var Te=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function Se(e){return e.replace(Te,"_").length}var Oe=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function Ae(e,a){"xn--"===e.substr(0,4)&&(e=c.toUnicode(e));var t=!1;(_e(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(Oe))&&(t=!0);for(var p=Se(e),r=0;r<p;++r){var i=Ee(e.codePointAt(r));if(Ne===be.TRANSITIONAL&&"valid"!==i[1]||Ne===be.NONTRANSITIONAL&&"valid"!==i[1]&&"deviation"!==i[1]){t=!0;break}}return{label:e,error:t}}function Ne(e,a,t){var p=function(e,a,t){for(var p=!1,r="",i=Se(e),o=0;o<i;++o){var d=e.codePointAt(o),s=Ee(d);switch(s[1]){case"disallowed":p=!0,r+=String.fromCodePoint(d);break;case"ignored":break;case"mapped":r+=String.fromCodePoint.apply(String,s[2]);break;case"deviation":r+=t===be.TRANSITIONAL?String.fromCodePoint.apply(String,s[2]):String.fromCodePoint(d);break;case"valid":r+=String.fromCodePoint(d);break;case"disallowed_STD3_mapped":a?(p=!0,r+=String.fromCodePoint(d)):r+=String.fromCodePoint.apply(String,s[2]);break;case"disallowed_STD3_valid":a&&(p=!0),r+=String.fromCodePoint(d)}}return{string:r,error:p}}(e,a,t);p.string=_e(p.string);for(var r=p.string.split("."),i=0;i<r.length;++i)try{var o=Ae(r[i]);r[i]=o.label,p.error=p.error||o.error}catch(e){p.error=!0}return{string:r.join("."),error:p.error}}var De=be,Ce=_(function(e){const a={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},t=Symbol("failure");function p(e){return c.ucs2.decode(e).length}function r(e,a){const t=e[a];return isNaN(t)?void 0:String.fromCodePoint(t)}function i(e){return e>=48&&e<=57}function o(e){return e>=65&&e<=90||e>=97&&e<=122}function d(e){return i(e)||e>=65&&e<=70||e>=97&&e<=102}function s(e){return"."===e||"%2e"===e.toLowerCase()}function n(e){return 2===e.length&&o(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function l(e){return void 0!==a[e]}function m(e){return l(e.scheme)}function u(e){let a=e.toString(16).toUpperCase();return 1===a.length&&(a="0"+a),"%"+a}function h(e){return e<=31||e>126}const f=new Set([32,34,35,60,62,63,96,123,125]);function v(e){return h(e)||f.has(e)}const g=new Set([47,58,59,61,64,91,92,93,94,124]);function w(e){return v(e)||g.has(e)}function y(e,a){const t=String.fromCodePoint(e);return a(e)?function(e){const a=new Buffer(e);let t="";for(let e=0;e<a.length;++e)t+=u(a[e]);return t}(t):t}function b(e){let a=10;return e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),a=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),a=8),""===e?0:(10===a?/[^0-9]/:16===a?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?t:parseInt(e,a)}function _(e,a){if("["===e[0])return"]"!==e[e.length-1]?t:function(e){const a=[0,0,0,0,0,0,0,0];let p=0,o=null,s=0;if(58===(e=c.ucs2.decode(e))[s]){if(58!==e[s+1])return t;s+=2,++p,o=p}for(;s<e.length;){if(8===p)return t;if(58===e[s]){if(null!==o)return t;++s,++p,o=p;continue}let n=0,l=0;for(;l<4&&d(e[s]);)n=16*n+parseInt(r(e,s),16),++s,++l;if(46===e[s]){if(0===l)return t;if(s-=l,p>6)return t;let o=0;for(;void 0!==e[s];){let d=null;if(o>0){if(!(46===e[s]&&o<4))return t;++s}if(!i(e[s]))return t;for(;i(e[s]);){const a=parseInt(r(e,s));if(null===d)d=a;else{if(0===d)return t;d=10*d+a}if(d>255)return t;++s}a[p]=256*a[p]+d,++o,2!==o&&4!==o||++p}if(4!==o)return t;break}if(58===e[s]){if(++s,void 0===e[s])return t}else if(void 0!==e[s])return t;a[p]=n,++p}if(null!==o){let e=p-o;for(p=7;0!==p&&e>0;){const t=a[o+e-1];a[o+e-1]=a[p],a[p]=t,--p,--e}}else if(null===o&&8!==p)return t;return a}(e.substring(1,e.length-1));if(!a)return function(e){if(-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return t;let a="";const p=c.ucs2.decode(e);for(let e=0;e<p.length;++e)a+=y(p[e],h);return a}(e);const p=(o=function(e){const a=new Buffer(e),t=[];for(let e=0;e<a.length;++e)37!==a[e]?t.push(a[e]):37===a[e]&&d(a[e+1])&&d(a[e+2])?(t.push(parseInt(a.slice(e+1,e+3).toString(),16)),e+=2):t.push(a[e]);return new Buffer(t).toString()}(e),n=(n=(s=Ne(o,!1,De.NONTRANSITIONAL)).string.split(".")).map(function(e){try{return c.toASCII(e)}catch(a){return s.error=!0,e}}),s.error?null:n.join("."));var o,s,n;if(null===p)return t;if(-1!==p.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return t;const l=function(e){const a=e.split(".");if(""===a[a.length-1]&&a.length>1&&a.pop(),a.length>4)return e;const p=[];for(const r of a){if(""===r)return e;const a=b(r);if(a===t)return e;p.push(a)}for(let e=0;e<p.length-1;++e)if(p[e]>255)return t;if(p[p.length-1]>=Math.pow(256,5-p.length))return t;let r=p.pop(),i=0;for(const e of p)r+=e*Math.pow(256,3-i),++i;return r}(p);return"number"==typeof l||l===t?l:p}function E(e){return"number"==typeof e?function(e){let a="",t=e;for(let e=1;e<=4;++e)a=String(t%256)+a,4!==e&&(a="."+a),t=Math.floor(t/256);return a}(e):e instanceof Array?"["+function(e){let a="";const t=function(e){let a=null,t=1,p=null,r=0;for(let i=0;i<e.length;++i)0!==e[i]?(r>t&&(a=p,t=r),p=null,r=0):(null===p&&(p=i),++r);return r>t&&(a=p,t=r),{idx:a,len:t}}(e).idx;let p=!1;for(let r=0;r<=7;++r)p&&0===e[r]||(p&&(p=!1),t!==r?(a+=e[r].toString(16),7!==r&&(a+=":")):(a+=0===r?"::":":",p=!0));return a}(e)+"]":e}function T(e){const a=e.path;0!==a.length&&("file"===e.scheme&&1===a.length&&/^[A-Za-z]:$/.test(a[0])||a.pop())}function S(e){return""!==e.username||""!==e.password}function O(e,a,p,r,i){if(this.pointer=0,this.input=e,this.base=a||null,this.encodingOverride=p||"utf-8",this.stateOverride=i,this.url=r,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const o=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(o!==this.input&&(this.parseError=!0),this.input=o,this.state=i||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=c.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],a=isNaN(e)?void 0:String.fromCodePoint(e),p=this["parse "+this.state](e,a);if(!p)break;if(p===t){this.failure=!0;break}}}O.prototype["parse scheme start"]=function(e,a){if(o(e))this.buffer+=a.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,t;this.state="no scheme",--this.pointer}return!0},O.prototype["parse scheme"]=function(e,a){if(function(e){return o(e)||i(e)}(e)||43===e||45===e||46===e)this.buffer+=a.toLowerCase();else if(58===e){if(this.stateOverride){if(m(this.url)&&!l(this.buffer))return!1;if(!m(this.url)&&l(this.buffer))return!1;if((S(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):m(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":m(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,t;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},O.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?t:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},O.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},O.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},O.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):m(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},O.prototype["parse relative slash"]=function(e){return!m(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},O.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},O.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},O.prototype["parse authority"]=function(e,a){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=p(this.buffer);for(let a=0;a<e;++a){const e=this.buffer.codePointAt(a);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const t=y(e,w);this.passwordTokenSeenFlag?this.url.password+=t:this.url.username+=t}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||m(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,t;this.pointer-=p(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=a;return!0},O.prototype["parse hostname"]=O.prototype["parse host"]=function(e,a){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||m(this.url)&&92===e){if(--this.pointer,m(this.url)&&""===this.buffer)return this.parseError=!0,t;if(this.stateOverride&&""===this.buffer&&(S(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=_(this.buffer,m(this.url));if(e===t)return t;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=a;else{if(""===this.buffer)return this.parseError=!0,t;const e=_(this.buffer,m(this.url));if(e===t)return t;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},O.prototype["parse port"]=function(e,p){if(i(e))this.buffer+=p;else{if(!(isNaN(e)||47===e||63===e||35===e||m(this.url)&&92===e||this.stateOverride))return this.parseError=!0,t;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,t;this.url.port=e===a[this.url.scheme]?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}return!0};const A=new Set([47,92,63,35]);O.prototype["parse file"]=function(e){var a;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(a=this.input[this.pointer+1],!o(e)||58!==a&&124!==a)||this.input.length-this.pointer-1>=2&&!A.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),T(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},O.prototype["parse file slash"]=function(e){var a;return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(2===(a=this.base.path[0]).length&&o(a.codePointAt(0))&&":"===a[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0},O.prototype["parse file host"]=function(e,a){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&n(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=_(this.buffer,m(this.url));if(e===t)return t;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=a;return!0},O.prototype["parse path start"]=function(e){return m(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},O.prototype["parse path"]=function(e){if(isNaN(e)||47===e||m(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(m(this.url)&&92===e&&(this.parseError=!0),".."!==(a=(a=this.buffer).toLowerCase())&&"%2e."!==a&&".%2e"!==a&&"%2e%2e"!==a?!s(this.buffer)||47===e||m(this.url)&&92===e?s(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&n(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""):(T(this.url),47===e||m(this.url)&&92===e||this.url.path.push("")),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||d(this.input[this.pointer+1])&&d(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=y(e,v);var a;return!0},O.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||d(this.input[this.pointer+1])&&d(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+y(e,h))),!0},O.prototype["parse query"]=function(e,a){if(isNaN(e)||!this.stateOverride&&35===e){m(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const a=new Buffer(this.buffer);for(let e=0;e<a.length;++e)this.url.query+=a[e]<33||a[e]>126||34===a[e]||35===a[e]||60===a[e]||62===a[e]?u(a[e]):String.fromCodePoint(a[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||d(this.input[this.pointer+1])&&d(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=a;return!0},O.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||d(this.input[this.pointer+1])&&d(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=y(e,h))),!0},e.exports.serializeURL=function(e,a){let t=e.scheme+":";if(null!==e.host?(t+="//",""===e.username&&""===e.password||(t+=e.username,""!==e.password&&(t+=":"+e.password),t+="@"),t+=E(e.host),null!==e.port&&(t+=":"+e.port)):null===e.host&&"file"===e.scheme&&(t+="//"),e.cannotBeABaseURL)t+=e.path[0];else for(const a of e.path)t+="/"+a;return null!==e.query&&(t+="?"+e.query),a||null===e.fragment||(t+="#"+e.fragment),t},e.exports.serializeURLOrigin=function(a){switch(a.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(a.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let a=e.scheme+"://";return a+=E(e.host),null!==e.port&&(a+=":"+e.port),a}({scheme:a.scheme,host:a.host,port:a.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,a){void 0===a&&(a={});const t=new O(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);return t.failure?"failure":t.url},e.exports.setTheUsername=function(e,a){e.username="";const t=c.ucs2.decode(a);for(let a=0;a<t.length;++a)e.username+=y(t[a],w)},e.exports.setThePassword=function(e,a){e.password="";const t=c.ucs2.decode(a);for(let a=0;a<t.length;++a)e.password+=y(t[a],w)},e.exports.serializeHost=E,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(a,t){return void 0===t&&(t={}),e.exports.basicURLParse(a,{baseURL:t.baseURL,encodingOverride:t.encodingOverride})}}),ke=class{constructor(e){const a=e[0],t=e[1];let p=null;if(void 0!==t&&(p=Ce.basicURLParse(t),"failure"===p))throw new TypeError("Invalid base URL");const r=Ce.basicURLParse(a,{baseURL:p});if("failure"===r)throw new TypeError("Invalid URL");this._url=r}get href(){return Ce.serializeURL(this._url)}set href(e){const a=Ce.basicURLParse(e);if("failure"===a)throw new TypeError("Invalid URL");this._url=a}get origin(){return Ce.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){Ce.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){Ce.cannotHaveAUsernamePasswordPort(this._url)||Ce.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){Ce.cannotHaveAUsernamePasswordPort(this._url)||Ce.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?Ce.serializeHost(e.host):Ce.serializeHost(e.host)+":"+Ce.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||Ce.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":Ce.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||Ce.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":Ce.serializeInteger(this._url.port)}set port(e){Ce.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:Ce.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],Ce.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const a=this._url;if(""===e)return void(a.query=null);const t="?"===e[0]?e.substring(1):e;a.query="",Ce.basicURLParse(t,{url:a,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const a="#"===e[0]?e.substring(1):e;this._url.fragment="",Ce.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}},Pe={URL:_(function(e){const a=we.implSymbol;function t(p){if(!this||this[a]||!(this instanceof t))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const r=[];for(let e=0;e<arguments.length&&e<2;++e)r[e]=arguments[e];r[0]=fe.USVString(r[0]),void 0!==r[1]&&(r[1]=fe.USVString(r[1])),e.exports.setup(this,r)}t.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const t=[];for(let e=0;e<arguments.length&&e<0;++e)t[e]=arguments[e];return this[a].toJSON.apply(this[a],t)},Object.defineProperty(t.prototype,"href",{get(){return this[a].href},set(e){e=fe.USVString(e),this[a].href=e},enumerable:!0,configurable:!0}),t.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(t.prototype,"origin",{get(){return this[a].origin},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"protocol",{get(){return this[a].protocol},set(e){e=fe.USVString(e),this[a].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"username",{get(){return this[a].username},set(e){e=fe.USVString(e),this[a].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"password",{get(){return this[a].password},set(e){e=fe.USVString(e),this[a].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"host",{get(){return this[a].host},set(e){e=fe.USVString(e),this[a].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hostname",{get(){return this[a].hostname},set(e){e=fe.USVString(e),this[a].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"port",{get(){return this[a].port},set(e){e=fe.USVString(e),this[a].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pathname",{get(){return this[a].pathname},set(e){e=fe.USVString(e),this[a].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"search",{get(){return this[a].search},set(e){e=fe.USVString(e),this[a].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hash",{get(){return this[a].hash},set(e){e=fe.USVString(e),this[a].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[a]instanceof ke,create(e,a){let p=Object.create(t.prototype);return this.setup(p,e,a),p},setup(e,t,p){p||(p={}),p.wrapper=e,e[a]=new ke(t,p),e[a][we.wrapperSymbol]=e},interface:t,expose:{Window:{URL:t},Worker:{URL:t}}}}).interface,serializeURL:Ce.serializeURL,serializeURLOrigin:Ce.serializeURLOrigin,basicURLParse:Ce.basicURLParse,setTheUsername:Ce.setTheUsername,setThePassword:Ce.setThePassword,serializeHost:Ce.serializeHost,serializeInteger:Ce.serializeInteger,parseURL:Ce.parseURL};const Re=l.Readable,Fe=Symbol("buffer"),Ve=Symbol("type");class je{constructor(){this[Ve]="";const e=arguments[0],a=arguments[1],t=[];if(e){const a=e,p=Number(a.length);for(let e=0;e<p;e++){const p=a[e];let r;r=p instanceof Buffer?p:ArrayBuffer.isView(p)?Buffer.from(p.buffer,p.byteOffset,p.byteLength):p instanceof ArrayBuffer?Buffer.from(p):p instanceof je?p[Fe]:Buffer.from("string"==typeof p?p:String(p)),t.push(r)}}this[Fe]=Buffer.concat(t);let p=a&&void 0!==a.type&&String(a.type).toLowerCase();p&&!/[^\u0020-\u007E]/.test(p)&&(this[Ve]=p)}get size(){return this[Fe].length}get type(){return this[Ve]}text(){return Promise.resolve(this[Fe].toString())}arrayBuffer(){const e=this[Fe],a=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(a)}stream(){const e=new Re;return e._read=function(){},e.push(this[Fe]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,a=arguments[0],t=arguments[1];let p,r;p=void 0===a?0:a<0?Math.max(e+a,0):Math.min(a,e),r=void 0===t?e:t<0?Math.max(e+t,0):Math.min(t,e);const i=Math.max(r-p,0),o=this[Fe].slice(p,p+i),d=new je([],{type:arguments[2]});return d[Fe]=o,d}}function xe(e,a,t){Error.call(this,e),this.message=e,this.type=a,t&&(this.code=this.errno=t.code),Error.captureStackTrace(this,this.constructor)}let Ie;Object.defineProperties(je.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(je.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),(xe.prototype=Object.create(Error.prototype)).constructor=xe,xe.prototype.name="FetchError";try{Ie=require("encoding").convert}catch(e){}const Ue=Symbol("Body internals"),Ge=l.PassThrough;function Be(e){var a=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},p=t.size;let r=void 0===p?0:p;var i=t.timeout;let o=void 0===i?0:i;null==e?e=null:Me(e)?e=Buffer.from(e.toString()):qe(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof l||(e=Buffer.from(String(e)))),this[Ue]={body:e,disturbed:!1,error:null},this.size=r,this.timeout=o,e instanceof l&&e.on("error",function(e){const t="AbortError"===e.name?e:new xe(`Invalid response body while trying to fetch ${a.url}: ${e.message}`,"system",e);a[Ue].error=t})}function Le(){var e=this;if(this[Ue].disturbed)return Be.Promise.reject(new TypeError("body used already for: "+this.url));if(this[Ue].disturbed=!0,this[Ue].error)return Be.Promise.reject(this[Ue].error);let a=this.body;if(null===a)return Be.Promise.resolve(Buffer.alloc(0));if(qe(a)&&(a=a.stream()),Buffer.isBuffer(a))return Be.Promise.resolve(a);if(!(a instanceof l))return Be.Promise.resolve(Buffer.alloc(0));let t=[],p=0,r=!1;return new Be.Promise(function(i,o){let d;e.timeout&&(d=setTimeout(function(){r=!0,o(new xe(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),a.on("error",function(a){"AbortError"===a.name?(r=!0,o(a)):o(new xe(`Invalid response body while trying to fetch ${e.url}: ${a.message}`,"system",a))}),a.on("data",function(a){if(!r&&null!==a){if(e.size&&p+a.length>e.size)return r=!0,void o(new xe(`content size at ${e.url} over limit: ${e.size}`,"max-size"));p+=a.length,t.push(a)}}),a.on("end",function(){if(!r){clearTimeout(d);try{i(Buffer.concat(t,p))}catch(a){o(new xe(`Could not create Buffer from response body for ${e.url}: ${a.message}`,"system",a))}}})})}function Me(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function qe(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function $e(e){let a,t,p=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return p instanceof l&&"function"!=typeof p.getBoundary&&(a=new Ge,t=new Ge,p.pipe(a),p.pipe(t),e[Ue].body=a,p=t),p}function He(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":Me(e)?"application/x-www-form-urlencoded;charset=UTF-8":qe(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?"multipart/form-data;boundary="+e.getBoundary():e instanceof l?null:"text/plain;charset=UTF-8"}function ze(e){const a=e.body;return null===a?0:qe(a)?a.size:Buffer.isBuffer(a)?a.length:a&&"function"==typeof a.getLengthSync&&(a._lengthRetrievers&&0==a._lengthRetrievers.length||a.hasKnownLength&&a.hasKnownLength())?a.getLengthSync():null}Be.prototype={get body(){return this[Ue].body},get bodyUsed(){return this[Ue].disturbed},arrayBuffer(){return Le.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return Le.call(this).then(function(a){return Object.assign(new je([],{type:e.toLowerCase()}),{[Fe]:a})})},json(){var e=this;return Le.call(this).then(function(a){try{return JSON.parse(a.toString())}catch(a){return Be.Promise.reject(new xe(`invalid json response body at ${e.url} reason: ${a.message}`,"invalid-json"))}})},text(){return Le.call(this).then(function(e){return e.toString()})},buffer(){return Le.call(this)},textConverted(){var e=this;return Le.call(this).then(function(a){return function(e,a){if("function"!=typeof Ie)throw new Error("The package `encoding` must be installed to use the textConverted() function");const t=a.get("content-type");let p,r,i="utf-8";return t&&(p=/charset=([^;]*)/i.exec(t)),r=e.slice(0,1024).toString(),!p&&r&&(p=/<meta.+?charset=(['"])(.+?)\1/i.exec(r)),!p&&r&&(p=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(r),p||(p=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(r),p&&p.pop()),p&&(p=/charset=(.*)/i.exec(p.pop()))),!p&&r&&(p=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(r)),p&&(i=p.pop(),"gb2312"!==i&&"gbk"!==i||(i="gb18030")),Ie(e,"UTF-8",i).toString()}(a,e.headers)})}},Object.defineProperties(Be.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),Be.mixIn=function(e){for(const a of Object.getOwnPropertyNames(Be.prototype))if(!(a in e)){const t=Object.getOwnPropertyDescriptor(Be.prototype,a);Object.defineProperty(e,a,t)}},Be.Promise=global.Promise;const We=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,Je=/[^\t\x20-\x7e\x80-\xff]/;function Ye(e){if(We.test(e=""+e)||""===e)throw new TypeError(e+" is not a legal HTTP header name")}function Ke(e){if(Je.test(e=""+e))throw new TypeError(e+" is not a legal HTTP header value")}function Qe(e,a){a=a.toLowerCase();for(const t in e)if(t.toLowerCase()===a)return t}const Xe=Symbol("map");class Ze{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[Xe]=Object.create(null),e instanceof Ze){const a=e.raw(),t=Object.keys(a);for(const e of t)for(const t of a[e])this.append(e,t)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const a=e[Symbol.iterator];if(null!=a){if("function"!=typeof a)throw new TypeError("Header pairs must be iterable");const t=[];for(const a of e){if("object"!=typeof a||"function"!=typeof a[Symbol.iterator])throw new TypeError("Each header pair must be iterable");t.push(Array.from(a))}for(const e of t){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const a of Object.keys(e))this.append(a,e[a])}}}get(e){Ye(e=""+e);const a=Qe(this[Xe],e);return void 0===a?null:this[Xe][a].join(", ")}forEach(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,t=ea(this),p=0;for(;p<t.length;){var r=t[p];e.call(a,r[1],r[0],this),t=ea(this),p++}}set(e,a){a=""+a,Ye(e=""+e),Ke(a);const t=Qe(this[Xe],e);this[Xe][void 0!==t?t:e]=[a]}append(e,a){a=""+a,Ye(e=""+e),Ke(a);const t=Qe(this[Xe],e);void 0!==t?this[Xe][t].push(a):this[Xe][e]=[a]}has(e){return Ye(e=""+e),void 0!==Qe(this[Xe],e)}delete(e){Ye(e=""+e);const a=Qe(this[Xe],e);void 0!==a&&delete this[Xe][a]}raw(){return this[Xe]}keys(){return ta(this,"key")}values(){return ta(this,"value")}[Symbol.iterator](){return ta(this,"key+value")}}function ea(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";const t=Object.keys(e[Xe]).sort();return t.map("key"===a?function(e){return e.toLowerCase()}:"value"===a?function(a){return e[Xe][a].join(", ")}:function(a){return[a.toLowerCase(),e[Xe][a].join(", ")]})}Ze.prototype.entries=Ze.prototype[Symbol.iterator],Object.defineProperty(Ze.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Ze.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const aa=Symbol("internal");function ta(e,a){const t=Object.create(pa);return t[aa]={target:e,kind:a,index:0},t}const pa=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==pa)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[aa];const a=e.index,t=ea(e.target,e.kind);return a>=t.length?{value:void 0,done:!0}:(this[aa].index=a+1,{value:t[a],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function ra(e){const a=Object.assign({__proto__:null},e[Xe]),t=Qe(e[Xe],"Host");return void 0!==t&&(a[t]=a[t][0]),a}Object.defineProperty(pa,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const ia=Symbol("Response internals"),oa=r.STATUS_CODES;class da{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Be.call(this,e,a);const t=a.status||200,p=new Ze(a.headers);if(null!=e&&!p.has("Content-Type")){const a=He(e);a&&p.append("Content-Type",a)}this[ia]={url:a.url,status:t,statusText:a.statusText||oa[t],headers:p,counter:a.counter}}get url(){return this[ia].url||""}get status(){return this[ia].status}get ok(){return this[ia].status>=200&&this[ia].status<300}get redirected(){return this[ia].counter>0}get statusText(){return this[ia].statusText}get headers(){return this[ia].headers}clone(){return new da($e(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Be.mixIn(da.prototype),Object.defineProperties(da.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(da.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const sa=Symbol("Request internals"),na=m.URL||Pe.URL,la=m.parse,ma=m.format;function ca(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new na(e).toString()),la(e)}const ua="destroy"in l.Readable.prototype;function ha(e){return"object"==typeof e&&"object"==typeof e[sa]}class fa{constructor(e){let a,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};ha(e)?a=ca(e.url):(a=ca(e&&e.href?e.href:""+e),e={});let p=t.method||e.method||"GET";if(p=p.toUpperCase(),(null!=t.body||ha(e)&&null!==e.body)&&("GET"===p||"HEAD"===p))throw new TypeError("Request with GET/HEAD method cannot have body");let r=null!=t.body?t.body:ha(e)&&null!==e.body?$e(e):null;Be.call(this,r,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const i=new Ze(t.headers||e.headers||{});if(null!=r&&!i.has("Content-Type")){const e=He(r);e&&i.append("Content-Type",e)}let o=ha(e)?e.signal:null;if("signal"in t&&(o=t.signal),null!=o&&!function(e){const a=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!a||"AbortSignal"!==a.constructor.name)}(o))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[sa]={method:p,redirect:t.redirect||e.redirect||"follow",headers:i,parsedURL:a,signal:o},this.follow=void 0!==t.follow?t.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==t.compress?t.compress:void 0===e.compress||e.compress,this.counter=t.counter||e.counter||0,this.agent=t.agent||e.agent}get method(){return this[sa].method}get url(){return ma(this[sa].parsedURL)}get headers(){return this[sa].headers}get redirect(){return this[sa].redirect}get signal(){return this[sa].signal}clone(){return new fa(this)}}function va(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}Be.mixIn(fa.prototype),Object.defineProperty(fa.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(fa.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),(va.prototype=Object.create(Error.prototype)).constructor=va,va.prototype.name="AbortError";const ga=m.URL||Pe.URL,wa=l.PassThrough;function ya(e,a){if(!ya.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return Be.Promise=ya.Promise,new ya.Promise(function(t,p){const o=new fa(e,a),d=function(e){const a=e[sa].parsedURL,t=new Ze(e[sa].headers);if(t.has("Accept")||t.set("Accept","*/*"),!a.protocol||!a.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(a.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof l.Readable&&!ua)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let p=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(p="0"),null!=e.body){const a=ze(e);"number"==typeof a&&(p=String(a))}p&&t.set("Content-Length",p),t.has("User-Agent")||t.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!t.has("Accept-Encoding")&&t.set("Accept-Encoding","gzip,deflate");let r=e.agent;return"function"==typeof r&&(r=r(a)),t.has("Connection")||r||t.set("Connection","close"),Object.assign({},a,{method:e.method,headers:ra(t),agent:r})}(o),s=("https:"===d.protocol?i:r).request,n=o.signal;let m=null;const c=function(){let e=new va("The user aborted a request.");p(e),o.body&&o.body instanceof l.Readable&&o.body.destroy(e),m&&m.body&&m.body.emit("error",e)};if(n&&n.aborted)return void c();const h=function(){c(),g()},f=s(d);let v;function g(){f.abort(),n&&n.removeEventListener("abort",h),clearTimeout(v)}n&&n.addEventListener("abort",h),o.timeout&&f.once("socket",function(e){v=setTimeout(function(){p(new xe("network timeout at: "+o.url,"request-timeout")),g()},o.timeout)}),f.on("error",function(e){p(new xe(`request to ${o.url} failed, reason: ${e.message}`,"system",e)),g()}),f.on("response",function(e){clearTimeout(v);const a=function(e){const a=new Ze;for(const t of Object.keys(e))if(!We.test(t))if(Array.isArray(e[t]))for(const p of e[t])Je.test(p)||(void 0===a[Xe][t]?a[Xe][t]=[p]:a[Xe][t].push(p));else Je.test(e[t])||(a[Xe][t]=[e[t]]);return a}(e.headers);if(ya.isRedirect(e.statusCode)){const r=a.get("Location");let i=null;try{i=null===r?null:new ga(r,o.url).toString()}catch(e){if("manual"!==o.redirect)return p(new xe("uri requested responds with an invalid redirect URL: "+r,"invalid-redirect")),void g()}switch(o.redirect){case"error":return p(new xe("uri requested responds with a redirect, redirect mode is set to error: "+o.url,"no-redirect")),void g();case"manual":if(null!==i)try{a.set("Location",i)}catch(e){p(e)}break;case"follow":if(null===i)break;if(o.counter>=o.follow)return p(new xe("maximum redirect reached at: "+o.url,"max-redirect")),void g();const r={headers:new Ze(o.headers),follow:o.follow,counter:o.counter+1,agent:o.agent,compress:o.compress,method:o.method,body:o.body,signal:o.signal,timeout:o.timeout,size:o.size};if(!function(e,a){const t=new ga(a).hostname,p=new ga(e).hostname;return t===p||"."===t[t.length-p.length-1]&&t.endsWith(p)}(o.url,i))for(const e of["authorization","www-authenticate","cookie","cookie2"])r.headers.delete(e);return 303!==e.statusCode&&o.body&&null===ze(o)?(p(new xe("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void g()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==o.method)||(r.method="GET",r.body=void 0,r.headers.delete("content-length")),t(ya(new fa(i,r))),void g())}}e.once("end",function(){n&&n.removeEventListener("abort",h)});let r=e.pipe(new wa);const i={url:o.url,status:e.statusCode,statusText:e.statusMessage,headers:a,size:o.size,timeout:o.timeout,counter:o.counter},d=a.get("Content-Encoding");if(!o.compress||"HEAD"===o.method||null===d||204===e.statusCode||304===e.statusCode)return m=new da(r,i),void t(m);if("gzip"==d||"x-gzip"==d)return r=r.pipe(u.createGunzip({flush:u.Z_SYNC_FLUSH,finishFlush:u.Z_SYNC_FLUSH})),m=new da(r,i),void t(m);if("deflate"!=d&&"x-deflate"!=d){if("br"==d&&"function"==typeof u.createBrotliDecompress)return r=r.pipe(u.createBrotliDecompress()),m=new da(r,i),void t(m);m=new da(r,i),t(m)}else e.pipe(new wa).once("data",function(e){r=r.pipe(8==(15&e[0])?u.createInflate():u.createInflateRaw()),m=new da(r,i),t(m)})}),function(e,a){const t=a.body;null===t?e.end():qe(t)?t.stream().pipe(e):Buffer.isBuffer(t)?(e.write(t),e.end()):t.pipe(e)}(f,o)})}ya.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},ya.Promise=global.Promise;class ba extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var _a=function e(a,t){if(a&&t)return e(a)(t);if("function"!=typeof a)throw new TypeError("need wrapper function");return Object.keys(a).forEach(function(e){p[e]=a[e]}),p;function p(){for(var e=new Array(arguments.length),t=0;t<e.length;t++)e[t]=arguments[t];var p=a.apply(this,e),r=e[e.length-1];return"function"==typeof p&&p!==r&&Object.keys(r).forEach(function(e){p[e]=r[e]}),p}},Ea=_a(Sa),Ta=_a(Oa);function Sa(e){var a=function(){return a.called?a.value:(a.called=!0,a.value=e.apply(this,arguments))};return a.called=!1,a}function Oa(e){var a=function(){if(a.called)throw new Error(a.onceError);return a.called=!0,a.value=e.apply(this,arguments)};return a.onceError=(e.name||"Function wrapped with `once`")+" shouldn't be called more than once",a.called=!1,a}Sa.proto=Sa(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return Sa(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return Oa(this)},configurable:!0})}),Ea.strict=Ta;const Aa=Ea(e=>console.warn(e)),Na=Ea(e=>console.warn(e));class Da extends Error{constructor(e,a,t){let p;super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=a,"headers"in t&&void 0!==t.headers&&(p=t.headers),"response"in t&&(this.response=t.response,p=t.response.headers);const r=Object.assign({},t.request);t.request.headers.authorization&&(r.headers=Object.assign({},t.request.headers,{authorization:t.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),r.url=r.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=r,Object.defineProperty(this,"code",{get:()=>(Aa(new ba("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),a)}),Object.defineProperty(this,"headers",{get:()=>(Na(new ba("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),p||{})})}}function Ca(e){const a=e.request&&e.request.log?e.request.log:console;var t,p,r;(!1!==ue(t=e.body)&&(void 0===(p=t.constructor)||!1!==ue(r=p.prototype)&&!1!==r.hasOwnProperty("isPrototypeOf"))||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let i,o,d={};return(e.request&&e.request.fetch||ya)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then(async t=>{o=t.url,i=t.status;for(const e of t.headers)d[e[0]]=e[1];if("deprecation"in d){const t=d.link&&d.link.match(/<([^>]+)>; rel="deprecation"/),p=t&&t.pop();a.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${d.sunset}${p?". See "+p:""}`)}if(204!==i&&205!==i){if("HEAD"===e.method){if(i<400)return;throw new Da(t.statusText,i,{response:{url:o,status:i,headers:d,data:void 0},request:e})}if(304===i)throw new Da("Not modified",i,{response:{url:o,status:i,headers:d,data:await ka(t)},request:e});if(i>=400){const a=await ka(t);throw new Da(function(e){return"string"==typeof e?e:"message"in e?Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`:e.message:"Unknown error: "+JSON.stringify(e)}(a),i,{response:{url:o,status:i,headers:d,data:a},request:e})}return ka(t)}}).then(e=>({status:i,url:o,headers:d,data:e})).catch(a=>{if(a instanceof Da)throw a;throw new Da(a.message,500,{request:e})})}async function ka(e){const a=e.headers.get("content-type");return/application\/json/.test(a)?e.json():!a||/^text\/|charset=utf-8$/.test(a)?e.text():function(e){return e.arrayBuffer()}(e)}const Pa=function e(a,t){const p=a.defaults(t);return Object.assign(function(a,t){const r=p.merge(a,t);if(!r.request||!r.request.hook)return Ca(p.parse(r));const i=(e,a)=>Ca(p.parse(p.merge(e,a)));return Object.assign(i,{endpoint:p,defaults:e.bind(null,p)}),r.request.hook(i,r)},{endpoint:p,defaults:e.bind(null,p)})}(ce,{headers:{"user-agent":"octokit-request.js/5.6.3 "+G()}});class Ra extends Error{constructor(e,a,t){super("Request failed due to following response errors:\n"+t.errors.map(e=>" - "+e.message).join("\n")),this.request=e,this.headers=a,this.response=t,this.name="GraphqlResponseError",this.errors=t.errors,this.data=t.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const Fa=["method","baseUrl","url","headers","request","query","mediaType"],Va=["query","method","url"],ja=/\/api\/v3\/?$/;function xa(e,a){const t=e.defaults(a);return Object.assign((e,a)=>function(e,a,t){if(t){if("string"==typeof a&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const e in t)if(Va.includes(e))return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}const p="string"==typeof a?Object.assign({query:a},t):a,r=Object.keys(p).reduce((e,a)=>Fa.includes(a)?(e[a]=p[a],e):(e.variables||(e.variables={}),e.variables[a]=p[a],e),{}),i=p.baseUrl||e.endpoint.DEFAULTS.baseUrl;return ja.test(i)&&(r.url=i.replace(ja,"/api/graphql")),e(r).then(e=>{if(e.data.errors){const a={};for(const t of Object.keys(e.headers))a[t]=e.headers[t];throw new Ra(r,a,e.data)}return e.data.data})}(t,e,a),{defaults:xa.bind(null,t),endpoint:Pa.endpoint})}xa(Pa,{headers:{"user-agent":"octokit-graphql.js/4.8.0 "+G()},method:"POST",url:"/graphql"});const Ia=/^v1\./,Ua=/^ghs_/,Ga=/^ghu_/;async function Ba(e){const a=3===e.split(/\./).length,t=Ia.test(e)||Ua.test(e),p=Ga.test(e);return{type:"token",token:e,tokenType:a?"app":t?"installation":p?"user-to-server":"oauth"}}async function La(e,a,t,p){const r=a.endpoint.merge(t,p);return r.headers.authorization=function(e){return 3===e.split(/\./).length?"bearer "+e:"token "+e}(e),a(r)}const Ma=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(Ba.bind(null,e),{hook:La.bind(null,e)})};class qa{constructor(e={}){const a=new Q,t={baseUrl:Pa.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:a.bind(null,"request")}),mediaType:{previews:[],format:""}};var p;if(t.headers["user-agent"]=[e.userAgent,"octokit-core.js/3.5.1 "+G()].filter(Boolean).join(" "),e.baseUrl&&(t.baseUrl=e.baseUrl),e.previews&&(t.mediaType.previews=e.previews),e.timeZone&&(t.headers["time-zone"]=e.timeZone),this.request=Pa.defaults(t),this.graphql=(p=this.request,xa(p,{method:"POST",url:"/graphql"})).defaults(t),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=a,e.authStrategy){const{authStrategy:t,...p}=e,r=t(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:p},e.auth));a.wrap("request",r.hook),this.auth=r}else if(e.auth){const t=Ma(e.auth);a.wrap("request",t.hook),this.auth=t}else this.auth=async()=>({type:"unauthenticated"});this.constructor.plugins.forEach(a=>{Object.assign(this,a(this,e))})}static defaults(e){return class extends(this){constructor(...a){const t=a[0]||{};super("function"!=typeof e?Object.assign({},e,t,t.userAgent&&e.userAgent?{userAgent:`${t.userAgent} ${e.userAgent}`}:null):e(t))}}}static plugin(...e){var a;const t=this.plugins;return(a=class extends(this){}).plugins=t.concat(e.filter(e=>!t.includes(e))),a}}qa.VERSION="3.5.1",qa.plugins=[];var $a={__proto__:null,Octokit:qa};const Ha={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{disableSelectedOrganizationGithubActionsEnterprise:["DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],getAllowedActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/selected-actions"],getGithubActionsPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions"],listSelectedOrganizationsEnabledGithubActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/organizations"],setAllowedActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/selected-actions"],setGithubActionsPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions"],setSelectedOrganizationsEnabledGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.rest.reactions.deleteLegacy() is deprecated, see https://docs.github.com/rest/reference/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};function za(e,a,t,p,r){const i=e.request.defaults(p);return Object.assign(function(...p){let o=i.endpoint.merge(...p);if(r.mapToData)return o=Object.assign({},o,{data:o[r.mapToData],[r.mapToData]:void 0}),i(o);if(r.renamed){const[p,i]=r.renamed;e.log.warn(`octokit.${a}.${t}() has been renamed to octokit.${p}.${i}()`)}if(r.deprecated&&e.log.warn(r.deprecated),r.renamedParameters){const o=i.endpoint.merge(...p);for(const[p,i]of Object.entries(r.renamedParameters))p in o&&(e.log.warn(`"${p}" parameter is deprecated for "octokit.${a}.${t}()". Use "${i}" instead`),i in o||(o[i]=o[p]),delete o[p]);return i(o)}return i(...p)},i)}function Wa(e){const a=function(e,a){const t={};for(const[p,r]of Object.entries(a))for(const[a,i]of Object.entries(r)){const[r,o,d]=i,[s,n]=r.split(/ /),l=Object.assign({method:s,url:n},o);t[p]||(t[p]={}),t[p][a]=d?za(e,p,a,l,d):e.request.defaults(l)}return t}(e,Ha);return{...a,rest:a}}Wa.VERSION="4.15.1";var Ja=Wa;function Ya(e,a,t){const p="function"==typeof a?a.endpoint(t):e.request.endpoint(a,t),r="function"==typeof a?a:e.request,i=p.method,o=p.headers;let d=p.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!d)return{done:!0};try{const e=function(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data)||"url"in e.data)return e;const a=e.data.incomplete_results,t=e.data.repository_selection,p=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const r=Object.keys(e.data)[0];return e.data=e.data[r],void 0!==a&&(e.data.incomplete_results=a),void 0!==t&&(e.data.repository_selection=t),e.data.total_count=p,e}(await r({method:i,url:d,headers:o}));return d=((e.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:e}}catch(e){if(409!==e.status)throw e;return d="",{value:{status:200,headers:{},data:[]}}}}})}}function Ka(e,a,t,p){return"function"==typeof t&&(p=t,t=void 0),function e(a,t,p,r){return p.next().then(i=>{if(i.done)return t;let o=!1;return t=t.concat(r?r(i.value,function(){o=!0}):i.value.data),o?t:e(a,t,p,r)})}(e,[],Ya(e,a,t)[Symbol.asyncIterator](),p)}function Qa(e){return{paginate:Object.assign(Ka.bind(null,e),{iterator:Ya.bind(null,e)})}}Object.assign(Ka,{iterator:Ya}),Qa.VERSION="2.17.0";var Xa,Za=Qa,et=_(function(e,a){var t=y&&y.__createBinding||(Object.create?function(e,a,t,p){void 0===p&&(p=t),Object.defineProperty(e,p,{enumerable:!0,get:function(){return a[t]}})}:function(e,a,t,p){void 0===p&&(p=t),e[p]=a[t]}),p=y&&y.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),r=y&&y.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&t(a,e,r);return p(a,e),a};Object.defineProperty(a,"__esModule",{value:!0}),a.getOctokitOptions=a.GitHub=a.context=void 0;const i=r(I),o=r(U);a.context=new i.Context;const d=o.getApiBaseUrl(),s={baseUrl:d,request:{agent:o.getProxyAgent(d)}};a.GitHub=$a.Octokit.plugin(Ja,Za).defaults(s),a.getOctokitOptions=function(e,a){const t=Object.assign({},a||{}),p=o.getAuthString(e,t);return p&&(t.auth=p),t}}),at=_(function(e,a){var t=y&&y.__createBinding||(Object.create?function(e,a,t,p){void 0===p&&(p=t),Object.defineProperty(e,p,{enumerable:!0,get:function(){return a[t]}})}:function(e,a,t,p){void 0===p&&(p=t),e[p]=a[t]}),p=y&&y.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),r=y&&y.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&t(a,e,r);return p(a,e),a};Object.defineProperty(a,"__esModule",{value:!0}),a.getOctokit=a.context=void 0;const i=r(I);a.context=new i.Context,a.getOctokit=function(e,a){return new et.GitHub(et.getOctokitOptions(e,a))}}),tt=_(function(e,t){var r,i=y&&y.__createBinding||(Object.create?function(e,a,t,p){void 0===p&&(p=t),Object.defineProperty(e,p,{enumerable:!0,get:function(){return a[t]}})}:function(e,a,t,p){void 0===p&&(p=t),e[p]=a[t]}),o=y&&y.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),d=y&&y.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var t in e)"default"!==t&&Object.hasOwnProperty.call(e,t)&&i(a,e,t);return o(a,e),a},s=y&&y.__awaiter||function(e,a,t,p){return new(t||(t=Promise))(function(r,i){function o(e){try{s(p.next(e))}catch(e){i(e)}}function d(e){try{s(p.throw(e))}catch(e){i(e)}}function s(e){var a;e.done?r(e.value):(a=e.value,a instanceof t?a:new t(function(e){e(a)})).then(o,d)}s((p=p.apply(e,a||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0}),t.getCmdPath=t.tryGetExecutablePath=t.isRooted=t.isDirectory=t.exists=t.IS_WINDOWS=t.unlink=t.symlink=t.stat=t.rmdir=t.rename=t.readlink=t.readdir=t.mkdir=t.lstat=t.copyFile=t.chmod=void 0;const n=d(p),l=d(a);function m(e){return(1&e.mode)>0||(8&e.mode)>0&&e.gid===process.getgid()||(64&e.mode)>0&&e.uid===process.getuid()}t.chmod=(r=n.promises).chmod,t.copyFile=r.copyFile,t.lstat=r.lstat,t.mkdir=r.mkdir,t.readdir=r.readdir,t.readlink=r.readlink,t.rename=r.rename,t.rmdir=r.rmdir,t.stat=r.stat,t.symlink=r.symlink,t.unlink=r.unlink,t.IS_WINDOWS="win32"===process.platform,t.exists=function(e){return s(this,void 0,void 0,function*(){try{yield t.stat(e)}catch(e){if("ENOENT"===e.code)return!1;throw e}return!0})},t.isDirectory=function(e,a=!1){return s(this,void 0,void 0,function*(){return(a?yield t.stat(e):yield t.lstat(e)).isDirectory()})},t.isRooted=function(e){if(!(e=function(e){return e=e||"",t.IS_WINDOWS?(e=e.replace(/\//g,"\\")).replace(/\\\\+/g,"\\"):e.replace(/\/\/+/g,"/")}(e)))throw new Error('isRooted() parameter "p" cannot be empty');return t.IS_WINDOWS?e.startsWith("\\")||/^[A-Z]:/i.test(e):e.startsWith("/")},t.tryGetExecutablePath=function(e,a){return s(this,void 0,void 0,function*(){let p=void 0;try{p=yield t.stat(e)}catch(a){"ENOENT"!==a.code&&console.log(`Unexpected error attempting to determine if executable file exists '${e}': ${a}`)}if(p&&p.isFile())if(t.IS_WINDOWS){const t=l.extname(e).toUpperCase();if(a.some(e=>e.toUpperCase()===t))return e}else if(m(p))return e;const r=e;for(const i of a){e=r+i,p=void 0;try{p=yield t.stat(e)}catch(a){"ENOENT"!==a.code&&console.log(`Unexpected error attempting to determine if executable file exists '${e}': ${a}`)}if(p&&p.isFile()){if(t.IS_WINDOWS){try{const a=l.dirname(e),p=l.basename(e).toUpperCase();for(const r of yield t.readdir(a))if(p===r.toUpperCase()){e=l.join(a,r);break}}catch(a){console.log(`Unexpected error attempting to determine the actual case of the file '${e}': ${a}`)}return e}if(m(p))return e}}return""})},t.getCmdPath=function(){var e;return null!==(e=process.env.COMSPEC)&&void 0!==e?e:"cmd.exe"}}),pt=_(function(e,t){var p=y&&y.__createBinding||(Object.create?function(e,a,t,p){void 0===p&&(p=t),Object.defineProperty(e,p,{enumerable:!0,get:function(){return a[t]}})}:function(e,a,t,p){void 0===p&&(p=t),e[p]=a[t]}),r=y&&y.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),i=y&&y.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var t in e)"default"!==t&&Object.hasOwnProperty.call(e,t)&&p(a,e,t);return r(a,e),a},o=y&&y.__awaiter||function(e,a,t,p){return new(t||(t=Promise))(function(r,i){function o(e){try{s(p.next(e))}catch(e){i(e)}}function d(e){try{s(p.throw(e))}catch(e){i(e)}}function s(e){var a;e.done?r(e.value):(a=e.value,a instanceof t?a:new t(function(e){e(a)})).then(o,d)}s((p=p.apply(e,a||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0}),t.findInPath=t.which=t.mkdirP=t.rmRF=t.mv=t.cp=void 0;const d=i(f),l=i(a),m=i(tt),c=n.promisify(d.exec),u=n.promisify(d.execFile);function h(e){return o(this,void 0,void 0,function*(){if(m.IS_WINDOWS){if(/[*"<>|]/.test(e))throw new Error('File path must not contain `*`, `"`, `<`, `>` or `|` on Windows');try{const a=m.getCmdPath();(yield m.isDirectory(e,!0))?yield c(a+' /s /c "rd /s /q "%inputPath%""',{env:{inputPath:e}}):yield c(a+' /s /c "del /f /a "%inputPath%""',{env:{inputPath:e}})}catch(e){if("ENOENT"!==e.code)throw e}try{yield m.unlink(e)}catch(e){if("ENOENT"!==e.code)throw e}}else{let a=!1;try{a=yield m.isDirectory(e)}catch(e){if("ENOENT"!==e.code)throw e;return}a?yield u("rm",["-rf",""+e]):yield m.unlink(e)}})}function v(e){return o(this,void 0,void 0,function*(){s.ok(e,"a path argument must be provided"),yield m.mkdir(e,{recursive:!0})})}function g(e){return o(this,void 0,void 0,function*(){if(!e)throw new Error("parameter 'tool' is required");const a=[];if(m.IS_WINDOWS&&process.env.PATHEXT)for(const e of process.env.PATHEXT.split(l.delimiter))e&&a.push(e);if(m.isRooted(e)){const t=yield m.tryGetExecutablePath(e,a);return t?[t]:[]}if(e.includes(l.sep))return[];const t=[];if(process.env.PATH)for(const e of process.env.PATH.split(l.delimiter))e&&t.push(e);const p=[];for(const r of t){const t=yield m.tryGetExecutablePath(l.join(r,e),a);t&&p.push(t)}return p})}function w(e,a,t){return o(this,void 0,void 0,function*(){if((yield m.lstat(e)).isSymbolicLink()){try{yield m.lstat(a),yield m.unlink(a)}catch(e){"EPERM"===e.code&&(yield m.chmod(a,"0666"),yield m.unlink(a))}const t=yield m.readlink(e);yield m.symlink(t,a,m.IS_WINDOWS?"junction":null)}else(yield m.exists(a))&&!t||(yield m.copyFile(e,a))})}t.cp=function(e,a,t={}){return o(this,void 0,void 0,function*(){const{force:p,recursive:r,copySourceDirectory:i}=function(e){return{force:null==e.force||e.force,recursive:Boolean(e.recursive),copySourceDirectory:null==e.copySourceDirectory||Boolean(e.copySourceDirectory)}}(t),d=(yield m.exists(a))?yield m.stat(a):null;if(d&&d.isFile()&&!p)return;const s=d&&d.isDirectory()&&i?l.join(a,l.basename(e)):a;if(!(yield m.exists(e)))throw new Error("no such file or directory: "+e);if((yield m.stat(e)).isDirectory()){if(!r)throw new Error(`Failed to copy. ${e} is a directory, but tried to copy without recursive flag.`);yield function e(a,t,p,r){return o(this,void 0,void 0,function*(){if(p>=255)return;p++,yield v(t);const i=yield m.readdir(a);for(const o of i){const i=`${a}/${o}`,d=`${t}/${o}`;(yield m.lstat(i)).isDirectory()?yield e(i,d,p,r):yield w(i,d,r)}yield m.chmod(t,(yield m.stat(a)).mode)})}(e,s,0,p)}else{if(""===l.relative(e,s))throw new Error(`'${s}' and '${e}' are the same file`);yield w(e,s,p)}})},t.mv=function(e,a,t={}){return o(this,void 0,void 0,function*(){if(yield m.exists(a)){let p=!0;if((yield m.isDirectory(a))&&(a=l.join(a,l.basename(e)),p=yield m.exists(a)),p){if(null!=t.force&&!t.force)throw new Error("Destination already exists");yield h(a)}}yield v(l.dirname(a)),yield m.rename(e,a)})},t.rmRF=h,t.mkdirP=v,t.which=function e(a,t){return o(this,void 0,void 0,function*(){if(!a)throw new Error("parameter 'tool' is required");if(t){const t=yield e(a,!1);if(!t)throw m.IS_WINDOWS?new Error(`Unable to locate executable file: ${a}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also verify the file has a valid extension for an executable file.`):new Error(`Unable to locate executable file: ${a}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.`);return t}const p=yield g(a);return p&&p.length>0?p[0]:""})},t.findInPath=g}),rt=_(function(e,p){var r=y&&y.__createBinding||(Object.create?function(e,a,t,p){void 0===p&&(p=t),Object.defineProperty(e,p,{enumerable:!0,get:function(){return a[t]}})}:function(e,a,t,p){void 0===p&&(p=t),e[p]=a[t]}),i=y&&y.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),o=y&&y.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var t in e)"default"!==t&&Object.hasOwnProperty.call(e,t)&&r(a,e,t);return i(a,e),a},s=y&&y.__awaiter||function(e,a,t,p){return new(t||(t=Promise))(function(r,i){function o(e){try{s(p.next(e))}catch(e){i(e)}}function d(e){try{s(p.throw(e))}catch(e){i(e)}}function s(e){var a;e.done?r(e.value):(a=e.value,a instanceof t?a:new t(function(e){e(a)})).then(o,d)}s((p=p.apply(e,a||[])).next())})};Object.defineProperty(p,"__esModule",{value:!0}),p.argStringToArray=p.ToolRunner=void 0;const n=o(t),l=o(d),m=o(f),c=o(a),u=o(pt),h=o(tt),g="win32"===process.platform;p.ToolRunner=class extends l.EventEmitter{constructor(e,a,t){if(super(),!e)throw new Error("Parameter 'toolPath' cannot be null or empty.");this.toolPath=e,this.args=a||[],this.options=t||{}}_debug(e){this.options.listeners&&this.options.listeners.debug&&this.options.listeners.debug(e)}_getCommandString(e,a){const t=this._getSpawnFileName(),p=this._getSpawnArgs(e);let r=a?"":"[command]";if(g)if(this._isCmdFile()){r+=t;for(const e of p)r+=" "+e}else if(e.windowsVerbatimArguments){r+=`"${t}"`;for(const e of p)r+=" "+e}else{r+=this._windowsQuoteCmdArg(t);for(const e of p)r+=" "+this._windowsQuoteCmdArg(e)}else{r+=t;for(const e of p)r+=" "+e}return r}_processLineBuffer(e,a,t){try{let p=a+e.toString(),r=p.indexOf(n.EOL);for(;r>-1;)t(p.substring(0,r)),p=p.substring(r+n.EOL.length),r=p.indexOf(n.EOL);return p}catch(e){return this._debug("error processing line. Failed with error "+e),""}}_getSpawnFileName(){return g&&this._isCmdFile()?process.env.COMSPEC||"cmd.exe":this.toolPath}_getSpawnArgs(e){if(g&&this._isCmdFile()){let a='/D /S /C "'+this._windowsQuoteCmdArg(this.toolPath);for(const t of this.args)a+=" ",a+=e.windowsVerbatimArguments?t:this._windowsQuoteCmdArg(t);return a+='"',[a]}return this.args}_endsWith(e,a){return e.endsWith(a)}_isCmdFile(){const e=this.toolPath.toUpperCase();return this._endsWith(e,".CMD")||this._endsWith(e,".BAT")}_windowsQuoteCmdArg(e){if(!this._isCmdFile())return this._uvQuoteCmdArg(e);if(!e)return'""';const a=[" ","\t","&","(",")","[","]","{","}","^","=",";","!","'","+",",","`","~","|","<",">",'"'];let t=!1;for(const p of e)if(a.some(e=>e===p)){t=!0;break}if(!t)return e;let p='"',r=!0;for(let a=e.length;a>0;a--)p+=e[a-1],r&&"\\"===e[a-1]?p+="\\":'"'===e[a-1]?(r=!0,p+='"'):r=!1;return p+='"',p.split("").reverse().join("")}_uvQuoteCmdArg(e){if(!e)return'""';if(!e.includes(" ")&&!e.includes("\t")&&!e.includes('"'))return e;if(!e.includes('"')&&!e.includes("\\"))return`"${e}"`;let a='"',t=!0;for(let p=e.length;p>0;p--)a+=e[p-1],t&&"\\"===e[p-1]?a+="\\":'"'===e[p-1]?(t=!0,a+="\\"):t=!1;return a+='"',a.split("").reverse().join("")}_cloneExecOptions(e){const a={cwd:(e=e||{}).cwd||process.cwd(),env:e.env||process.env,silent:e.silent||!1,windowsVerbatimArguments:e.windowsVerbatimArguments||!1,failOnStdErr:e.failOnStdErr||!1,ignoreReturnCode:e.ignoreReturnCode||!1,delay:e.delay||1e4};return a.outStream=e.outStream||process.stdout,a.errStream=e.errStream||process.stderr,a}_getSpawnOptions(e,a){const t={};return t.cwd=(e=e||{}).cwd,t.env=e.env,t.windowsVerbatimArguments=e.windowsVerbatimArguments||this._isCmdFile(),e.windowsVerbatimArguments&&(t.argv0=`"${a}"`),t}exec(){return s(this,void 0,void 0,function*(){return!h.isRooted(this.toolPath)&&(this.toolPath.includes("/")||g&&this.toolPath.includes("\\"))&&(this.toolPath=c.resolve(process.cwd(),this.options.cwd||process.cwd(),this.toolPath)),this.toolPath=yield u.which(this.toolPath,!0),new Promise((e,a)=>s(this,void 0,void 0,function*(){this._debug("exec tool: "+this.toolPath),this._debug("arguments:");for(const e of this.args)this._debug("   "+e);const t=this._cloneExecOptions(this.options);!t.silent&&t.outStream&&t.outStream.write(this._getCommandString(t)+n.EOL);const p=new w(t,this.toolPath);if(p.on("debug",e=>{this._debug(e)}),this.options.cwd&&!(yield h.exists(this.options.cwd)))return a(new Error(`The cwd: ${this.options.cwd} does not exist!`));const r=this._getSpawnFileName(),i=m.spawn(r,this._getSpawnArgs(t),this._getSpawnOptions(this.options,r));let o="";i.stdout&&i.stdout.on("data",e=>{this.options.listeners&&this.options.listeners.stdout&&this.options.listeners.stdout(e),!t.silent&&t.outStream&&t.outStream.write(e),o=this._processLineBuffer(e,o,e=>{this.options.listeners&&this.options.listeners.stdline&&this.options.listeners.stdline(e)})});let d="";if(i.stderr&&i.stderr.on("data",e=>{p.processStderr=!0,this.options.listeners&&this.options.listeners.stderr&&this.options.listeners.stderr(e),!t.silent&&t.errStream&&t.outStream&&(t.failOnStdErr?t.errStream:t.outStream).write(e),d=this._processLineBuffer(e,d,e=>{this.options.listeners&&this.options.listeners.errline&&this.options.listeners.errline(e)})}),i.on("error",e=>{p.processError=e.message,p.processExited=!0,p.processClosed=!0,p.CheckComplete()}),i.on("exit",e=>{p.processExitCode=e,p.processExited=!0,this._debug(`Exit code ${e} received from tool '${this.toolPath}'`),p.CheckComplete()}),i.on("close",e=>{p.processExitCode=e,p.processExited=!0,p.processClosed=!0,this._debug(`STDIO streams have closed for tool '${this.toolPath}'`),p.CheckComplete()}),p.on("done",(t,p)=>{o.length>0&&this.emit("stdline",o),d.length>0&&this.emit("errline",d),i.removeAllListeners(),t?a(t):e(p)}),this.options.input){if(!i.stdin)throw new Error("child process missing stdin");i.stdin.end(this.options.input)}}))})}},p.argStringToArray=function(e){const a=[];let t=!1,p=!1,r="";function i(e){p&&'"'!==e&&(r+="\\"),r+=e,p=!1}for(let o=0;o<e.length;o++){const d=e.charAt(o);'"'!==d?"\\"===d&&p?i(d):"\\"===d&&t?p=!0:" "!==d||t?i(d):r.length>0&&(a.push(r),r=""):p?i(d):t=!t}return r.length>0&&a.push(r.trim()),a};class w extends l.EventEmitter{constructor(e,a){if(super(),this.processClosed=!1,this.processError="",this.processExitCode=0,this.processExited=!1,this.processStderr=!1,this.delay=1e4,this.done=!1,this.timeout=null,!a)throw new Error("toolPath must not be empty");this.options=e,this.toolPath=a,e.delay&&(this.delay=e.delay)}CheckComplete(){this.done||(this.processClosed?this._setResult():this.processExited&&(this.timeout=v.setTimeout(w.HandleTimeout,this.delay,this)))}_debug(e){this.emit("debug",e)}_setResult(){let e;this.processExited&&(this.processError?e=new Error(`There was an error when attempting to execute the process '${this.toolPath}'. This may indicate the process failed to start. Error: ${this.processError}`):0===this.processExitCode||this.options.ignoreReturnCode?this.processStderr&&this.options.failOnStdErr&&(e=new Error(`The process '${this.toolPath}' failed because one or more lines were written to the STDERR stream`)):e=new Error(`The process '${this.toolPath}' failed with exit code ${this.processExitCode}`)),this.timeout&&(clearTimeout(this.timeout),this.timeout=null),this.done=!0,this.emit("done",e,this.processExitCode)}static HandleTimeout(e){e.done||(!e.processClosed&&e.processExited&&e._debug(`The STDIO streams did not close within ${e.delay/1e3} seconds of the exit event from process '${e.toolPath}'. This may indicate a child process inherited the STDIO streams and has not yet exited.`),e._setResult())}}}),it=b(_(function(e,a){var t=y&&y.__createBinding||(Object.create?function(e,a,t,p){void 0===p&&(p=t),Object.defineProperty(e,p,{enumerable:!0,get:function(){return a[t]}})}:function(e,a,t,p){void 0===p&&(p=t),e[p]=a[t]}),p=y&&y.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),r=y&&y.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&t(a,e,r);return p(a,e),a},i=y&&y.__awaiter||function(e,a,t,p){return new(t||(t=Promise))(function(r,i){function o(e){try{s(p.next(e))}catch(e){i(e)}}function d(e){try{s(p.throw(e))}catch(e){i(e)}}function s(e){var a;e.done?r(e.value):(a=e.value,a instanceof t?a:new t(function(e){e(a)})).then(o,d)}s((p=p.apply(e,a||[])).next())})};Object.defineProperty(a,"__esModule",{value:!0}),a.getExecOutput=a.exec=void 0;const o=r(rt);function d(e,a,t){return i(this,void 0,void 0,function*(){const p=o.argStringToArray(e);if(0===p.length)throw new Error("Parameter 'commandLine' cannot be null or empty.");const r=p[0];return a=p.slice(1).concat(a||[]),new o.ToolRunner(r,a,t).exec()})}a.exec=d,a.getExecOutput=function(e,a,t){var p,r;return i(this,void 0,void 0,function*(){let i="",o="";const s=new h.StringDecoder("utf8"),n=new h.StringDecoder("utf8"),l=null===(p=null==t?void 0:t.listeners)||void 0===p?void 0:p.stdout,m=null===(r=null==t?void 0:t.listeners)||void 0===r?void 0:r.stderr,c=Object.assign(Object.assign({},null==t?void 0:t.listeners),{stdout:e=>{i+=s.write(e),l&&l(e)},stderr:e=>{o+=n.write(e),m&&m(e)}}),u=yield d(e,a,Object.assign(Object.assign({},t),{listeners:c}));return i+=s.end(),o+=n.end(),{exitCode:u,stdout:i,stderr:o}})}})),ot=Object.prototype.toString,dt=function(e){var a=ot.call(e),t="[object Arguments]"===a;return t||(t="[object Array]"!==a&&null!==e&&"object"==typeof e&&"number"==typeof e.length&&e.length>=0&&"[object Function]"===ot.call(e.callee)),t};if(!Object.keys){var st=Object.prototype.hasOwnProperty,nt=Object.prototype.toString,lt=dt,mt=Object.prototype.propertyIsEnumerable,ct=!mt.call({toString:null},"toString"),ut=mt.call(function(){},"prototype"),ht=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],ft=function(e){var a=e.constructor;return a&&a.prototype===e},vt={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},gt=function(){if("undefined"==typeof window)return!1;for(var e in window)try{if(!vt["$"+e]&&st.call(window,e)&&null!==window[e]&&"object"==typeof window[e])try{ft(window[e])}catch(e){return!0}}catch(e){return!0}return!1}();Xa=function(e){var a=null!==e&&"object"==typeof e,t="[object Function]"===nt.call(e),p=lt(e),r=a&&"[object String]"===nt.call(e),i=[];if(!a&&!t&&!p)throw new TypeError("Object.keys called on a non-object");var o=ut&&t;if(r&&e.length>0&&!st.call(e,0))for(var d=0;d<e.length;++d)i.push(String(d));if(p&&e.length>0)for(var s=0;s<e.length;++s)i.push(String(s));else for(var n in e)o&&"prototype"===n||!st.call(e,n)||i.push(String(n));if(ct)for(var l=function(e){if("undefined"==typeof window||!gt)return ft(e);try{return ft(e)}catch(e){return!1}}(e),m=0;m<ht.length;++m)l&&"constructor"===ht[m]||!st.call(e,ht[m])||i.push(ht[m]);return i}}var wt=Array.prototype.slice,yt=Object.keys,bt=yt?function(e){return yt(e)}:Xa,_t=Object.keys;bt.shim=function(){return Object.keys?function(){var e=Object.keys(arguments);return e&&e.length===arguments.length}(1,2)||(Object.keys=function(e){return dt(e)?_t(wt.call(e)):_t(e)}):Object.keys=bt,Object.keys||bt};var Et=bt,Tt="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),St=Object.prototype.toString,Ot=Array.prototype.concat,At=Object.defineProperty,Nt=At&&function(){var e={};try{for(var a in At(e,"x",{enumerable:!1,value:e}),e)return!1;return e.x===e}catch(e){return!1}}(),Dt=function(e,a,t,p){var r;(!(a in e)||"function"==typeof(r=p)&&"[object Function]"===St.call(r)&&p())&&(Nt?At(e,a,{configurable:!0,enumerable:!1,value:t,writable:!0}):e[a]=t)},Ct=function(e,a){var t=arguments.length>2?arguments[2]:{},p=Et(a);Tt&&(p=Ot.call(p,Object.getOwnPropertySymbols(a)));for(var r=0;r<p.length;r+=1)Dt(e,p[r],a[p[r]],t[p[r]])};Ct.supportsDescriptors=!!Nt;var kt,Pt,Rt=Ct,Ft=Function.prototype.toString,Vt="object"==typeof Reflect&&null!==Reflect&&Reflect.apply;if("function"==typeof Vt&&"function"==typeof Object.defineProperty)try{kt=Object.defineProperty({},"length",{get:function(){throw Pt}}),Pt={},Vt(function(){throw 42},null,kt)}catch(e){e!==Pt&&(Vt=null)}else Vt=null;var jt=/^\s*class\b/,xt=function(e){try{var a=Ft.call(e);return jt.test(a)}catch(e){return!1}},It=Object.prototype.toString,Ut="function"==typeof Symbol&&!!Symbol.toStringTag,Gt="object"==typeof document&&void 0===document.all&&void 0!==document.all?document.all:{},Bt=Vt?function(e){if(e===Gt)return!0;if(!e)return!1;if("function"!=typeof e&&"object"!=typeof e)return!1;if("function"==typeof e&&!e.prototype)return!0;try{Vt(e,null,kt)}catch(e){if(e!==Pt)return!1}return!xt(e)}:function(e){if(e===Gt)return!0;if(!e)return!1;if("function"!=typeof e&&"object"!=typeof e)return!1;if("function"==typeof e&&!e.prototype)return!0;if(Ut)return function(e){try{return!xt(e)&&(Ft.call(e),!0)}catch(e){return!1}}(e);if(xt(e))return!1;var a=It.call(e);return"[object Function]"===a||"[object GeneratorFunction]"===a},Lt=Object.prototype.toString,Mt=Object.prototype.hasOwnProperty,qt=function(e,a,t){for(var p=0,r=e.length;p<r;p++)Mt.call(e,p)&&(null==t?a(e[p],p,e):a.call(t,e[p],p,e))},$t=function(e,a,t){for(var p=0,r=e.length;p<r;p++)null==t?a(e.charAt(p),p,e):a.call(t,e.charAt(p),p,e)},Ht=function(e,a,t){for(var p in e)Mt.call(e,p)&&(null==t?a(e[p],p,e):a.call(t,e[p],p,e))},zt="Function.prototype.bind called on incompatible ",Wt=Array.prototype.slice,Jt=Object.prototype.toString,Yt=Function.prototype.bind||function(e){var a=this;if("function"!=typeof a||"[object Function]"!==Jt.call(a))throw new TypeError(zt+a);for(var t,p=Wt.call(arguments,1),r=function(){if(this instanceof t){var r=a.apply(this,p.concat(Wt.call(arguments)));return Object(r)===r?r:this}return a.apply(e,p.concat(Wt.call(arguments)))},i=Math.max(0,a.length-p.length),o=[],d=0;d<i;d++)o.push("$"+d);if(t=Function("binder","return function ("+o.join(",")+"){ return binder.apply(this,arguments); }")(r),a.prototype){var s=function(){};s.prototype=a.prototype,t.prototype=new s,s.prototype=null}return t},Kt=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},a=Symbol("test"),t=Object(a);if("string"==typeof a)return!1;if("[object Symbol]"!==Object.prototype.toString.call(a))return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;for(a in e[a]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var p=Object.getOwnPropertySymbols(e);if(1!==p.length||p[0]!==a)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,a))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var r=Object.getOwnPropertyDescriptor(e,a);if(42!==r.value||!0!==r.enumerable)return!1}return!0},Qt="undefined"!=typeof Symbol&&Symbol,Xt=function(){return"function"==typeof Qt&&"function"==typeof Symbol&&"symbol"==typeof Qt("foo")&&"symbol"==typeof Symbol("bar")&&Kt()},Zt=Yt.call(Function.call,Object.prototype.hasOwnProperty),ep=SyntaxError,ap=Function,tp=TypeError,pp=function(e){try{return ap('"use strict"; return ('+e+").constructor;")()}catch(e){}},rp=Object.getOwnPropertyDescriptor;if(rp)try{rp({},"")}catch(e){rp=null}var ip=function(){throw new tp},op=rp?function(){try{return ip}catch(e){try{return rp(arguments,"callee").get}catch(e){return ip}}}():ip,dp=Xt(),sp=Object.getPrototypeOf||function(e){return e.__proto__},np={},lp="undefined"==typeof Uint8Array?void 0:sp(Uint8Array),mp={"%AggregateError%":"undefined"==typeof AggregateError?void 0:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayIteratorPrototype%":dp?sp([][Symbol.iterator]()):void 0,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":np,"%AsyncGenerator%":np,"%AsyncGeneratorFunction%":np,"%AsyncIteratorPrototype%":np,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%BigInt%":"undefined"==typeof BigInt?void 0:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?void 0:FinalizationRegistry,"%Function%":ap,"%GeneratorFunction%":np,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":dp?sp(sp([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&dp?sp((new Map)[Symbol.iterator]()):void 0,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&dp?sp((new Set)[Symbol.iterator]()):void 0,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":dp?sp(""[Symbol.iterator]()):void 0,"%Symbol%":dp?Symbol:void 0,"%SyntaxError%":ep,"%ThrowTypeError%":op,"%TypedArray%":lp,"%TypeError%":tp,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?void 0:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet},cp={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},up=Yt.call(Function.call,Array.prototype.concat),hp=Yt.call(Function.apply,Array.prototype.splice),fp=Yt.call(Function.call,String.prototype.replace),vp=Yt.call(Function.call,String.prototype.slice),gp=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,wp=/\\(\\)?/g,yp=function(e){var a=vp(e,0,1),t=vp(e,-1);if("%"===a&&"%"!==t)throw new ep("invalid intrinsic syntax, expected closing `%`");if("%"===t&&"%"!==a)throw new ep("invalid intrinsic syntax, expected opening `%`");var p=[];return fp(e,gp,function(e,a,t,r){p[p.length]=t?fp(r,wp,"$1"):a||e}),p},bp=function(e,a){var t,p=e;if(Zt(cp,p)&&(p="%"+(t=cp[p])[0]+"%"),Zt(mp,p)){var r=mp[p];if(r===np&&(r=function e(a){var t;if("%AsyncFunction%"===a)t=pp("async function () {}");else if("%GeneratorFunction%"===a)t=pp("function* () {}");else if("%AsyncGeneratorFunction%"===a)t=pp("async function* () {}");else if("%AsyncGenerator%"===a){var p=e("%AsyncGeneratorFunction%");p&&(t=p.prototype)}else if("%AsyncIteratorPrototype%"===a){var r=e("%AsyncGenerator%");r&&(t=sp(r.prototype))}return mp[a]=t,t}(p)),void 0===r&&!a)throw new tp("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:t,name:p,value:r}}throw new ep("intrinsic "+e+" does not exist!")},_p=function(e,a){if("string"!=typeof e||0===e.length)throw new tp("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof a)throw new tp('"allowMissing" argument must be a boolean');var t=yp(e),p=t.length>0?t[0]:"",r=bp("%"+p+"%",a),i=r.name,o=r.value,d=!1,s=r.alias;s&&(p=s[0],hp(t,up([0,1],s)));for(var n=1,l=!0;n<t.length;n+=1){var m=t[n],c=vp(m,0,1),u=vp(m,-1);if(('"'===c||"'"===c||"`"===c||'"'===u||"'"===u||"`"===u)&&c!==u)throw new ep("property names with quotes must have matching quotes");if("constructor"!==m&&l||(d=!0),Zt(mp,i="%"+(p+="."+m)+"%"))o=mp[i];else if(null!=o){if(!(m in o)){if(!a)throw new tp("base intrinsic for "+e+" exists, but the property is not available.");return}if(rp&&n+1>=t.length){var h=rp(o,m);o=(l=!!h)&&"get"in h&&!("originalValue"in h.get)?h.get:o[m]}else l=Zt(o,m),o=o[m];l&&!d&&(mp[i]=o)}}return o},Ep=_(function(e){var a=_p("%Function.prototype.apply%"),t=_p("%Function.prototype.call%"),p=_p("%Reflect.apply%",!0)||Yt.call(t,a),r=_p("%Object.getOwnPropertyDescriptor%",!0),i=_p("%Object.defineProperty%",!0),o=_p("%Math.max%");if(i)try{i({},"a",{value:1})}catch(e){i=null}e.exports=function(e){var a=p(Yt,t,arguments);if(r&&i){var d=r(a,"length");d.configurable&&i(a,"length",{value:1+o(0,e.length-(arguments.length-1))})}return a};var d=function(){return p(Yt,a,arguments)};i?i(e.exports,"apply",{value:d}):e.exports.apply=d}),Tp=Ep(_p("String.prototype.indexOf")),Sp=function(e,a){var t=_p(e,!!a);return"function"==typeof t&&Tp(e,".prototype.")>-1?Ep(t):t},Op=_p("%Array%"),Ap=!Op.isArray&&Sp("Object.prototype.toString"),Np=Op.isArray||function(e){return"[object Array]"===Ap(e)},Dp=_p("%Object.defineProperty%",!0);if(Dp)try{Dp({},"a",{value:1})}catch(e){Dp=null}var Cp=Object.defineProperty&&0===Object.defineProperty([],"length",{value:1}).length,kp=Cp&&Np,Pp=Sp("Object.prototype.propertyIsEnumerable"),Rp=_p("%TypeError%"),Fp=_p("%SyntaxError%"),Vp={"Property Descriptor":function(e,a){if("Object"!==e(a))return!1;var t={"[[Configurable]]":!0,"[[Enumerable]]":!0,"[[Get]]":!0,"[[Set]]":!0,"[[Value]]":!0,"[[Writable]]":!0};for(var p in a)if(Zt(a,p)&&!t[p])return!1;var r=Zt(a,"[[Value]]"),i=Zt(a,"[[Get]]")||Zt(a,"[[Set]]");if(r&&i)throw new Rp("Property Descriptors may not be both accessor and data descriptors");return!0}},jp=function(e,a,t,p){var r=Vp[a];if("function"!=typeof r)throw new Fp("unknown record type: "+a);if(!r(e,p))throw new Rp(t+" must be a "+a)},xp=function(e){return"symbol"==typeof e?"Symbol":"bigint"==typeof e?"BigInt":function(e){return null===e?"Null":void 0===e?"Undefined":"function"==typeof e||"object"==typeof e?"Object":"number"==typeof e?"Number":"boolean"==typeof e?"Boolean":"string"==typeof e?"String":void 0}(e)},Ip=function(e){if(void 0===e)return e;jp(xp,"Property Descriptor","Desc",e);var a={};return"[[Value]]"in e&&(a.value=e["[[Value]]"]),"[[Writable]]"in e&&(a.writable=e["[[Writable]]"]),"[[Get]]"in e&&(a.get=e["[[Get]]"]),"[[Set]]"in e&&(a.set=e["[[Set]]"]),"[[Enumerable]]"in e&&(a.enumerable=e["[[Enumerable]]"]),"[[Configurable]]"in e&&(a.configurable=e["[[Configurable]]"]),a},Up=_p("%Object.getOwnPropertyDescriptor%",!0);if(Up)try{Up([],"length")}catch(e){Up=null}var Gp,Bp,Lp,Mp,qp=Up,$p=_p("%Array%"),Hp=!$p.isArray&&Sp("Object.prototype.toString"),zp=$p.isArray||function(e){return"[object Array]"===Hp(e)},Wp=function(e){return"string"==typeof e||"symbol"==typeof e},Jp=Kt()&&!!Symbol.toStringTag;if(Jp){Gp=Sp("Object.prototype.hasOwnProperty"),Bp=Sp("RegExp.prototype.exec"),Lp={};var Yp=function(){throw Lp};Mp={toString:Yp,valueOf:Yp},"symbol"==typeof Symbol.toPrimitive&&(Mp[Symbol.toPrimitive]=Yp)}var Kp=Sp("Object.prototype.toString"),Qp=Object.getOwnPropertyDescriptor,Xp=Jp?function(e){if(!e||"object"!=typeof e)return!1;var a=Qp(e,"lastIndex");if(!a||!Gp(a,"value"))return!1;try{Bp(e,Mp)}catch(e){return e===Lp}}:function(e){return!(!e||"object"!=typeof e&&"function"!=typeof e)&&"[object RegExp]"===Kp(e)},Zp=function(e){return!!e},er=_p("%Symbol.match%",!0),ar=Bt,tr=_p("%TypeError%"),pr=_p("%TypeError%"),rr=Sp("Object.prototype.propertyIsEnumerable"),ir=function(e){return void 0!==e&&(jp(xp,"Property Descriptor","Desc",e),!(!Zt(e,"[[Value]]")&&!Zt(e,"[[Writable]]")))},or=function(e){return null===e||"function"!=typeof e&&"object"!=typeof e},dr=_p("%Object%"),sr=dr.isExtensible,nr=dr.preventExtensions?function(e){return!or(e)&&sr(e)}:function(e){return!or(e)},lr=Number.isNaN||function(e){return e!=e},mr=function(e,a){return e===a?0!==e||1/e==1/a:lr(e)&&lr(a)},cr=_p("%TypeError%"),ur=_p("%TypeError%"),hr=function(e,a){if(null==e)throw new ur(a||"Cannot call method on "+e);return e},fr=_p("%Object%"),vr=Object.getOwnPropertyDescriptor,gr=Object.getOwnPropertyNames,wr=Object.getOwnPropertySymbols,yr=Sp("Array.prototype.concat"),br=Sp("Array.prototype.reduce"),_r=wr?function(e){return yr(gr(e),wr(e))}:gr,Er=ar(vr)&&ar(gr),Tr=function(e){if(hr(e),!Er)throw new TypeError("getOwnPropertyDescriptors requires Object.getOwnPropertyDescriptor");var a=function(e){return hr(e),fr(e)}(e);return br(_r(a),function(e,t){var p=vr(a,t);return void 0!==p&&function(e,a,t){if("Object"!==xp(e))throw new cr("Assertion failed: Type(O) is not Object");if(!Wp(a))throw new cr("Assertion failed: IsPropertyKey(P) is not true");var p=function(e,a){if("Object"!==xp(e))throw new pr("Assertion failed: O must be an Object");if(!Wp(a))throw new pr("Assertion failed: P must be a Property Key");if(Zt(e,a)){if(!qp){var t=zp(e)&&"length"===a,p=function(e){if(!e||"object"!=typeof e)return!1;if(er){var a=e[er];if(void 0!==a)return Zp(a)}return Xp(e)}(e)&&"lastIndex"===a;return{"[[Configurable]]":!(t||p),"[[Enumerable]]":rr(e,a),"[[Value]]":e[a],"[[Writable]]":!0}}return function(e){if("Object"!==xp(e))throw new tr("ToPropertyDescriptor requires an object");var a={};if(Zt(e,"enumerable")&&(a["[[Enumerable]]"]=Zp(e.enumerable)),Zt(e,"configurable")&&(a["[[Configurable]]"]=Zp(e.configurable)),Zt(e,"value")&&(a["[[Value]]"]=e.value),Zt(e,"writable")&&(a["[[Writable]]"]=Zp(e.writable)),Zt(e,"get")){var t=e.get;if(void 0!==t&&!ar(t))throw new tr("getter must be a function");a["[[Get]]"]=t}if(Zt(e,"set")){var p=e.set;if(void 0!==p&&!ar(p))throw new tr("setter must be a function");a["[[Set]]"]=p}if((Zt(a,"[[Get]]")||Zt(a,"[[Set]]"))&&(Zt(a,"[[Value]]")||Zt(a,"[[Writable]]")))throw new tr("Invalid property descriptor. Cannot both specify accessors and a value or writable attribute");return a}(qp(e,a))}}(e,a),r=!p||nr(e);(!p||p["[[Writable]]"]&&p["[[Configurable]]"])&&r&&function(e,a,t,p,r,i){if(!Dp){if(!e(i))return!1;if(!i["[[Configurable]]"]||!i["[[Writable]]"])return!1;if(r in p&&Pp(p,r)!==!!i["[[Enumerable]]"])return!1;var o=i["[[Value]]"];return p[r]=o,a(p[r],o)}Cp&&"length"===r&&"[[Value]]"in i&&kp(p)&&p.length!==i["[[Value]]"]?p.length=i["[[Value]]"]:Dp(p,r,t(i))}(ir,mr,Ip,e,a,{"[[Configurable]]":!0,"[[Enumerable]]":!0,"[[Value]]":t,"[[Writable]]":!0})}(e,t,p),e},{})},Sr=function(){return"function"==typeof Object.getOwnPropertyDescriptors?Object.getOwnPropertyDescriptors:Tr},Or=Ep(Sr(),Object);Rt(Or,{getPolyfill:Sr,implementation:Tr,shim:function(){var e=Sr();return Rt(Object,{getOwnPropertyDescriptors:e},{getOwnPropertyDescriptors:function(){return Object.getOwnPropertyDescriptors!==e}}),e}});var Ar=Or;if("function"!=typeof Object.defineProperty||[].__proto__!==Array.prototype)throw new TypeError("util.promisify requires a true ES5 environment, that also supports `__proto__`");if("function"!=typeof Promise)throw new TypeError("`Promise` must be globally available for util.promisify to work.");var Nr=Sp("Array.prototype.slice"),Dr=Sp("Array.prototype.concat"),Cr=Sp("Array.prototype.forEach"),kr=Xt(),Pr=kr?Symbol.for("nodejs.util.promisify.custom"):null,Rr=kr?Symbol("customPromisifyArgs"):null,Fr=function(e){if("function"!=typeof e){var a=new TypeError('The "original" argument must be of type function');throw a.name="TypeError [ERR_INVALID_ARG_TYPE]",a.code="ERR_INVALID_ARG_TYPE",a}if(kr&&e[Pr]){var t=e[Pr];if("function"!=typeof t)throw new TypeError("The [util.promisify.custom] property must be a function");return Object.defineProperty(t,Pr,{configurable:!0,enumerable:!1,value:t,writable:!1}),t}var p=e[Rr],r=function(){var a=Nr(arguments),t=this;return new Promise(function(r,i){e.apply(t,Dr(a,function(e){var a=arguments.length>1?Nr(arguments,1):[];if(e)i(e);else if(void 0!==p&&a.length>1){var t={};Cr(p,function(e,p){t[e]=a[p]}),r(t)}else r(a[0])}))})};return r.__proto__=e.__proto__,Object.defineProperty(r,Pr,{configurable:!0,enumerable:!1,value:r,writable:!1}),function(e,a,t){if(!Bt(a))throw new TypeError("iterator must be a function");var p;arguments.length>=3&&(p=t),"[object Array]"===Lt.call(e)?qt(e,a,p):"string"==typeof e?$t(e,a,p):Ht(e,a,p)}(Ar(e),function(e,a){try{Object.defineProperty(r,e,a)}catch(e){}}),r},Vr=Rr;Fr.custom=Pr,Fr.customPromisifyArgs=Vr;var jr=function(){return"function"==typeof n.promisify&&n.promisify.custom===Fr.custom?n.promisify:Fr},xr=jr(),Ir=function(e){return xr.apply(n,arguments)};Rt(Ir,{custom:xr.custom,customPromisifyArgs:xr.customPromisifyArgs,getPolyfill:jr,implementation:Fr,shim:function(){var e=jr();return e!==n.promisify&&Object.defineProperty(n,"promisify",{configurable:!0,enumerable:!0,value:e,writable:!0}),e}});var Ur=Ir,Gr="win32"===process.platform,Br=process.env.NODE_DEBUG&&/fs/.test(process.env.NODE_DEBUG);if(Gr)var Lr=/(.*?)(?:[\/\\]+|$)/g;else Lr=/(.*?)(?:[\/]+|$)/g;if(Gr)var Mr=/^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/;else Mr=/^[\/]*/;var qr=Yr;Yr.realpath=Yr,Yr.sync=Kr,Yr.realpathSync=Kr,Yr.monkeypatch=function(){p.realpath=Yr,p.realpathSync=Kr},Yr.unmonkeypatch=function(){p.realpath=$r,p.realpathSync=Hr};var $r=p.realpath,Hr=p.realpathSync,zr=process.version,Wr=/^v[0-5]\./.test(zr);function Jr(e){return e&&"realpath"===e.syscall&&("ELOOP"===e.code||"ENOMEM"===e.code||"ENAMETOOLONG"===e.code)}function Yr(e,t,r){if(Wr)return $r(e,t,r);"function"==typeof t&&(r=t,t=null),$r(e,t,function(i,o){Jr(i)?function(e,t,r){if("function"!=typeof r&&(r=function(e){return"function"==typeof e?e:function(){var e;if(Br){var a=new Error;e=function(e){e&&(a.message=e.message,t(e=a))}}else e=t;return e;function t(e){if(e){if(process.throwDeprecation)throw e;if(!process.noDeprecation){var a="fs: missing callback "+(e.stack||e.message);process.traceDeprecation?console.trace(a):console.error(a)}}}}()}(t),t=null),e=a.resolve(e),t&&Object.prototype.hasOwnProperty.call(t,e))return process.nextTick(r.bind(null,null,t[e]));var i,o,d,s,n=e,l={},m={};function c(){var a=Mr.exec(e);i=a[0].length,o=a[0],d=a[0],s="",Gr&&!m[d]?p.lstat(d,function(e){if(e)return r(e);m[d]=!0,u()}):process.nextTick(u)}function u(){if(i>=e.length)return t&&(t[n]=e),r(null,e);Lr.lastIndex=i;var a=Lr.exec(e);return s=o,o+=a[0],i=Lr.lastIndex,m[d=s+a[1]]||t&&t[d]===d?process.nextTick(u):t&&Object.prototype.hasOwnProperty.call(t,d)?v(t[d]):p.lstat(d,h)}function h(e,a){if(e)return r(e);if(!a.isSymbolicLink())return m[d]=!0,t&&(t[d]=d),process.nextTick(u);if(!Gr){var i=a.dev.toString(32)+":"+a.ino.toString(32);if(l.hasOwnProperty(i))return f(null,l[i],d)}p.stat(d,function(e){if(e)return r(e);p.readlink(d,function(e,a){Gr||(l[i]=a),f(e,a)})})}function f(e,p,i){if(e)return r(e);var o=a.resolve(s,p);t&&(t[i]=o),v(o)}function v(t){e=a.resolve(t,e.slice(i)),c()}c()}(e,t,r):r(i,o)})}function Kr(e,t){if(Wr)return Hr(e,t);try{return Hr(e,t)}catch(r){if(Jr(r))return function(e,t){if(e=a.resolve(e),t&&Object.prototype.hasOwnProperty.call(t,e))return t[e];var r,i,o,d,s=e,n={},l={};function m(){var a=Mr.exec(e);r=a[0].length,i=a[0],o=a[0],d="",Gr&&!l[o]&&(p.lstatSync(o),l[o]=!0)}for(m();r<e.length;){Lr.lastIndex=r;var c=Lr.exec(e);if(d=i,i+=c[0],r=Lr.lastIndex,!(l[o=d+c[1]]||t&&t[o]===o)){var u;if(t&&Object.prototype.hasOwnProperty.call(t,o))u=t[o];else{var h=p.lstatSync(o);if(!h.isSymbolicLink()){l[o]=!0,t&&(t[o]=o);continue}var f=null;if(!Gr){var v=h.dev.toString(32)+":"+h.ino.toString(32);n.hasOwnProperty(v)&&(f=n[v])}null===f&&(p.statSync(o),f=p.readlinkSync(o)),u=a.resolve(d,f),t&&(t[o]=u),Gr||(n[v]=f)}e=a.resolve(u,e.slice(r)),m()}}return t&&(t[s]=e),e}(e,t);throw r}}var Qr=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},Xr=Zr;function Zr(e,a,t){e instanceof RegExp&&(e=ei(e,t)),a instanceof RegExp&&(a=ei(a,t));var p=ai(e,a,t);return p&&{start:p[0],end:p[1],pre:t.slice(0,p[0]),body:t.slice(p[0]+e.length,p[1]),post:t.slice(p[1]+a.length)}}function ei(e,a){var t=a.match(e);return t?t[0]:null}function ai(e,a,t){var p,r,i,o,d,s=t.indexOf(e),n=t.indexOf(a,s+1),l=s;if(s>=0&&n>0){if(e===a)return[s,n];for(p=[],i=t.length;l>=0&&!d;)l==s?(p.push(l),s=t.indexOf(e,l+1)):1==p.length?d=[p.pop(),n]:((r=p.pop())<i&&(i=r,o=n),n=t.indexOf(a,l+1)),l=s<n&&s>=0?s:n;p.length&&(d=[i,o])}return d}Zr.range=ai;var ti="\0SLASH"+Math.random()+"\0",pi="\0OPEN"+Math.random()+"\0",ri="\0CLOSE"+Math.random()+"\0",ii="\0COMMA"+Math.random()+"\0",oi="\0PERIOD"+Math.random()+"\0";function di(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function si(e){return e.split(ti).join("\\").split(pi).join("{").split(ri).join("}").split(ii).join(",").split(oi).join(".")}function ni(e){return"{"+e+"}"}function li(e){return/^-?0\d/.test(e)}function mi(e,a){return e<=a}function ci(e,a){return e>=a}var ui=bi;bi.Minimatch=_i;var hi={sep:"/"};try{hi=a}catch(e){}var fi=bi.GLOBSTAR=_i.GLOBSTAR={},vi={"!":{open:"(?:(?!(?:",close:"))[^/]*?)"},"?":{open:"(?:",close:")?"},"+":{open:"(?:",close:")+"},"*":{open:"(?:",close:")*"},"@":{open:"(?:",close:")"}},gi="().*{}+?[]^$\\!".split("").reduce(function(e,a){return e[a]=!0,e},{}),wi=/\/+/;function yi(e,a){e=e||{},a=a||{};var t={};return Object.keys(a).forEach(function(e){t[e]=a[e]}),Object.keys(e).forEach(function(a){t[a]=e[a]}),t}function bi(e,a,t){if("string"!=typeof a)throw new TypeError("glob pattern string required");return t||(t={}),!(!t.nocomment&&"#"===a.charAt(0))&&(""===a.trim()?""===e:new _i(a,t).match(e))}function _i(e,a){if(!(this instanceof _i))return new _i(e,a);if("string"!=typeof e)throw new TypeError("glob pattern string required");a||(a={}),e=e.trim(),"/"!==hi.sep&&(e=e.split(hi.sep).join("/")),this.options=a,this.set=[],this.pattern=e,this.regexp=null,this.negate=!1,this.comment=!1,this.empty=!1,this.make()}function Ei(e,a){if(a||(a=this instanceof _i?this.options:{}),void 0===(e=void 0===e?this.pattern:e))throw new TypeError("undefined pattern");return a.nobrace||!e.match(/\{.*\}/)?[e]:(t=e)?("{}"===t.substr(0,2)&&(t="\\{\\}"+t.substr(2)),function e(a,t){var p=[],r=Xr("{","}",a);if(!r||/\$$/.test(r.pre))return[a];var i,o=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(r.body),d=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(r.body),s=o||d,n=r.body.indexOf(",")>=0;if(!s&&!n)return r.post.match(/,.*\}/)?e(a=r.pre+"{"+r.body+ri+r.post):[a];if(s)i=r.body.split(/\.\./);else if(1===(i=function e(a){if(!a)return[""];var t=[],p=Xr("{","}",a);if(!p)return a.split(",");var r=p.body,i=p.post,o=p.pre.split(",");o[o.length-1]+="{"+r+"}";var d=e(i);return i.length&&(o[o.length-1]+=d.shift(),o.push.apply(o,d)),t.push.apply(t,o),t}(r.body)).length&&1===(i=e(i[0],!1).map(ni)).length)return(c=r.post.length?e(r.post,!1):[""]).map(function(e){return r.pre+i[0]+e});var l,m=r.pre,c=r.post.length?e(r.post,!1):[""];if(s){var u=di(i[0]),h=di(i[1]),f=Math.max(i[0].length,i[1].length),v=3==i.length?Math.abs(di(i[2])):1,g=mi;h<u&&(v*=-1,g=ci);var w=i.some(li);l=[];for(var y=u;g(y,h);y+=v){var b;if(d)"\\"===(b=String.fromCharCode(y))&&(b="");else if(b=String(y),w){var _=f-b.length;if(_>0){var E=new Array(_+1).join("0");b=y<0?"-"+E+b.slice(1):E+b}}l.push(b)}}else l=function(a,t){for(var p=[],r=0;r<a.length;r++){var i=e(a[r],!1);Qr(i)?p.push.apply(p,i):p.push(i)}return p}(i);for(var T=0;T<l.length;T++)for(var S=0;S<c.length;S++){var O=m+l[T]+c[S];(!t||s||O)&&p.push(O)}return p}(function(e){return e.split("\\\\").join(ti).split("\\{").join(pi).split("\\}").join(ri).split("\\,").join(ii).split("\\.").join(oi)}(t),!0).map(si)):[];var t}bi.filter=function(e,a){return a=a||{},function(t,p,r){return bi(t,e,a)}},bi.defaults=function(e){if(!e||!Object.keys(e).length)return bi;var a=bi,t=function(t,p,r){return a.minimatch(t,p,yi(e,r))};return t.Minimatch=function(t,p){return new a.Minimatch(t,yi(e,p))},t},_i.defaults=function(e){return e&&Object.keys(e).length?bi.defaults(e).Minimatch:_i},_i.prototype.debug=function(){},_i.prototype.make=function(){if(!this._made){var e=this.pattern,a=this.options;if(a.nocomment||"#"!==e.charAt(0))if(e){this.parseNegate();var t=this.globSet=this.braceExpand();a.debug&&(this.debug=console.error),this.debug(this.pattern,t),t=this.globParts=t.map(function(e){return e.split(wi)}),this.debug(this.pattern,t),t=t.map(function(e,a,t){return e.map(this.parse,this)},this),this.debug(this.pattern,t),t=t.filter(function(e){return-1===e.indexOf(!1)}),this.debug(this.pattern,t),this.set=t}else this.empty=!0;else this.comment=!0}},_i.prototype.parseNegate=function(){var e=this.pattern,a=!1,t=0;if(!this.options.nonegate){for(var p=0,r=e.length;p<r&&"!"===e.charAt(p);p++)a=!a,t++;t&&(this.pattern=e.substr(t)),this.negate=a}},bi.braceExpand=function(e,a){return Ei(e,a)},_i.prototype.braceExpand=Ei,_i.prototype.parse=function(e,a){if(e.length>65536)throw new TypeError("pattern is too long");var t=this.options;if(!t.noglobstar&&"**"===e)return fi;if(""===e)return"";var p,r="",i=!!t.nocase,o=!1,d=[],s=[],n=!1,l=-1,m=-1,c="."===e.charAt(0)?"":t.dot?"(?!(?:^|\\/)\\.{1,2}(?:$|\\/))":"(?!\\.)",u=this;function h(){if(p){switch(p){case"*":r+="[^/]*?",i=!0;break;case"?":r+="[^/]",i=!0;break;default:r+="\\"+p}u.debug("clearStateChar %j %j",p,r),p=!1}}for(var f,v=0,g=e.length;v<g&&(f=e.charAt(v));v++)if(this.debug("%s\t%s %s %j",e,v,r,f),o&&gi[f])r+="\\"+f,o=!1;else switch(f){case"/":return!1;case"\\":h(),o=!0;continue;case"?":case"*":case"+":case"@":case"!":if(this.debug("%s\t%s %s %j <-- stateChar",e,v,r,f),n){this.debug("  in class"),"!"===f&&v===m+1&&(f="^"),r+=f;continue}u.debug("call clearStateChar %j",p),h(),p=f,t.noext&&h();continue;case"(":if(n){r+="(";continue}if(!p){r+="\\(";continue}d.push({type:p,start:v-1,reStart:r.length,open:vi[p].open,close:vi[p].close}),this.debug("plType %j %j",p,r+="!"===p?"(?:(?!(?:":"(?:"),p=!1;continue;case")":if(n||!d.length){r+="\\)";continue}h(),i=!0;var w=d.pop();r+=w.close,"!"===w.type&&s.push(w),w.reEnd=r.length;continue;case"|":if(n||!d.length||o){r+="\\|",o=!1;continue}h(),r+="|";continue;case"[":if(h(),n){r+="\\"+f;continue}n=!0,m=v,l=r.length,r+=f;continue;case"]":if(v===m+1||!n){r+="\\"+f,o=!1;continue}if(n){var y=e.substring(m+1,v);try{RegExp("["+y+"]")}catch(e){var b=this.parse(y,Ti);r=r.substr(0,l)+"\\["+b[0]+"\\]",i=i||b[1],n=!1;continue}}i=!0,n=!1,r+=f;continue;default:h(),o?o=!1:!gi[f]||"^"===f&&n||(r+="\\"),r+=f}for(n&&(y=e.substr(m+1),b=this.parse(y,Ti),r=r.substr(0,l)+"\\["+b[0],i=i||b[1]),w=d.pop();w;w=d.pop()){var _=r.slice(w.reStart+w.open.length);this.debug("setting tail",r,w),_=_.replace(/((?:\\{2}){0,64})(\\?)\|/g,function(e,a,t){return t||(t="\\"),a+a+t+"|"}),this.debug("tail=%j\n   %s",_,_,w,r);var E="*"===w.type?"[^/]*?":"?"===w.type?"[^/]":"\\"+w.type;i=!0,r=r.slice(0,w.reStart)+E+"\\("+_}h(),o&&(r+="\\\\");var T=!1;switch(r.charAt(0)){case".":case"[":case"(":T=!0}for(var S=s.length-1;S>-1;S--){var O=s[S],A=r.slice(0,O.reStart),N=r.slice(O.reStart,O.reEnd-8),D=r.slice(O.reEnd-8,O.reEnd),C=r.slice(O.reEnd);D+=C;var k=A.split("(").length-1,P=C;for(v=0;v<k;v++)P=P.replace(/\)[+*?]?/,"");var R="";""===(C=P)&&a!==Ti&&(R="$"),r=A+N+C+R+D}if(""!==r&&i&&(r="(?=.)"+r),T&&(r=c+r),a===Ti)return[r,i];if(!i)return function(e){return e.replace(/\\(.)/g,"$1")}(e);var F=t.nocase?"i":"";try{var V=new RegExp("^"+r+"$",F)}catch(e){return new RegExp("$.")}return V._glob=e,V._src=r,V};var Ti={};bi.makeRe=function(e,a){return new _i(e,a||{}).makeRe()},_i.prototype.makeRe=function(){if(this.regexp||!1===this.regexp)return this.regexp;var e=this.set;if(!e.length)return this.regexp=!1,this.regexp;var a=this.options,t=a.noglobstar?"[^/]*?":a.dot?"(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?":"(?:(?!(?:\\/|^)\\.).)*?",p=a.nocase?"i":"",r=e.map(function(e){return e.map(function(e){return e===fi?t:"string"==typeof e?function(e){return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")}(e):e._src}).join("\\/")}).join("|");r="^(?:"+r+")$",this.negate&&(r="^(?!"+r+").*$");try{this.regexp=new RegExp(r,p)}catch(e){this.regexp=!1}return this.regexp},bi.match=function(e,a,t){var p=new _i(a,t=t||{});return e=e.filter(function(e){return p.match(e)}),p.options.nonull&&!e.length&&e.push(a),e},_i.prototype.match=function(e,a){if(this.debug("match",e,this.pattern),this.comment)return!1;if(this.empty)return""===e;if("/"===e&&a)return!0;var t=this.options;"/"!==hi.sep&&(e=e.split(hi.sep).join("/")),e=e.split(wi),this.debug(this.pattern,"split",e);var p,r,i=this.set;for(this.debug(this.pattern,"set",i),r=e.length-1;r>=0&&!(p=e[r]);r--);for(r=0;r<i.length;r++){var o=i[r],d=e;if(t.matchBase&&1===o.length&&(d=[p]),this.matchOne(d,o,a))return!!t.flipNegate||!this.negate}return!t.flipNegate&&this.negate},_i.prototype.matchOne=function(e,a,t){var p=this.options;this.debug("matchOne",{this:this,file:e,pattern:a}),this.debug("matchOne",e.length,a.length);for(var r=0,i=0,o=e.length,d=a.length;r<o&&i<d;r++,i++){this.debug("matchOne loop");var s,n=a[i],l=e[r];if(this.debug(a,n,l),!1===n)return!1;if(n===fi){this.debug("GLOBSTAR",[a,n,l]);var m=r,c=i+1;if(c===d){for(this.debug("** at the end");r<o;r++)if("."===e[r]||".."===e[r]||!p.dot&&"."===e[r].charAt(0))return!1;return!0}for(;m<o;){var u=e[m];if(this.debug("\nglobstar while",e,m,a,c,u),this.matchOne(e.slice(m),a.slice(c),t))return this.debug("globstar found match!",m,o,u),!0;if("."===u||".."===u||!p.dot&&"."===u.charAt(0)){this.debug("dot detected!",e,m,a,c);break}this.debug("globstar swallow a segment, and continue"),m++}return!(!t||(this.debug("\n>>> no match, partial?",e,m,a,c),m!==o))}if("string"==typeof n?(s=p.nocase?l.toLowerCase()===n.toLowerCase():l===n,this.debug("string match",n,l,s)):(s=l.match(n),this.debug("pattern match",n,l,s)),!s)return!1}if(r===o&&i===d)return!0;if(r===o)return t;if(i===d)return r===o-1&&""===e[r];throw new Error("wtf?")};var Si=_(function(e){e.exports="function"==typeof Object.create?function(e,a){a&&(e.super_=a,e.prototype=Object.create(a.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:function(e,a){if(a){e.super_=a;var t=function(){};t.prototype=a.prototype,e.prototype=new t,e.prototype.constructor=e}}}),Oi=_(function(e){try{if("function"!=typeof n.inherits)throw"";e.exports=n.inherits}catch(a){e.exports=Si}});function Ai(e){return"/"===e.charAt(0)}function Ni(e){var a=/^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/.exec(e),t=a[1]||"",p=Boolean(t&&":"!==t.charAt(1));return Boolean(a[2]||p)}var Di="win32"===process.platform?Ni:Ai,Ci=Ni;function ki(e,a){return Object.prototype.hasOwnProperty.call(e,a)}Di.posix=Ai,Di.win32=Ci;var Pi=ui.Minimatch;function Ri(e,a){return e.localeCompare(a,"en")}function Fi(e){var a=null;if("/**"===e.slice(-3)){var t=e.replace(/(\/\*\*)+$/,"");a=new Pi(t,{dot:!0})}return{matcher:new Pi(e,{dot:!0}),gmatcher:a}}function Vi(e,t){var p=t;return p="/"===t.charAt(0)?a.join(e.root,t):Di(t)||""===t?t:e.changedCwd?a.resolve(e.cwd,t):a.resolve(t),"win32"===process.platform&&(p=p.replace(/\\/g,"/")),p}function ji(e,a){return!!e.ignore.length&&e.ignore.some(function(e){return e.matcher.match(a)||!(!e.gmatcher||!e.gmatcher.match(a))})}var xi={setopts:function(e,t,r){if(r||(r={}),r.matchBase&&-1===t.indexOf("/")){if(r.noglobstar)throw new Error("base matching requires globstar");t="**/"+t}e.silent=!!r.silent,e.pattern=t,e.strict=!1!==r.strict,e.realpath=!!r.realpath,e.realpathCache=r.realpathCache||Object.create(null),e.follow=!!r.follow,e.dot=!!r.dot,e.mark=!!r.mark,e.nodir=!!r.nodir,e.nodir&&(e.mark=!0),e.sync=!!r.sync,e.nounique=!!r.nounique,e.nonull=!!r.nonull,e.nosort=!!r.nosort,e.nocase=!!r.nocase,e.stat=!!r.stat,e.noprocess=!!r.noprocess,e.absolute=!!r.absolute,e.fs=r.fs||p,e.maxLength=r.maxLength||Infinity,e.cache=r.cache||Object.create(null),e.statCache=r.statCache||Object.create(null),e.symlinks=r.symlinks||Object.create(null),function(e,a){e.ignore=a.ignore||[],Array.isArray(e.ignore)||(e.ignore=[e.ignore]),e.ignore.length&&(e.ignore=e.ignore.map(Fi))}(e,r),e.changedCwd=!1;var i=process.cwd();ki(r,"cwd")?(e.cwd=a.resolve(r.cwd),e.changedCwd=e.cwd!==i):e.cwd=i,e.root=r.root||a.resolve(e.cwd,"/"),e.root=a.resolve(e.root),"win32"===process.platform&&(e.root=e.root.replace(/\\/g,"/")),e.cwdAbs=Di(e.cwd)?e.cwd:Vi(e,e.cwd),"win32"===process.platform&&(e.cwdAbs=e.cwdAbs.replace(/\\/g,"/")),e.nomount=!!r.nomount,r.nonegate=!0,r.nocomment=!0,e.minimatch=new Pi(t,r),e.options=e.minimatch.options},ownProp:ki,makeAbs:Vi,finish:function(e){for(var a=e.nounique,t=a?[]:Object.create(null),p=0,r=e.matches.length;p<r;p++){var i=e.matches[p];if(i&&0!==Object.keys(i).length){var o=Object.keys(i);a?t.push.apply(t,o):o.forEach(function(e){t[e]=!0})}else if(e.nonull){var d=e.minimatch.globSet[p];a?t.push(d):t[d]=!0}}if(a||(t=Object.keys(t)),e.nosort||(t=t.sort(Ri)),e.mark){for(p=0;p<t.length;p++)t[p]=e._mark(t[p]);e.nodir&&(t=t.filter(function(a){var t=!/\/$/.test(a),p=e.cache[a]||e.cache[Vi(e,a)];return t&&p&&(t="DIR"!==p&&!Array.isArray(p)),t}))}e.ignore.length&&(t=t.filter(function(a){return!ji(e,a)})),e.found=t},mark:function(e,a){var t=Vi(e,a),p=e.cache[t],r=a;if(p){var i="DIR"===p||Array.isArray(p),o="/"===a.slice(-1);if(i&&!o?r+="/":!i&&o&&(r=r.slice(0,-1)),r!==a){var d=Vi(e,r);e.statCache[d]=e.statCache[t],e.cache[d]=e.cache[t]}}return r},isIgnored:ji,childrenIgnored:function(e,a){return!!e.ignore.length&&e.ignore.some(function(e){return!(!e.gmatcher||!e.gmatcher.match(a))})}},Ii=Mi;Mi.GlobSync=qi;var Ui=xi.setopts,Gi=xi.ownProp,Bi=xi.childrenIgnored,Li=xi.isIgnored;function Mi(e,a){if("function"==typeof a||3===arguments.length)throw new TypeError("callback provided to sync glob\nSee: https://github.com/isaacs/node-glob/issues/167");return new qi(e,a).found}function qi(e,a){if(!e)throw new Error("must provide pattern");if("function"==typeof a||3===arguments.length)throw new TypeError("callback provided to sync glob\nSee: https://github.com/isaacs/node-glob/issues/167");if(!(this instanceof qi))return new qi(e,a);if(Ui(this,e,a),this.noprocess)return this;var t=this.minimatch.set.length;this.matches=new Array(t);for(var p=0;p<t;p++)this._process(this.minimatch.set[p],p,!1);this._finish()}qi.prototype._finish=function(){if(s(this instanceof qi),this.realpath){var e=this;this.matches.forEach(function(a,t){var p=e.matches[t]=Object.create(null);for(var r in a)try{r=e._makeAbs(r),p[qr.realpathSync(r,e.realpathCache)]=!0}catch(a){if("stat"!==a.syscall)throw a;p[e._makeAbs(r)]=!0}})}xi.finish(this)},qi.prototype._process=function(e,a,t){s(this instanceof qi);for(var p,r=0;"string"==typeof e[r];)r++;switch(r){case e.length:return void this._processSimple(e.join("/"),a);case 0:p=null;break;default:p=e.slice(0,r).join("/")}var i,o=e.slice(r);null===p?i=".":Di(p)||Di(e.join("/"))?(p&&Di(p)||(p="/"+p),i=p):i=p;var d=this._makeAbs(i);Bi(this,i)||(o[0]===ui.GLOBSTAR?this._processGlobStar(p,i,d,o,a,t):this._processReaddir(p,i,d,o,a,t))},qi.prototype._processReaddir=function(e,t,p,r,i,o){var d=this._readdir(p,o);if(d){for(var s=r[0],n=!!this.minimatch.negate,l=this.dot||"."===s._glob.charAt(0),m=[],c=0;c<d.length;c++)("."!==(h=d[c]).charAt(0)||l)&&(n&&!e?!h.match(s):h.match(s))&&m.push(h);var u=m.length;if(0!==u)if(1!==r.length||this.mark||this.stat)for(r.shift(),c=0;c<u;c++)h=m[c],this._process((e?[e,h]:[h]).concat(r),i,o);else for(this.matches[i]||(this.matches[i]=Object.create(null)),c=0;c<u;c++){var h=m[c];e&&(h="/"!==e.slice(-1)?e+"/"+h:e+h),"/"!==h.charAt(0)||this.nomount||(h=a.join(this.root,h)),this._emitMatch(i,h)}}},qi.prototype._emitMatch=function(e,a){if(!Li(this,a)){var t=this._makeAbs(a);if(this.mark&&(a=this._mark(a)),this.absolute&&(a=t),!this.matches[e][a]){if(this.nodir){var p=this.cache[t];if("DIR"===p||Array.isArray(p))return}this.matches[e][a]=!0,this.stat&&this._stat(a)}}},qi.prototype._readdirInGlobStar=function(e){if(this.follow)return this._readdir(e,!1);var a,t;try{t=this.fs.lstatSync(e)}catch(e){if("ENOENT"===e.code)return null}var p=t&&t.isSymbolicLink();return this.symlinks[e]=p,p||!t||t.isDirectory()?a=this._readdir(e,!1):this.cache[e]="FILE",a},qi.prototype._readdir=function(e,a){if(a&&!Gi(this.symlinks,e))return this._readdirInGlobStar(e);if(Gi(this.cache,e)){var t=this.cache[e];if(!t||"FILE"===t)return null;if(Array.isArray(t))return t}try{return this._readdirEntries(e,this.fs.readdirSync(e))}catch(a){return this._readdirError(e,a),null}},qi.prototype._readdirEntries=function(e,a){if(!this.mark&&!this.stat)for(var t=0;t<a.length;t++){var p=a[t];this.cache[p="/"===e?e+p:e+"/"+p]=!0}return this.cache[e]=a,a},qi.prototype._readdirError=function(e,a){switch(a.code){case"ENOTSUP":case"ENOTDIR":var t=this._makeAbs(e);if(this.cache[t]="FILE",t===this.cwdAbs){var p=new Error(a.code+" invalid cwd "+this.cwd);throw p.path=this.cwd,p.code=a.code,p}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=!1;break;default:if(this.cache[this._makeAbs(e)]=!1,this.strict)throw a;this.silent||console.error("glob error",a)}},qi.prototype._processGlobStar=function(e,a,t,p,r,i){var o=this._readdir(t,i);if(o){var d=p.slice(1),s=e?[e]:[],n=s.concat(d);this._process(n,r,!1);var l=o.length;if(!this.symlinks[t]||!i)for(var m=0;m<l;m++)if("."!==o[m].charAt(0)||this.dot){var c=s.concat(o[m],d);this._process(c,r,!0);var u=s.concat(o[m],p);this._process(u,r,!0)}}},qi.prototype._processSimple=function(e,t){var p=this._stat(e);if(this.matches[t]||(this.matches[t]=Object.create(null)),p){if(e&&Di(e)&&!this.nomount){var r=/[\/\\]$/.test(e);"/"===e.charAt(0)?e=a.join(this.root,e):(e=a.resolve(this.root,e),r&&(e+="/"))}"win32"===process.platform&&(e=e.replace(/\\/g,"/")),this._emitMatch(t,e)}},qi.prototype._stat=function(e){var a=this._makeAbs(e),t="/"===e.slice(-1);if(e.length>this.maxLength)return!1;if(!this.stat&&Gi(this.cache,a)){var p=this.cache[a];if(Array.isArray(p)&&(p="DIR"),!t||"DIR"===p)return p;if(t&&"FILE"===p)return!1}var r=this.statCache[a];if(!r){var i;try{i=this.fs.lstatSync(a)}catch(e){if(e&&("ENOENT"===e.code||"ENOTDIR"===e.code))return this.statCache[a]=!1,!1}if(i&&i.isSymbolicLink())try{r=this.fs.statSync(a)}catch(e){r=i}else r=i}return this.statCache[a]=r,p=!0,r&&(p=r.isDirectory()?"DIR":"FILE"),this.cache[a]=this.cache[a]||p,(!t||"FILE"!==p)&&p},qi.prototype._mark=function(e){return xi.mark(this,e)},qi.prototype._makeAbs=function(e){return xi.makeAbs(this,e)};var $i=Object.create(null),Hi=_a(function(e,a){return $i[e]?($i[e].push(a),null):($i[e]=[a],function(e){return Ea(function a(){var t=$i[e],p=t.length,r=zi(arguments);try{for(var i=0;i<p;i++)t[i].apply(null,r)}finally{t.length>p?(t.splice(0,p),process.nextTick(function(){a.apply(null,r)})):delete $i[e]}})}(e))});function zi(e){for(var a=e.length,t=[],p=0;p<a;p++)t[p]=e[p];return t}var Wi=Zi,Ji=d.EventEmitter,Yi=xi.setopts,Ki=xi.ownProp,Qi=xi.childrenIgnored,Xi=xi.isIgnored;function Zi(e,a,t){if("function"==typeof a&&(t=a,a={}),a||(a={}),a.sync){if(t)throw new TypeError("callback provided to sync glob");return Ii(e,a)}return new ao(e,a,t)}Zi.sync=Ii;var eo=Zi.GlobSync=Ii.GlobSync;function ao(e,a,t){if("function"==typeof a&&(t=a,a=null),a&&a.sync){if(t)throw new TypeError("callback provided to sync glob");return new eo(e,a)}if(!(this instanceof ao))return new ao(e,a,t);Yi(this,e,a),this._didRealPath=!1;var p=this.minimatch.set.length;this.matches=new Array(p),"function"==typeof t&&(t=Ea(t),this.on("error",t),this.on("end",function(e){t(null,e)}));var r=this;if(this._processing=0,this._emitQueue=[],this._processQueue=[],this.paused=!1,this.noprocess)return this;if(0===p)return o();for(var i=0;i<p;i++)this._process(this.minimatch.set[i],i,!1,o);function o(){--r._processing,r._processing<=0&&r._finish()}}Zi.glob=Zi,Zi.hasMagic=function(e,a){var t=function(e,a){if(null===a||"object"!=typeof a)return e;for(var t=Object.keys(a),p=t.length;p--;)e[t[p]]=a[t[p]];return e}({},a);t.noprocess=!0;var p=new ao(e,t).minimatch.set;if(!e)return!1;if(p.length>1)return!0;for(var r=0;r<p[0].length;r++)if("string"!=typeof p[0][r])return!0;return!1},Zi.Glob=ao,Oi(ao,Ji),ao.prototype._finish=function(){if(s(this instanceof ao),!this.aborted){if(this.realpath&&!this._didRealpath)return this._realpath();xi.finish(this),this.emit("end",this.found)}},ao.prototype._realpath=function(){if(!this._didRealpath){this._didRealpath=!0;var e=this.matches.length;if(0===e)return this._finish();for(var a=this,t=0;t<this.matches.length;t++)this._realpathSet(t,p)}function p(){0==--e&&a._finish()}},ao.prototype._realpathSet=function(e,a){var t=this.matches[e];if(!t)return a();var p=Object.keys(t),r=this,i=p.length;if(0===i)return a();var o=this.matches[e]=Object.create(null);p.forEach(function(t,p){t=r._makeAbs(t),qr.realpath(t,r.realpathCache,function(p,d){p?"stat"===p.syscall?o[t]=!0:r.emit("error",p):o[d]=!0,0==--i&&(r.matches[e]=o,a())})})},ao.prototype._mark=function(e){return xi.mark(this,e)},ao.prototype._makeAbs=function(e){return xi.makeAbs(this,e)},ao.prototype.abort=function(){this.aborted=!0,this.emit("abort")},ao.prototype.pause=function(){this.paused||(this.paused=!0,this.emit("pause"))},ao.prototype.resume=function(){if(this.paused){if(this.emit("resume"),this.paused=!1,this._emitQueue.length){var e=this._emitQueue.slice(0);this._emitQueue.length=0;for(var a=0;a<e.length;a++){var t=e[a];this._emitMatch(t[0],t[1])}}if(this._processQueue.length){var p=this._processQueue.slice(0);for(this._processQueue.length=0,a=0;a<p.length;a++){var r=p[a];this._processing--,this._process(r[0],r[1],r[2],r[3])}}}},ao.prototype._process=function(e,a,t,p){if(s(this instanceof ao),s("function"==typeof p),!this.aborted)if(this._processing++,this.paused)this._processQueue.push([e,a,t,p]);else{for(var r,i=0;"string"==typeof e[i];)i++;switch(i){case e.length:return void this._processSimple(e.join("/"),a,p);case 0:r=null;break;default:r=e.slice(0,i).join("/")}var o,d=e.slice(i);null===r?o=".":Di(r)||Di(e.join("/"))?(r&&Di(r)||(r="/"+r),o=r):o=r;var n=this._makeAbs(o);if(Qi(this,o))return p();d[0]===ui.GLOBSTAR?this._processGlobStar(r,o,n,d,a,t,p):this._processReaddir(r,o,n,d,a,t,p)}},ao.prototype._processReaddir=function(e,a,t,p,r,i,o){var d=this;this._readdir(t,i,function(s,n){return d._processReaddir2(e,a,t,p,r,i,n,o)})},ao.prototype._processReaddir2=function(e,t,p,r,i,o,d,s){if(!d)return s();for(var n=r[0],l=!!this.minimatch.negate,m=this.dot||"."===n._glob.charAt(0),c=[],u=0;u<d.length;u++)("."!==(f=d[u]).charAt(0)||m)&&(l&&!e?!f.match(n):f.match(n))&&c.push(f);var h=c.length;if(0===h)return s();if(1===r.length&&!this.mark&&!this.stat){for(this.matches[i]||(this.matches[i]=Object.create(null)),u=0;u<h;u++){var f=c[u];e&&(f="/"!==e?e+"/"+f:e+f),"/"!==f.charAt(0)||this.nomount||(f=a.join(this.root,f)),this._emitMatch(i,f)}return s()}for(r.shift(),u=0;u<h;u++)f=c[u],e&&(f="/"!==e?e+"/"+f:e+f),this._process([f].concat(r),i,o,s);s()},ao.prototype._emitMatch=function(e,a){if(!this.aborted&&!Xi(this,a))if(this.paused)this._emitQueue.push([e,a]);else{var t=Di(a)?a:this._makeAbs(a);if(this.mark&&(a=this._mark(a)),this.absolute&&(a=t),!this.matches[e][a]){if(this.nodir){var p=this.cache[t];if("DIR"===p||Array.isArray(p))return}this.matches[e][a]=!0;var r=this.statCache[t];r&&this.emit("stat",a,r),this.emit("match",a)}}},ao.prototype._readdirInGlobStar=function(e,a){if(!this.aborted){if(this.follow)return this._readdir(e,!1,a);var t=this,p=Hi("lstat\0"+e,function(p,r){if(p&&"ENOENT"===p.code)return a();var i=r&&r.isSymbolicLink();t.symlinks[e]=i,i||!r||r.isDirectory()?t._readdir(e,!1,a):(t.cache[e]="FILE",a())});p&&t.fs.lstat(e,p)}},ao.prototype._readdir=function(e,a,t){if(!this.aborted&&(t=Hi("readdir\0"+e+"\0"+a,t))){if(a&&!Ki(this.symlinks,e))return this._readdirInGlobStar(e,t);if(Ki(this.cache,e)){var p=this.cache[e];if(!p||"FILE"===p)return t();if(Array.isArray(p))return t(null,p)}this.fs.readdir(e,function(e,a,t){return function(p,r){p?e._readdirError(a,p,t):e._readdirEntries(a,r,t)}}(this,e,t))}},ao.prototype._readdirEntries=function(e,a,t){if(!this.aborted){if(!this.mark&&!this.stat)for(var p=0;p<a.length;p++){var r=a[p];this.cache[r="/"===e?e+r:e+"/"+r]=!0}return this.cache[e]=a,t(null,a)}},ao.prototype._readdirError=function(e,a,t){if(!this.aborted){switch(a.code){case"ENOTSUP":case"ENOTDIR":var p=this._makeAbs(e);if(this.cache[p]="FILE",p===this.cwdAbs){var r=new Error(a.code+" invalid cwd "+this.cwd);r.path=this.cwd,r.code=a.code,this.emit("error",r),this.abort()}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=!1;break;default:this.cache[this._makeAbs(e)]=!1,this.strict&&(this.emit("error",a),this.abort()),this.silent||console.error("glob error",a)}return t()}},ao.prototype._processGlobStar=function(e,a,t,p,r,i,o){var d=this;this._readdir(t,i,function(s,n){d._processGlobStar2(e,a,t,p,r,i,n,o)})},ao.prototype._processGlobStar2=function(e,a,t,p,r,i,o,d){if(!o)return d();var s=p.slice(1),n=e?[e]:[],l=n.concat(s);this._process(l,r,!1,d);var m=o.length;if(this.symlinks[t]&&i)return d();for(var c=0;c<m;c++)if("."!==o[c].charAt(0)||this.dot){var u=n.concat(o[c],s);this._process(u,r,!0,d);var h=n.concat(o[c],p);this._process(h,r,!0,d)}d()},ao.prototype._processSimple=function(e,a,t){var p=this;this._stat(e,function(r,i){p._processSimple2(e,a,r,i,t)})},ao.prototype._processSimple2=function(e,t,p,r,i){if(this.matches[t]||(this.matches[t]=Object.create(null)),!r)return i();if(e&&Di(e)&&!this.nomount){var o=/[\/\\]$/.test(e);"/"===e.charAt(0)?e=a.join(this.root,e):(e=a.resolve(this.root,e),o&&(e+="/"))}"win32"===process.platform&&(e=e.replace(/\\/g,"/")),this._emitMatch(t,e),i()},ao.prototype._stat=function(e,a){var t=this._makeAbs(e),p="/"===e.slice(-1);if(e.length>this.maxLength)return a();if(!this.stat&&Ki(this.cache,t)){var r=this.cache[t];if(Array.isArray(r)&&(r="DIR"),!p||"DIR"===r)return a(null,r);if(p&&"FILE"===r)return a()}var i=this.statCache[t];if(void 0!==i){if(!1===i)return a(null,i);var o=i.isDirectory()?"DIR":"FILE";return p&&"FILE"===o?a():a(null,o,i)}var d=this,s=Hi("stat\0"+t,function(p,r){if(r&&r.isSymbolicLink())return d.fs.stat(t,function(p,i){p?d._stat2(e,t,null,r,a):d._stat2(e,t,p,i,a)});d._stat2(e,t,p,r,a)});s&&d.fs.lstat(t,s)},ao.prototype._stat2=function(e,a,t,p,r){if(t&&("ENOENT"===t.code||"ENOTDIR"===t.code))return this.statCache[a]=!1,r();var i="/"===e.slice(-1);if(this.statCache[a]=p,"/"===a.slice(-1)&&p&&!p.isDirectory())return r(null,!1,p);var o=!0;return p&&(o=p.isDirectory()?"DIR":"FILE"),this.cache[a]=this.cache[a]||o,i&&"FILE"===o?r():r(null,o,p)};var to=["write","end","destroy"],po=["resume","pause"],ro=["data","close"],io=Array.prototype.slice;function oo(e,a){if(e.forEach)return e.forEach(a);for(var t=0;t<e.length;t++)a(e[t],t)}const so=(e,a)=>function(...t){return new(0,a.promiseModule)((p,r)=>{t.push(a.multiArgs?(...e)=>{a.errorFirst?e[0]?r(e):(e.shift(),p(e)):p(e)}:a.errorFirst?(e,a)=>{e?r(e):p(a)}:p),e.apply(this,t)})};var no=(e,a)=>{a=Object.assign({exclude:[/.+(Sync|Stream)$/],errorFirst:!0,promiseModule:Promise},a);const t=typeof e;if(null===e||"object"!==t&&"function"!==t)throw new TypeError(`Expected \`input\` to be a \`Function\` or \`Object\`, got \`${null===e?"null":t}\``);const p=e=>{const t=a=>"string"==typeof a?e===a:a.test(e);return a.include?a.include.some(t):!a.exclude.some(t)};let r;r="function"===t?function(...t){return a.excludeMain?e(...t):so(e,a).apply(this,t)}:Object.create(Object.getPrototypeOf(e));for(const t in e){const i=e[t];r[t]="function"==typeof i&&p(t)?so(i,a):i}return r},lo=_(function(e){const a=e=>Object.assign({level:9},e);e.exports=(e,t)=>e?no(u.gzip)(e,a(t)).then(e=>e.length).catch(e=>0):Promise.resolve(0),e.exports.sync=(e,t)=>u.gzipSync(e,a(t)).length,e.exports.stream=e=>{const t=new l.PassThrough,p=new l.PassThrough,r=function(e,a){var t=new l,p=!1;return oo(to,function(a){t[a]=function(){return e[a].apply(e,arguments)}}),oo(po,function(e){t[e]=function(){t.emit(e);var p=a[e];if(p)return p.apply(a,arguments);a.emit(e)}}),oo(ro,function(e){a.on(e,function(){var a=io.call(arguments);a.unshift(e),t.emit.apply(t,a)})}),a.on("end",function(){if(!p){p=!0;var e=io.call(arguments);e.unshift("end"),t.emit.apply(t,e)}}),e.on("drain",function(){t.emit("drain")}),e.on("error",r),a.on("error",r),t.writable=e.writable,t.readable=a.readable,t;function r(e){t.emit("error",e)}}(t,p);let i=0;const o=u.createGzip(a(e)).on("data",e=>{i+=e.length}).on("error",()=>{r.gzipSize=0}).on("end",()=>{r.gzipSize=i,r.emit("gzip-size",i),p.end()});return t.pipe(o),t.pipe(p,{end:!1}),r},e.exports.file=(a,t)=>new Promise((r,i)=>{const o=p.createReadStream(a);o.on("error",i);const d=o.pipe(e.exports.stream(t));d.on("error",i),d.on("gzip-size",r)}),e.exports.fileSync=(a,t)=>e.exports.sync(p.readFileSync(a),t)}),mo=/[|\\{}()[\]^$+*?.]/g,co=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(mo,"\\$&")},uo={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},ho=_(function(e){var a={};for(var t in uo)uo.hasOwnProperty(t)&&(a[uo[t]]=t);var p=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var r in p)if(p.hasOwnProperty(r)){if(!("channels"in p[r]))throw new Error("missing channels property: "+r);if(!("labels"in p[r]))throw new Error("missing channel labels property: "+r);if(p[r].labels.length!==p[r].channels)throw new Error("channel and label counts mismatch: "+r);var i=p[r].channels,o=p[r].labels;delete p[r].channels,delete p[r].labels,Object.defineProperty(p[r],"channels",{value:i}),Object.defineProperty(p[r],"labels",{value:o})}p.rgb.hsl=function(e){var a,t,p=e[0]/255,r=e[1]/255,i=e[2]/255,o=Math.min(p,r,i),d=Math.max(p,r,i),s=d-o;return d===o?a=0:p===d?a=(r-i)/s:r===d?a=2+(i-p)/s:i===d&&(a=4+(p-r)/s),(a=Math.min(60*a,360))<0&&(a+=360),t=(o+d)/2,[a,100*(d===o?0:t<=.5?s/(d+o):s/(2-d-o)),100*t]},p.rgb.hsv=function(e){var a,t,p,r,i,o=e[0]/255,d=e[1]/255,s=e[2]/255,n=Math.max(o,d,s),l=n-Math.min(o,d,s),m=function(e){return(n-e)/6/l+.5};return 0===l?r=i=0:(i=l/n,a=m(o),t=m(d),p=m(s),o===n?r=p-t:d===n?r=1/3+a-p:s===n&&(r=2/3+t-a),r<0?r+=1:r>1&&(r-=1)),[360*r,100*i,100*n]},p.rgb.hwb=function(e){var a=e[0],t=e[1],r=e[2];return[p.rgb.hsl(e)[0],1/255*Math.min(a,Math.min(t,r))*100,100*(r=1-1/255*Math.max(a,Math.max(t,r)))]},p.rgb.cmyk=function(e){var a,t=e[0]/255,p=e[1]/255,r=e[2]/255;return[100*((1-t-(a=Math.min(1-t,1-p,1-r)))/(1-a)||0),100*((1-p-a)/(1-a)||0),100*((1-r-a)/(1-a)||0),100*a]},p.rgb.keyword=function(e){var t=a[e];if(t)return t;var p,r,i,o=Infinity;for(var d in uo)if(uo.hasOwnProperty(d)){var s=(r=e,i=uo[d],Math.pow(r[0]-i[0],2)+Math.pow(r[1]-i[1],2)+Math.pow(r[2]-i[2],2));s<o&&(o=s,p=d)}return p},p.keyword.rgb=function(e){return uo[e]},p.rgb.xyz=function(e){var a=e[0]/255,t=e[1]/255,p=e[2]/255;return[100*(.4124*(a=a>.04045?Math.pow((a+.055)/1.055,2.4):a/12.92)+.3576*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.1805*(p=p>.04045?Math.pow((p+.055)/1.055,2.4):p/12.92)),100*(.2126*a+.7152*t+.0722*p),100*(.0193*a+.1192*t+.9505*p)]},p.rgb.lab=function(e){var a=p.rgb.xyz(e),t=a[0],r=a[1],i=a[2];return r/=100,i/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116)-16,500*(t-r),200*(r-(i=i>.008856?Math.pow(i,1/3):7.787*i+16/116))]},p.hsl.rgb=function(e){var a,t,p,r,i,o=e[0]/360,d=e[1]/100,s=e[2]/100;if(0===d)return[i=255*s,i,i];a=2*s-(t=s<.5?s*(1+d):s+d-s*d),r=[0,0,0];for(var n=0;n<3;n++)(p=o+1/3*-(n-1))<0&&p++,p>1&&p--,r[n]=255*(i=6*p<1?a+6*(t-a)*p:2*p<1?t:3*p<2?a+(t-a)*(2/3-p)*6:a);return r},p.hsl.hsv=function(e){var a=e[0],t=e[1]/100,p=e[2]/100,r=t,i=Math.max(p,.01);return t*=(p*=2)<=1?p:2-p,r*=i<=1?i:2-i,[a,100*(0===p?2*r/(i+r):2*t/(p+t)),(p+t)/2*100]},p.hsv.rgb=function(e){var a=e[0]/60,t=e[1]/100,p=e[2]/100,r=Math.floor(a)%6,i=a-Math.floor(a),o=255*p*(1-t),d=255*p*(1-t*i),s=255*p*(1-t*(1-i));switch(p*=255,r){case 0:return[p,s,o];case 1:return[d,p,o];case 2:return[o,p,s];case 3:return[o,d,p];case 4:return[s,o,p];case 5:return[p,o,d]}},p.hsv.hsl=function(e){var a,t,p,r=e[0],i=e[1]/100,o=e[2]/100,d=Math.max(o,.01);return p=(2-i)*o,t=i*d,[r,100*(t=(t/=(a=(2-i)*d)<=1?a:2-a)||0),100*(p/=2)]},p.hwb.rgb=function(e){var a,t,p,r,i,o,d,s=e[0]/360,n=e[1]/100,l=e[2]/100,m=n+l;switch(m>1&&(n/=m,l/=m),p=6*s-(a=Math.floor(6*s)),0!=(1&a)&&(p=1-p),r=n+p*((t=1-l)-n),a){default:case 6:case 0:i=t,o=r,d=n;break;case 1:i=r,o=t,d=n;break;case 2:i=n,o=t,d=r;break;case 3:i=n,o=r,d=t;break;case 4:i=r,o=n,d=t;break;case 5:i=t,o=n,d=r}return[255*i,255*o,255*d]},p.cmyk.rgb=function(e){var a=e[1]/100,t=e[2]/100,p=e[3]/100;return[255*(1-Math.min(1,e[0]/100*(1-p)+p)),255*(1-Math.min(1,a*(1-p)+p)),255*(1-Math.min(1,t*(1-p)+p))]},p.xyz.rgb=function(e){var a,t,p,r=e[0]/100,i=e[1]/100,o=e[2]/100;return t=-.9689*r+1.8758*i+.0415*o,p=.0557*r+-.204*i+1.057*o,a=(a=3.2406*r+-1.5372*i+-.4986*o)>.0031308?1.055*Math.pow(a,1/2.4)-.055:12.92*a,t=t>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,p=p>.0031308?1.055*Math.pow(p,1/2.4)-.055:12.92*p,[255*(a=Math.min(Math.max(0,a),1)),255*(t=Math.min(Math.max(0,t),1)),255*(p=Math.min(Math.max(0,p),1))]},p.xyz.lab=function(e){var a=e[0],t=e[1],p=e[2];return t/=100,p/=108.883,a=(a/=95.047)>.008856?Math.pow(a,1/3):7.787*a+16/116,[116*(t=t>.008856?Math.pow(t,1/3):7.787*t+16/116)-16,500*(a-t),200*(t-(p=p>.008856?Math.pow(p,1/3):7.787*p+16/116))]},p.lab.xyz=function(e){var a,t,p;a=e[1]/500+(t=(e[0]+16)/116),p=t-e[2]/200;var r=Math.pow(t,3),i=Math.pow(a,3),o=Math.pow(p,3);return t=r>.008856?r:(t-16/116)/7.787,a=i>.008856?i:(a-16/116)/7.787,p=o>.008856?o:(p-16/116)/7.787,[a*=95.047,t*=100,p*=108.883]},p.lab.lch=function(e){var a,t=e[0],p=e[1],r=e[2];return(a=360*Math.atan2(r,p)/2/Math.PI)<0&&(a+=360),[t,Math.sqrt(p*p+r*r),a]},p.lch.lab=function(e){var a,t=e[1];return a=e[2]/360*2*Math.PI,[e[0],t*Math.cos(a),t*Math.sin(a)]},p.rgb.ansi16=function(e){var a=e[0],t=e[1],r=e[2],i=1 in arguments?arguments[1]:p.rgb.hsv(e)[2];if(0===(i=Math.round(i/50)))return 30;var o=30+(Math.round(r/255)<<2|Math.round(t/255)<<1|Math.round(a/255));return 2===i&&(o+=60),o},p.hsv.ansi16=function(e){return p.rgb.ansi16(p.hsv.rgb(e),e[2])},p.rgb.ansi256=function(e){var a=e[0],t=e[1],p=e[2];return a===t&&t===p?a<8?16:a>248?231:Math.round((a-8)/247*24)+232:16+36*Math.round(a/255*5)+6*Math.round(t/255*5)+Math.round(p/255*5)},p.ansi16.rgb=function(e){var a=e%10;if(0===a||7===a)return e>50&&(a+=3.5),[a=a/10.5*255,a,a];var t=.5*(1+~~(e>50));return[(1&a)*t*255,(a>>1&1)*t*255,(a>>2&1)*t*255]},p.ansi256.rgb=function(e){if(e>=232){var a=10*(e-232)+8;return[a,a,a]}var t;return e-=16,[Math.floor(e/36)/5*255,Math.floor((t=e%36)/6)/5*255,t%6/5*255]},p.rgb.hex=function(e){var a=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(a.length)+a},p.hex.rgb=function(e){var a=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!a)return[0,0,0];var t=a[0];3===a[0].length&&(t=t.split("").map(function(e){return e+e}).join(""));var p=parseInt(t,16);return[p>>16&255,p>>8&255,255&p]},p.rgb.hcg=function(e){var a,t=e[0]/255,p=e[1]/255,r=e[2]/255,i=Math.max(Math.max(t,p),r),o=Math.min(Math.min(t,p),r),d=i-o;return a=d<=0?0:i===t?(p-r)/d%6:i===p?2+(r-t)/d:4+(t-p)/d+4,a/=6,[360*(a%=1),100*d,100*(d<1?o/(1-d):0)]},p.hsl.hcg=function(e){var a,t=e[1]/100,p=e[2]/100,r=0;return(a=p<.5?2*t*p:2*t*(1-p))<1&&(r=(p-.5*a)/(1-a)),[e[0],100*a,100*r]},p.hsv.hcg=function(e){var a=e[2]/100,t=e[1]/100*a,p=0;return t<1&&(p=(a-t)/(1-t)),[e[0],100*t,100*p]},p.hcg.rgb=function(e){var a=e[1]/100,t=e[2]/100;if(0===a)return[255*t,255*t,255*t];var p,r=[0,0,0],i=e[0]/360%1*6,o=i%1,d=1-o;switch(Math.floor(i)){case 0:r[0]=1,r[1]=o,r[2]=0;break;case 1:r[0]=d,r[1]=1,r[2]=0;break;case 2:r[0]=0,r[1]=1,r[2]=o;break;case 3:r[0]=0,r[1]=d,r[2]=1;break;case 4:r[0]=o,r[1]=0,r[2]=1;break;default:r[0]=1,r[1]=0,r[2]=d}return[255*(a*r[0]+(p=(1-a)*t)),255*(a*r[1]+p),255*(a*r[2]+p)]},p.hcg.hsv=function(e){var a=e[1]/100,t=a+e[2]/100*(1-a),p=0;return t>0&&(p=a/t),[e[0],100*p,100*t]},p.hcg.hsl=function(e){var a=e[1]/100,t=e[2]/100*(1-a)+.5*a,p=0;return t>0&&t<.5?p=a/(2*t):t>=.5&&t<1&&(p=a/(2*(1-t))),[e[0],100*p,100*t]},p.hcg.hwb=function(e){var a=e[1]/100,t=a+e[2]/100*(1-a);return[e[0],100*(t-a),100*(1-t)]},p.hwb.hcg=function(e){var a=1-e[2]/100,t=a-e[1]/100,p=0;return t<1&&(p=(a-t)/(1-t)),[e[0],100*t,100*p]},p.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},p.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},p.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},p.gray.hsl=p.gray.hsv=function(e){return[0,0,e[0]]},p.gray.hwb=function(e){return[0,100,e[0]]},p.gray.cmyk=function(e){return[0,0,0,e[0]]},p.gray.lab=function(e){return[e[0],0,0]},p.gray.hex=function(e){var a=255&Math.round(e[0]/100*255),t=((a<<16)+(a<<8)+a).toString(16).toUpperCase();return"000000".substring(t.length)+t},p.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}});function fo(e,a){return function(t){return a(e(t))}}function vo(e,a){for(var t=[a[e].parent,e],p=ho[a[e].parent][e],r=a[e].parent;a[r].parent;)t.unshift(a[r].parent),p=fo(ho[a[r].parent][r],p),r=a[r].parent;return p.conversion=t,p}var go={};Object.keys(ho).forEach(function(e){go[e]={},Object.defineProperty(go[e],"channels",{value:ho[e].channels}),Object.defineProperty(go[e],"labels",{value:ho[e].labels});var a=function(e){for(var a=function(e){var a=function(){for(var e={},a=Object.keys(ho),t=a.length,p=0;p<t;p++)e[a[p]]={distance:-1,parent:null};return e}(),t=[e];for(a[e].distance=0;t.length;)for(var p=t.pop(),r=Object.keys(ho[p]),i=r.length,o=0;o<i;o++){var d=r[o],s=a[d];-1===s.distance&&(s.distance=a[p].distance+1,s.parent=p,t.unshift(d))}return a}(e),t={},p=Object.keys(a),r=p.length,i=0;i<r;i++){var o=p[i];null!==a[o].parent&&(t[o]=vo(o,a))}return t}(e);Object.keys(a).forEach(function(t){var p=a[t];go[e][t]=function(e){var a=function(a){if(null==a)return a;arguments.length>1&&(a=Array.prototype.slice.call(arguments));var t=e(a);if("object"==typeof t)for(var p=t.length,r=0;r<p;r++)t[r]=Math.round(t[r]);return t};return"conversion"in e&&(a.conversion=e.conversion),a}(p),go[e][t].raw=function(e){var a=function(a){return null==a?a:(arguments.length>1&&(a=Array.prototype.slice.call(arguments)),e(a))};return"conversion"in e&&(a.conversion=e.conversion),a}(p)})});var wo=go,yo=_(function(e){const a=(e,a)=>function(){const t=e.apply(wo,arguments);return`[${t+a}m`},t=(e,a)=>function(){const t=e.apply(wo,arguments);return`[${38+a};5;${t}m`},p=(e,a)=>function(){const t=e.apply(wo,arguments);return`[${38+a};2;${t[0]};${t[1]};${t[2]}m`};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){const e=new Map,r={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};r.color.grey=r.color.gray;for(const a of Object.keys(r)){const t=r[a];for(const a of Object.keys(t)){const p=t[a];r[a]={open:`[${p[0]}m`,close:`[${p[1]}m`},t[a]=r[a],e.set(p[0],p[1])}Object.defineProperty(r,a,{value:t,enumerable:!1}),Object.defineProperty(r,"codes",{value:e,enumerable:!1})}const i=e=>e,o=(e,a,t)=>[e,a,t];r.color.close="[39m",r.bgColor.close="[49m",r.color.ansi={ansi:a(i,0)},r.color.ansi256={ansi256:t(i,0)},r.color.ansi16m={rgb:p(o,0)},r.bgColor.ansi={ansi:a(i,10)},r.bgColor.ansi256={ansi256:t(i,10)},r.bgColor.ansi16m={rgb:p(o,10)};for(let e of Object.keys(wo)){if("object"!=typeof wo[e])continue;const i=wo[e];"ansi16"===e&&(e="ansi"),"ansi16"in i&&(r.color.ansi[e]=a(i.ansi16,0),r.bgColor.ansi[e]=a(i.ansi16,10)),"ansi256"in i&&(r.color.ansi256[e]=t(i.ansi256,0),r.bgColor.ansi256[e]=t(i.ansi256,10)),"rgb"in i&&(r.color.ansi16m[e]=p(i.rgb,0),r.bgColor.ansi16m[e]=p(i.rgb,10))}return r}})}),bo=(e,a)=>{a=a||process.argv;const t=e.startsWith("-")?"":1===e.length?"-":"--",p=a.indexOf(t+e),r=a.indexOf("--");return-1!==p&&(-1===r||p<r)};const _o=process.env;let Eo;function To(e){return 0!==(a=function(e){if(!1===Eo)return 0;if(bo("color=16m")||bo("color=full")||bo("color=truecolor"))return 3;if(bo("color=256"))return 2;if(e&&!e.isTTY&&!0!==Eo)return 0;const a=Eo?1:0;if("win32"===process.platform){const e=t.release().split(".");return Number(process.versions.node.split(".")[0])>=8&&Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in _o)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some(e=>e in _o)||"codeship"===_o.CI_NAME?1:a;if("TEAMCITY_VERSION"in _o)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(_o.TEAMCITY_VERSION)?1:0;if("truecolor"===_o.COLORTERM)return 3;if("TERM_PROGRAM"in _o){const e=parseInt((_o.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(_o.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(_o.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(_o.TERM)||"COLORTERM"in _o?1:a}(e))&&{level:a,hasBasic:!0,has256:a>=2,has16m:a>=3};var a}bo("no-color")||bo("no-colors")||bo("color=false")?Eo=!1:(bo("color")||bo("colors")||bo("color=true")||bo("color=always"))&&(Eo=!0),"FORCE_COLOR"in _o&&(Eo=0===_o.FORCE_COLOR.length||0!==parseInt(_o.FORCE_COLOR,10));var So={supportsColor:To,stdout:To(process.stdout),stderr:To(process.stderr)};const Oo=/(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,Ao=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,No=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,Do=/\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,Co=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e",""],["a",""]]);function ko(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):Co.get(e)||e}function Po(e,a){const t=[],p=a.trim().split(/\s*,\s*/g);let r;for(const a of p)if(isNaN(a)){if(!(r=a.match(No)))throw new Error(`Invalid Chalk template style argument: ${a} (in style '${e}')`);t.push(r[2].replace(Do,(e,a,t)=>a?ko(a):t))}else t.push(Number(a));return t}function Ro(e){Ao.lastIndex=0;const a=[];let t;for(;null!==(t=Ao.exec(e));){const e=t[1];if(t[2]){const p=Po(e,t[2]);a.push([e].concat(p))}else a.push([e])}return a}function Fo(e,a){const t={};for(const e of a)for(const a of e.styles)t[a[0]]=e.inverse?null:a.slice(1);let p=e;for(const e of Object.keys(t))if(Array.isArray(t[e])){if(!(e in p))throw new Error("Unknown Chalk style: "+e);p=t[e].length>0?p[e].apply(p,t[e]):p[e]}return p}var Vo=(e,a)=>{const t=[],p=[];let r=[];if(a.replace(Oo,(a,i,o,d,s,n)=>{if(i)r.push(ko(i));else if(d){const a=r.join("");r=[],p.push(0===t.length?a:Fo(e,t)(a)),t.push({inverse:o,styles:Ro(d)})}else if(s){if(0===t.length)throw new Error("Found extraneous } in Chalk template literal");p.push(Fo(e,t)(r.join(""))),r=[],t.pop()}else r.push(n)}),p.push(r.join("")),t.length>0)throw new Error(`Chalk template literal is missing ${t.length} closing bracket${1===t.length?"":"s"} (\`}\`)`);return p.join("")},jo=_(function(e){const a=So.stdout,t="win32"===process.platform&&!(process.env.TERM||"").toLowerCase().startsWith("xterm"),p=["ansi","ansi","ansi256","ansi16m"],r=new Set(["gray"]),i=Object.create(null);function o(e,t){e.level=void 0===(t=t||{}).level?a?a.level:0:t.level,e.enabled="enabled"in t?t.enabled:e.level>0}function d(e){if(!this||!(this instanceof d)||this.template){const a={};return o(a,e),a.template=function(){const e=[].slice.call(arguments);return m.apply(null,[a.template].concat(e))},Object.setPrototypeOf(a,d.prototype),Object.setPrototypeOf(a.template,a),a.template.constructor=d,a.template}o(this,e)}t&&(yo.blue.open="[94m");for(const e of Object.keys(yo))yo[e].closeRe=new RegExp(co(yo[e].close),"g"),i[e]={get(){const a=yo[e];return n.call(this,this._styles?this._styles.concat(a):[a],this._empty,e)}};i.visible={get(){return n.call(this,this._styles||[],!0,"visible")}},yo.color.closeRe=new RegExp(co(yo.color.close),"g");for(const e of Object.keys(yo.color.ansi))r.has(e)||(i[e]={get(){const a=this.level;return function(){const t=yo.color[p[a]][e].apply(null,arguments),r={open:t,close:yo.color.close,closeRe:yo.color.closeRe};return n.call(this,this._styles?this._styles.concat(r):[r],this._empty,e)}}});yo.bgColor.closeRe=new RegExp(co(yo.bgColor.close),"g");for(const e of Object.keys(yo.bgColor.ansi))r.has(e)||(i["bg"+e[0].toUpperCase()+e.slice(1)]={get(){const a=this.level;return function(){const t=yo.bgColor[p[a]][e].apply(null,arguments),r={open:t,close:yo.bgColor.close,closeRe:yo.bgColor.closeRe};return n.call(this,this._styles?this._styles.concat(r):[r],this._empty,e)}}});const s=Object.defineProperties(()=>{},i);function n(e,a,t){const p=function(){return l.apply(p,arguments)};p._styles=e,p._empty=a;const r=this;return Object.defineProperty(p,"level",{enumerable:!0,get:()=>r.level,set(e){r.level=e}}),Object.defineProperty(p,"enabled",{enumerable:!0,get:()=>r.enabled,set(e){r.enabled=e}}),p.hasGrey=this.hasGrey||"gray"===t||"grey"===t,p.__proto__=s,p}function l(){const e=arguments,a=e.length;let p=String(arguments[0]);if(0===a)return"";if(a>1)for(let t=1;t<a;t++)p+=" "+e[t];if(!this.enabled||this.level<=0||!p)return this._empty?"":p;const r=yo.dim.open;t&&this.hasGrey&&(yo.dim.open="");for(const e of this._styles.slice().reverse())p=e.open+p.replace(e.closeRe,e.open)+e.close,p=p.replace(/\r?\n/g,`${e.close}$&${e.open}`);return yo.dim.open=r,p}function m(e,a){if(!Array.isArray(a))return[].slice.call(arguments,1).join(" ");const t=[].slice.call(arguments,2),p=[a.raw[0]];for(let e=1;e<a.length;e++)p.push(String(t[e-1]).replace(/[{}\\]/g,"\\$&")),p.push(String(a.raw[e]));return Vo(e,p.join(""))}Object.defineProperties(d.prototype,i),e.exports=d(),e.exports.supportsColor=a,e.exports.default=e.exports});const xo=["B","kB","MB","GB","TB","PB","EB","ZB","YB"],Io=["B","kiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"],Uo=["b","kbit","Mbit","Gbit","Tbit","Pbit","Ebit","Zbit","Ybit"],Go=["b","kibit","Mibit","Gibit","Tibit","Pibit","Eibit","Zibit","Yibit"],Bo=(e,a,t)=>{let p=e;return"string"==typeof a||Array.isArray(a)?p=e.toLocaleString(a,t):!0!==a&&void 0===t||(p=e.toLocaleString(void 0,t)),p};var Lo=(e,a)=>{if(!Number.isFinite(e))throw new TypeError(`Expected a finite number, got ${typeof e}: ${e}`);const t=(a=Object.assign({bits:!1,binary:!1},a)).bits?a.binary?Go:Uo:a.binary?Io:xo;if(a.signed&&0===e)return" 0 "+t[0];const p=e<0,r=p?"-":a.signed?"+":"";let i;if(p&&(e=-e),void 0!==a.minimumFractionDigits&&(i={minimumFractionDigits:a.minimumFractionDigits}),void 0!==a.maximumFractionDigits&&(i=Object.assign({maximumFractionDigits:a.maximumFractionDigits},i)),e<1)return r+Bo(e,a.locale,i)+" "+t[0];const o=Math.min(Math.floor(a.binary?Math.log(e)/Math.log(1024):Math.log10(e)/3),t.length-1);return e/=Math.pow(a.binary?1024:1e3,o),i||(e=e.toPrecision(3)),r+Bo(Number(e),a.locale,i)+" "+t[o]},Mo=["write","end","destroy"],qo=["resume","pause"],$o=["data","close"],Ho=Array.prototype.slice;function zo(e,a){if(e.forEach)return e.forEach(a);for(var t=0;t<e.length;t++)a(e[t],t)}var Wo=_(function(e,a){Object.defineProperty(a,"__esModule",{value:!0});const t=n.promisify(p.readFile),r=e=>"string"==typeof e?Buffer.from(e,"utf8"):e,i=(e,a)=>({params:{[u.constants.BROTLI_PARAM_MODE]:e&&"mode"in e&&e.mode||u.constants.BROTLI_DEFAULT_MODE,[u.constants.BROTLI_PARAM_QUALITY]:e&&"quality"in e&&e.quality||u.constants.BROTLI_MAX_QUALITY,[u.constants.BROTLI_PARAM_SIZE_HINT]:a?a.byteLength:0}});async function o(e,a){const t=r(e);return new Promise(function(e,p){u.brotliCompress(t,i(a,t),(a,t)=>{null!==a&&p(a),e(t.byteLength)})})}function d(e,a){const t=r(e);return u.brotliCompressSync(t,i(a,t)).byteLength}a.default=o,a.sync=d,a.stream=function(e){const a=new l.PassThrough,t=new l.PassThrough,p=function(e,a){var t=new l,p=!1;return zo(Mo,function(a){t[a]=function(){return e[a].apply(e,arguments)}}),zo(qo,function(e){t[e]=function(){t.emit(e);var p=a[e];if(p)return p.apply(a,arguments);a.emit(e)}}),zo($o,function(e){a.on(e,function(){var a=Ho.call(arguments);a.unshift(e),t.emit.apply(t,a)})}),a.on("end",function(){if(!p){p=!0;var e=Ho.call(arguments);e.unshift("end"),t.emit.apply(t,e)}}),e.on("drain",function(){t.emit("drain")}),e.on("error",r),a.on("error",r),t.writable=e.writable,t.readable=a.readable,t;function r(e){t.emit("error",e)}}(a,t);let r=0;const o=u.createBrotliCompress(i(e)).on("data",e=>{r+=e.length}).on("error",()=>{p.brotliSize=0}).on("end",()=>{p.brotliSize=r,p.emit("brotli-size",r),t.end()});return a.pipe(o),a.pipe(t,{end:!1}),p},a.file=async function(e,a){const p=await t(e);return await o(p,a)},a.fileSync=function(e,a){return d(p.readFileSync(e),a)}}),Jo=function(e,a){return function(){for(var t=new Array(arguments.length),p=0;p<t.length;p++)t[p]=arguments[p];return e.apply(a,t)}},Yo=Object.prototype.toString;function Ko(e){return"[object Array]"===Yo.call(e)}function Qo(e){return void 0===e}function Xo(e){return null!==e&&"object"==typeof e}function Zo(e){return"[object Function]"===Yo.call(e)}function ed(e,a){if(null!=e)if("object"!=typeof e&&(e=[e]),Ko(e))for(var t=0,p=e.length;t<p;t++)a.call(null,e[t],t,e);else for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&a.call(null,e[r],r,e)}var ad={isArray:Ko,isArrayBuffer:function(e){return"[object ArrayBuffer]"===Yo.call(e)},isBuffer:function(e){return null!==e&&!Qo(e)&&null!==e.constructor&&!Qo(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:Xo,isUndefined:Qo,isDate:function(e){return"[object Date]"===Yo.call(e)},isFile:function(e){return"[object File]"===Yo.call(e)},isBlob:function(e){return"[object Blob]"===Yo.call(e)},isFunction:Zo,isStream:function(e){return Xo(e)&&Zo(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return"ReactNative"!=="{}".product&&"NativeScript"!=="{}".product&&"NS"!=="{}".product&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:ed,merge:function e(){var a={};function t(t,p){a[p]="object"==typeof a[p]&&"object"==typeof t?e(a[p],t):t}for(var p=0,r=arguments.length;p<r;p++)ed(arguments[p],t);return a},deepMerge:function e(){var a={};function t(t,p){a[p]="object"==typeof a[p]&&"object"==typeof t?e(a[p],t):"object"==typeof t?e({},t):t}for(var p=0,r=arguments.length;p<r;p++)ed(arguments[p],t);return a},extend:function(e,a,t){return ed(a,function(a,p){e[p]=t&&"function"==typeof a?Jo(a,t):a}),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}};function td(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var pd=function(e,a,t){if(!a)return e;var p;if(t)p=t(a);else if(ad.isURLSearchParams(a))p=a.toString();else{var r=[];ad.forEach(a,function(e,a){null!=e&&(ad.isArray(e)?a+="[]":e=[e],ad.forEach(e,function(e){ad.isDate(e)?e=e.toISOString():ad.isObject(e)&&(e=JSON.stringify(e)),r.push(td(a)+"="+td(e))}))}),p=r.join("&")}if(p){var i=e.indexOf("#");-1!==i&&(e=e.slice(0,i)),e+=(-1===e.indexOf("?")?"?":"&")+p}return e};function rd(){this.handlers=[]}rd.prototype.use=function(e,a){return this.handlers.push({fulfilled:e,rejected:a}),this.handlers.length-1},rd.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},rd.prototype.forEach=function(e){ad.forEach(this.handlers,function(a){null!==a&&e(a)})};var id=rd,od=function(e,a,t){return ad.forEach(t,function(t){e=t(e,a)}),e},dd=function(e){return!(!e||!e.__CANCEL__)},sd=function(e,a){ad.forEach(e,function(t,p){p!==a&&p.toUpperCase()===a.toUpperCase()&&(e[a]=t,delete e[p])})},nd=function(e,a,t,p,r){return e.config=a,t&&(e.code=t),e.request=p,e.response=r,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e},ld=function(e,a,t,p,r){var i=new Error(e);return nd(i,a,t,p,r)},md=function(e,a,t){var p=t.config.validateStatus;!p||p(t.status)?e(t):a(ld("Request failed with status code "+t.status,t.config,null,t.request,t))},cd=function(e,a){return e&&!/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(a)?function(e,a){return a?e.replace(/\/+$/,"")+"/"+a.replace(/^\/+/,""):e}(e,a):a},ud=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"],hd=ad.isStandardBrowserEnv()?function(){var e,a=/(msie|trident)/i.test("{}".userAgent),t=document.createElement("a");function p(e){var p=e;return a&&(t.setAttribute("href",p),p=t.href),t.setAttribute("href",p),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return e=p(window.location.href),function(a){var t=ad.isString(a)?p(a):a;return t.protocol===e.protocol&&t.host===e.host}}():function(){return!0},fd=ad.isStandardBrowserEnv()?{write:function(e,a,t,p,r,i){var o=[];o.push(e+"="+encodeURIComponent(a)),ad.isNumber(t)&&o.push("expires="+new Date(t).toGMTString()),ad.isString(p)&&o.push("path="+p),ad.isString(r)&&o.push("domain="+r),!0===i&&o.push("secure"),document.cookie=o.join("; ")},read:function(e){var a=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return a?decodeURIComponent(a[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},vd=1e3,gd=60*vd,wd=60*gd,yd=24*wd,bd=function(e,a){a=a||{};var t=typeof e;if("string"===t&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var a=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(a){var t=parseFloat(a[1]);switch((a[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*t;case"days":case"day":case"d":return t*yd;case"hours":case"hour":case"hrs":case"hr":case"h":return t*wd;case"minutes":case"minute":case"mins":case"min":case"m":return t*gd;case"seconds":case"second":case"secs":case"sec":case"s":return t*vd;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return t;default:return}}}}(e);if("number"===t&&!1===isNaN(e))return a.long?function(e){return _d(e,yd,"day")||_d(e,wd,"hour")||_d(e,gd,"minute")||_d(e,vd,"second")||e+" ms"}(e):function(e){return e>=yd?Math.round(e/yd)+"d":e>=wd?Math.round(e/wd)+"h":e>=gd?Math.round(e/gd)+"m":e>=vd?Math.round(e/vd)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function _d(e,a,t){if(!(e<a))return e<1.5*a?Math.floor(e/a)+" "+t:Math.ceil(e/a)+" "+t+"s"}var Ed=_(function(e,a){function t(e){var t;function r(){if(r.enabled){var e=r,p=+new Date,i=p-(t||p);e.diff=i,e.prev=t,e.curr=p,t=p;for(var o=new Array(arguments.length),d=0;d<o.length;d++)o[d]=arguments[d];o[0]=a.coerce(o[0]),"string"!=typeof o[0]&&o.unshift("%O");var s=0;o[0]=o[0].replace(/%([a-zA-Z%])/g,function(t,p){if("%%"===t)return t;s++;var r=a.formatters[p];return"function"==typeof r&&(t=r.call(e,o[s]),o.splice(s,1),s--),t}),a.formatArgs.call(e,o);var n=r.log||a.log||console.log.bind(console);n.apply(e,o)}}return r.namespace=e,r.enabled=a.enabled(e),r.useColors=a.useColors(),r.color=function(e){var t,p=0;for(t in e)p=(p<<5)-p+e.charCodeAt(t),p|=0;return a.colors[Math.abs(p)%a.colors.length]}(e),r.destroy=p,"function"==typeof a.init&&a.init(r),a.instances.push(r),r}function p(){var e=a.instances.indexOf(this);return-1!==e&&(a.instances.splice(e,1),!0)}(a=e.exports=t.debug=t.default=t).coerce=function(e){return e instanceof Error?e.stack||e.message:e},a.disable=function(){a.enable("")},a.enable=function(e){var t;a.save(e),a.names=[],a.skips=[];var p=("string"==typeof e?e:"").split(/[\s,]+/),r=p.length;for(t=0;t<r;t++)p[t]&&("-"===(e=p[t].replace(/\*/g,".*?"))[0]?a.skips.push(new RegExp("^"+e.substr(1)+"$")):a.names.push(new RegExp("^"+e+"$")));for(t=0;t<a.instances.length;t++){var i=a.instances[t];i.enabled=a.enabled(i.namespace)}},a.enabled=function(e){if("*"===e[e.length-1])return!0;var t,p;for(t=0,p=a.skips.length;t<p;t++)if(a.skips[t].test(e))return!1;for(t=0,p=a.names.length;t<p;t++)if(a.names[t].test(e))return!0;return!1},a.humanize=bd,a.instances=[],a.names=[],a.skips=[],a.formatters={}}),Td=_(function(e,a){function t(){var e;try{e=a.storage.debug}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e}(a=e.exports=Ed).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},a.formatArgs=function(e){var t=this.useColors;if(e[0]=(t?"%c":"")+this.namespace+(t?" %c":" ")+e[0]+(t?"%c ":" ")+"+"+a.humanize(this.diff),t){var p="color: "+this.color;e.splice(1,0,p,"color: inherit");var r=0,i=0;e[0].replace(/%[a-zA-Z%]/g,function(e){"%%"!==e&&(r++,"%c"===e&&(i=r))}),e.splice(i,0,p)}},a.save=function(e){try{null==e?a.storage.removeItem("debug"):a.storage.debug=e}catch(e){}},a.load=t,a.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type)||(!"{}".userAgent||!"{}".userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"{}".userAgent&&"{}".userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"{}".userAgent&&"{}".userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},a.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),a.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],a.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},a.enable(t())}),Sd=(e,a=process.argv)=>{const t=e.startsWith("-")?"":1===e.length?"-":"--",p=a.indexOf(t+e),r=a.indexOf("--");return-1!==p&&(-1===r||p<r)};const{env:Od}=process;let Ad;function Nd(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function Dd(e,a){if(0===Ad)return 0;if(Sd("color=16m")||Sd("color=full")||Sd("color=truecolor"))return 3;if(Sd("color=256"))return 2;if(e&&!a&&void 0===Ad)return 0;const p=Ad||0;if("dumb"===Od.TERM)return p;if("win32"===process.platform){const e=t.release().split(".");return Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in Od)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE"].some(e=>e in Od)||"codeship"===Od.CI_NAME?1:p;if("TEAMCITY_VERSION"in Od)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(Od.TEAMCITY_VERSION)?1:0;if("truecolor"===Od.COLORTERM)return 3;if("TERM_PROGRAM"in Od){const e=parseInt((Od.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(Od.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(Od.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(Od.TERM)||"COLORTERM"in Od?1:p}Sd("no-color")||Sd("no-colors")||Sd("color=false")||Sd("color=never")?Ad=0:(Sd("color")||Sd("colors")||Sd("color=true")||Sd("color=always"))&&(Ad=1),"FORCE_COLOR"in Od&&(Ad="true"===Od.FORCE_COLOR?1:"false"===Od.FORCE_COLOR?0:0===Od.FORCE_COLOR.length?1:Math.min(parseInt(Od.FORCE_COLOR,10),3));var Cd={supportsColor:function(e){return Nd(Dd(e,e&&e.isTTY))},stdout:Nd(Dd(!0,g.isatty(1))),stderr:Nd(Dd(!0,g.isatty(2)))},kd=_(function(e,a){(a=e.exports=Ed).init=function(e){e.inspectOpts={};for(var t=Object.keys(a.inspectOpts),p=0;p<t.length;p++)e.inspectOpts[t[p]]=a.inspectOpts[t[p]]},a.log=function(){return process.stderr.write(n.format.apply(n,arguments)+"\n")},a.formatArgs=function(e){var t=this.namespace;if(this.useColors){var p=this.color,r="[3"+(p<8?p:"8;5;"+p),i="  "+r+";1m"+t+" [0m";e[0]=i+e[0].split("\n").join("\n"+i),e.push(r+"m+"+a.humanize(this.diff)+"[0m")}else e[0]=(a.inspectOpts.hideDate?"":(new Date).toISOString()+" ")+t+" "+e[0]},a.save=function(e){null==e?delete process.env.DEBUG:process.env.DEBUG=e},a.load=t,a.useColors=function(){return"colors"in a.inspectOpts?Boolean(a.inspectOpts.colors):g.isatty(process.stderr.fd)},a.colors=[6,2,3,4,5,1];try{Cd&&Cd.level>=2&&(a.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}function t(){return process.env.DEBUG}a.inspectOpts=Object.keys(process.env).filter(function(e){return/^debug_/i.test(e)}).reduce(function(e,a){var t=a.substring(6).toLowerCase().replace(/_([a-z])/g,function(e,a){return a.toUpperCase()}),p=process.env[a];return p=!!/^(yes|on|true|enabled)$/i.test(p)||!/^(no|off|false|disabled)$/i.test(p)&&("null"===p?null:Number(p)),e[t]=p,e},{}),a.formatters.o=function(e){return this.inspectOpts.colors=this.useColors,n.inspect(e,this.inspectOpts).split("\n").map(function(e){return e.trim()}).join(" ")},a.formatters.O=function(e){return this.inspectOpts.colors=this.useColors,n.inspect(e,this.inspectOpts)},a.enable(t())}),Pd=_(function(e){e.exports="undefined"==typeof process||"renderer"===process.type?Td:kd}),Rd=l.Writable,Fd=Pd("follow-redirects"),Vd={GET:!0,HEAD:!0,OPTIONS:!0,TRACE:!0},jd=Object.create(null);function xd(e,a){Rd.call(this),e.headers=e.headers||{},this._options=e,this._redirectCount=0,this._redirects=[],this._requestBodyLength=0,this._requestBodyBuffers=[],e.host&&(e.hostname||(e.hostname=e.host),delete e.host),a&&this.on("response",a);var t=this;if(this._onNativeResponse=function(e){t._processResponse(e)},!e.pathname&&e.path){var p=e.path.indexOf("?");p<0?e.pathname=e.path:(e.pathname=e.path.substring(0,p),e.search=e.path.substring(p))}this._performRequest()}function Id(e){var a={maxRedirects:21,maxBodyLength:10485760},t={};return Object.keys(e).forEach(function(p){var r=p+":",i=t[r]=e[p],o=a[p]=Object.create(i);o.request=function(e,p){return"string"==typeof e?(e=m.parse(e)).maxRedirects=a.maxRedirects:e=Object.assign({protocol:r,maxRedirects:a.maxRedirects,maxBodyLength:a.maxBodyLength},e),e.nativeProtocols=t,s.equal(e.protocol,r,"protocol mismatch"),Fd("options",e),new xd(e,p)},o.get=function(e,a){var t=o.request(e,a);return t.end(),t}}),a}["abort","aborted","error","socket","timeout"].forEach(function(e){jd[e]=function(a){this._redirectable.emit(e,a)}}),(xd.prototype=Object.create(Rd.prototype)).write=function(e,a,t){if(!("string"==typeof e||"object"==typeof e&&"length"in e))throw new Error("data should be a string, Buffer or Uint8Array");"function"==typeof a&&(t=a,a=null),0!==e.length?this._requestBodyLength+e.length<=this._options.maxBodyLength?(this._requestBodyLength+=e.length,this._requestBodyBuffers.push({data:e,encoding:a}),this._currentRequest.write(e,a,t)):(this.emit("error",new Error("Request body larger than maxBodyLength limit")),this.abort()):t&&t()},xd.prototype.end=function(e,a,t){"function"==typeof e?(t=e,e=a=null):"function"==typeof a&&(t=a,a=null);var p=this._currentRequest;this.write(e||"",a,function(){p.end(null,null,t)})},xd.prototype.setHeader=function(e,a){this._options.headers[e]=a,this._currentRequest.setHeader(e,a)},xd.prototype.removeHeader=function(e){delete this._options.headers[e],this._currentRequest.removeHeader(e)},["abort","flushHeaders","getHeader","setNoDelay","setSocketKeepAlive","setTimeout"].forEach(function(e){xd.prototype[e]=function(a,t){return this._currentRequest[e](a,t)}}),["aborted","connection","socket"].forEach(function(e){Object.defineProperty(xd.prototype,e,{get:function(){return this._currentRequest[e]}})}),xd.prototype._performRequest=function(){var e=this._options.protocol,a=this._options.nativeProtocols[e];if(a){if(this._options.agents){var t=e.substr(0,e.length-1);this._options.agent=this._options.agents[t]}var p=this._currentRequest=a.request(this._options,this._onNativeResponse);for(var r in this._currentUrl=m.format(this._options),p._redirectable=this,jd)r&&p.on(r,jd[r]);if(this._isRedirect){var i=0,o=this._requestBodyBuffers;!function e(){if(i<o.length){var a=o[i++];p.write(a.data,a.encoding,e)}else p.end()}()}}else this.emit("error",new Error("Unsupported protocol "+e))},xd.prototype._processResponse=function(e){this._options.trackRedirects&&this._redirects.push({url:this._currentUrl,headers:e.headers,statusCode:e.statusCode});var a=e.headers.location;if(a&&!1!==this._options.followRedirects&&e.statusCode>=300&&e.statusCode<400){if(++this._redirectCount>this._options.maxRedirects)return void this.emit("error",new Error("Max redirects exceeded."));var t,p=this._options.headers;if(307!==e.statusCode&&!(this._options.method in Vd))for(t in this._options.method="GET",this._requestBodyBuffers=[],p)/^content-/i.test(t)&&delete p[t];if(!this._isRedirect)for(t in p)/^host$/i.test(t)&&delete p[t];var r=m.resolve(this._currentUrl,a);Fd("redirecting to",r),Object.assign(this._options,m.parse(r)),this._isRedirect=!0,this._performRequest(),e.destroy()}else e.responseUrl=this._currentUrl,e.redirects=this._redirects,this.emit("response",e),this._requestBodyBuffers=[]};var Ud=Id({http:r,https:i});Ud.wrap=Id;var Gd="Promise based HTTP client for the browser and node.js",Bd={test:"grunt test && bundlesize",start:"node ./sandbox/server.js",build:"NODE_ENV=production grunt build",preversion:"npm test",version:"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",postversion:"git push && git push --tags",examples:"node ./examples/server.js",coveralls:"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",fix:"eslint --fix lib/**/*.js"},Ld={type:"git",url:"https://github.com/axios/axios.git"},Md=["xhr","http","ajax","promise","node"],qd={url:"https://github.com/axios/axios/issues"},$d="https://github.com/axios/axios",Hd={bundlesize:"^0.17.0",coveralls:"^3.0.0","es6-promise":"^4.2.4",grunt:"^1.0.2","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^20.1.0","grunt-karma":"^2.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^1.0.18","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1",karma:"^1.3.0","karma-chrome-launcher":"^2.2.0","karma-coverage":"^1.1.1","karma-firefox-launcher":"^1.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-opera-launcher":"^1.0.0","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^1.2.0","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^1.7.0","load-grunt-tasks":"^3.5.2",minimist:"^1.2.0",mocha:"^5.2.0",sinon:"^4.5.0",typescript:"^2.8.1","url-search-params":"^0.10.0",webpack:"^1.13.1","webpack-dev-server":"^1.14.1"},zd={"./lib/adapters/http.js":"./lib/adapters/xhr.js"},Wd={"follow-redirects":"1.5.10"},Jd=[{path:"./dist/axios.min.js",threshold:"5kB"}],Yd=E({__proto__:null,name:"axios",version:"0.19.2",description:Gd,main:"index.js",scripts:Bd,repository:Ld,keywords:Md,author:"Matt Zabriskie",license:"MIT",bugs:qd,homepage:$d,devDependencies:Hd,browser:zd,typings:"./index.d.ts",dependencies:Wd,bundlesize:Jd,default:{name:"axios",version:"0.19.2",description:Gd,main:"index.js",scripts:Bd,repository:Ld,keywords:Md,author:"Matt Zabriskie",license:"MIT",bugs:qd,homepage:$d,devDependencies:Hd,browser:zd,typings:"./index.d.ts",dependencies:Wd,bundlesize:Jd}}),Kd=Ud.http,Qd=Ud.https,Xd=/https:?/,Zd={"Content-Type":"application/x-www-form-urlencoded"};function es(e,a){!ad.isUndefined(e)&&ad.isUndefined(e["Content-Type"])&&(e["Content-Type"]=a)}var as,ts={adapter:("undefined"!=typeof XMLHttpRequest?as=function(e){return new Promise(function(a,t){var p=e.data,r=e.headers;ad.isFormData(p)&&delete r["Content-Type"];var i=new XMLHttpRequest;e.auth&&(r.Authorization="Basic "+btoa((e.auth.username||"")+":"+(e.auth.password||"")));var o=cd(e.baseURL,e.url);if(i.open(e.method.toUpperCase(),pd(o,e.params,e.paramsSerializer),!0),i.timeout=e.timeout,i.onreadystatechange=function(){if(i&&4===i.readyState&&(0!==i.status||i.responseURL&&0===i.responseURL.indexOf("file:"))){var p,r,o,d,s,n="getAllResponseHeaders"in i?(p=i.getAllResponseHeaders(),s={},p?(ad.forEach(p.split("\n"),function(e){if(d=e.indexOf(":"),r=ad.trim(e.substr(0,d)).toLowerCase(),o=ad.trim(e.substr(d+1)),r){if(s[r]&&ud.indexOf(r)>=0)return;s[r]="set-cookie"===r?(s[r]?s[r]:[]).concat([o]):s[r]?s[r]+", "+o:o}}),s):s):null;md(a,t,{data:e.responseType&&"text"!==e.responseType?i.response:i.responseText,status:i.status,statusText:i.statusText,headers:n,config:e,request:i}),i=null}},i.onabort=function(){i&&(t(ld("Request aborted",e,"ECONNABORTED",i)),i=null)},i.onerror=function(){t(ld("Network Error",e,null,i)),i=null},i.ontimeout=function(){var a="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(a=e.timeoutErrorMessage),t(ld(a,e,"ECONNABORTED",i)),i=null},ad.isStandardBrowserEnv()){var d=fd,s=(e.withCredentials||hd(o))&&e.xsrfCookieName?d.read(e.xsrfCookieName):void 0;s&&(r[e.xsrfHeaderName]=s)}if("setRequestHeader"in i&&ad.forEach(r,function(e,a){void 0===p&&"content-type"===a.toLowerCase()?delete r[a]:i.setRequestHeader(a,e)}),ad.isUndefined(e.withCredentials)||(i.withCredentials=!!e.withCredentials),e.responseType)try{i.responseType=e.responseType}catch(a){if("json"!==e.responseType)throw a}"function"==typeof e.onDownloadProgress&&i.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&i.upload&&i.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){i&&(i.abort(),t(e),i=null)}),void 0===p&&(p=null),i.send(p)})}:"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process)&&(as=function(e){return new Promise(function(a,t){var p=function(e){a(e)},o=function(e){t(e)},d=e.data,s=e.headers;if(s["User-Agent"]||s["user-agent"]||(s["User-Agent"]="axios/"+Yd.version),d&&!ad.isStream(d)){if(Buffer.isBuffer(d));else if(ad.isArrayBuffer(d))d=Buffer.from(new Uint8Array(d));else{if(!ad.isString(d))return o(ld("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",e));d=Buffer.from(d,"utf-8")}s["Content-Length"]=d.length}var n=void 0;e.auth&&(n=(e.auth.username||"")+":"+(e.auth.password||""));var l=cd(e.baseURL,e.url),c=m.parse(l),h=c.protocol||"http:";if(!n&&c.auth){var f=c.auth.split(":");n=(f[0]||"")+":"+(f[1]||"")}n&&delete s.Authorization;var v=Xd.test(h),g=v?e.httpsAgent:e.httpAgent,w={path:pd(c.path,e.params,e.paramsSerializer).replace(/^\?/,""),method:e.method.toUpperCase(),headers:s,agent:g,agents:{http:e.httpAgent,https:e.httpsAgent},auth:n};e.socketPath?w.socketPath=e.socketPath:(w.hostname=c.hostname,w.port=c.port);var y,b=e.proxy;if(!b&&!1!==b){var _=h.slice(0,-1)+"_proxy",E=process.env[_]||process.env[_.toUpperCase()];if(E){var T=m.parse(E),S=process.env.no_proxy||process.env.NO_PROXY,O=!0;if(S&&(O=!S.split(",").map(function(e){return e.trim()}).some(function(e){return!!e&&("*"===e||"."===e[0]&&c.hostname.substr(c.hostname.length-e.length)===e||c.hostname===e)})),O&&(b={host:T.hostname,port:T.port},T.auth)){var A=T.auth.split(":");b.auth={username:A[0],password:A[1]}}}}if(b&&(w.hostname=b.host,w.host=b.host,w.headers.host=c.hostname+(c.port?":"+c.port:""),w.port=b.port,w.path=h+"//"+c.hostname+(c.port?":"+c.port:"")+w.path,b.auth)){var N=Buffer.from(b.auth.username+":"+b.auth.password,"utf8").toString("base64");w.headers["Proxy-Authorization"]="Basic "+N}var D=v&&(!b||Xd.test(b.protocol));e.transport?y=e.transport:0===e.maxRedirects?y=D?i:r:(e.maxRedirects&&(w.maxRedirects=e.maxRedirects),y=D?Qd:Kd),e.maxContentLength&&e.maxContentLength>-1&&(w.maxBodyLength=e.maxContentLength);var C=y.request(w,function(a){if(!C.aborted){var t=a;switch(a.headers["content-encoding"]){case"gzip":case"compress":case"deflate":t=204===a.statusCode?t:t.pipe(u.createUnzip()),delete a.headers["content-encoding"]}var r=a.req||C,i={status:a.statusCode,statusText:a.statusMessage,headers:a.headers,config:e,request:r};if("stream"===e.responseType)i.data=t,md(p,o,i);else{var d=[];t.on("data",function(a){d.push(a),e.maxContentLength>-1&&Buffer.concat(d).length>e.maxContentLength&&(t.destroy(),o(ld("maxContentLength size of "+e.maxContentLength+" exceeded",e,null,r)))}),t.on("error",function(a){C.aborted||o(nd(a,e,null,r))}),t.on("end",function(){var a=Buffer.concat(d);"arraybuffer"!==e.responseType&&(a=a.toString(e.responseEncoding)),i.data=a,md(p,o,i)})}}});C.on("error",function(a){C.aborted||o(nd(a,e,null,C))}),e.timeout&&C.setTimeout(e.timeout,function(){C.abort(),o(ld("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",C))}),e.cancelToken&&e.cancelToken.promise.then(function(e){C.aborted||(C.abort(),o(e))}),ad.isStream(d)?d.on("error",function(a){o(nd(a,e,null,C))}).pipe(C):C.end(d)})}),as),transformRequest:[function(e,a){return sd(a,"Accept"),sd(a,"Content-Type"),ad.isFormData(e)||ad.isArrayBuffer(e)||ad.isBuffer(e)||ad.isStream(e)||ad.isFile(e)||ad.isBlob(e)?e:ad.isArrayBufferView(e)?e.buffer:ad.isURLSearchParams(e)?(es(a,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):ad.isObject(e)?(es(a,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};ad.forEach(["delete","get","head"],function(e){ts.headers[e]={}}),ad.forEach(["post","put","patch"],function(e){ts.headers[e]=ad.merge(Zd)});var ps=ts;function rs(e){e.cancelToken&&e.cancelToken.throwIfRequested()}var is=function(e){return rs(e),e.headers=e.headers||{},e.data=od(e.data,e.headers,e.transformRequest),e.headers=ad.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),ad.forEach(["delete","get","head","post","put","patch","common"],function(a){delete e.headers[a]}),(e.adapter||ps.adapter)(e).then(function(a){return rs(e),a.data=od(a.data,a.headers,e.transformResponse),a},function(a){return dd(a)||(rs(e),a&&a.response&&(a.response.data=od(a.response.data,a.response.headers,e.transformResponse))),Promise.reject(a)})},os=function(e,a){a=a||{};var t={},p=["url","method","params","data"],r=["headers","auth","proxy"],i=["baseURL","url","transformRequest","transformResponse","paramsSerializer","timeout","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","maxContentLength","validateStatus","maxRedirects","httpAgent","httpsAgent","cancelToken","socketPath"];ad.forEach(p,function(e){void 0!==a[e]&&(t[e]=a[e])}),ad.forEach(r,function(p){ad.isObject(a[p])?t[p]=ad.deepMerge(e[p],a[p]):void 0!==a[p]?t[p]=a[p]:ad.isObject(e[p])?t[p]=ad.deepMerge(e[p]):void 0!==e[p]&&(t[p]=e[p])}),ad.forEach(i,function(p){void 0!==a[p]?t[p]=a[p]:void 0!==e[p]&&(t[p]=e[p])});var o=p.concat(r).concat(i),d=Object.keys(a).filter(function(e){return-1===o.indexOf(e)});return ad.forEach(d,function(p){void 0!==a[p]?t[p]=a[p]:void 0!==e[p]&&(t[p]=e[p])}),t};function ds(e){this.defaults=e,this.interceptors={request:new id,response:new id}}ds.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=os(this.defaults,e)).method=e.method?e.method.toLowerCase():this.defaults.method?this.defaults.method.toLowerCase():"get";var a=[is,void 0],t=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){a.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){a.push(e.fulfilled,e.rejected)});a.length;)t=t.then(a.shift(),a.shift());return t},ds.prototype.getUri=function(e){return e=os(this.defaults,e),pd(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},ad.forEach(["delete","get","head","options"],function(e){ds.prototype[e]=function(a,t){return this.request(ad.merge(t||{},{method:e,url:a}))}}),ad.forEach(["post","put","patch"],function(e){ds.prototype[e]=function(a,t,p){return this.request(ad.merge(p||{},{method:e,url:a,data:t}))}});var ss=ds;function ns(e){this.message=e}ns.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},ns.prototype.__CANCEL__=!0;var ls=ns;function ms(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var a;this.promise=new Promise(function(e){a=e});var t=this;e(function(e){t.reason||(t.reason=new ls(e),a(t.reason))})}ms.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},ms.source=function(){var e;return{token:new ms(function(a){e=a}),cancel:e}};var cs=ms;function us(e){var a=new ss(e),t=Jo(ss.prototype.request,a);return ad.extend(t,ss.prototype,a),ad.extend(t,a),t}var hs=us(ps);hs.Axios=ss,hs.create=function(e){return us(os(hs.defaults,e))},hs.Cancel=ls,hs.CancelToken=cs,hs.isCancel=dd,hs.all=function(e){return Promise.all(e)},hs.spread=function(e){return function(a){return e.apply(null,a)}};var fs=hs;fs.default=hs;var vs=fs;let gs,ws,ys,bs,_s,Es,Ts,Ss,Os,As,Ns="github";if(process.env.TRAVIS)gs=process.env.TRAVIS_REPO_SLUG,ws=process.env.TRAVIS_PULL_REQUEST_SHA||process.env.TRAVIS_COMMIT,ys=process.env.TRAVIS_EVENT_TYPE,bs=process.env.TRAVIS_COMMIT_MESSAGE,Es=process.env.TRAVIS_PULL_REQUEST,Os=`https://travis-ci.org/${gs}/jobs/${process.env.TRAVIS_JOB_ID}`,As=`https://travis-ci.org/${gs}/builds/${process.env.TRAVIS_JOB_ID}`,Ts="push"===process.env.TRAVIS_EVENT_TYPE?process.env.TRAVIS_BRANCH:process.env.TRAVIS_PULL_REQUEST_BRANCH,_s="push"===process.env.TRAVIS_EVENT_TYPE?"":process.env.TRAVIS_BRANCH,Ss="travis";else if(process.env.CIRCLECI)gs=process.env.CIRCLE_PROJECT_USERNAME+"/"+process.env.CIRCLE_PROJECT_REPONAME,ws=process.env.CIRCLE_SHA1,ys="push",bs="",process.env.CI_PULL_REQUEST?(Es=process.env.CI_PULL_REQUEST.split("/").pop(),ys="pull_request"):Es="",Ts=process.env.CIRCLE_BRANCH,Ss="circle";else if(process.env.WERCKER)gs=process.env.WERCKER_GIT_OWNER+"/"+process.env.WERCKER_GIT_REPOSITORY,ws=process.env.WERCKER_GIT_COMMIT,ys="push",bs="",Es="",_s="",Ts=process.env.WERCKER_GIT_BRANCH,Ss="wercker";else if(process.env.DRONE)gs=process.env.DRONE_REPO||process.env.CI_REPO||function(e){e||(e=process.env);let a=e.DRONE_REMOTE||e.CI_REMOTE;if(!a)return"";let t=a.split("/").slice(-2);return t[0]+"/"+t[1].replace(/\.git$/,"")}(process.env),ws=process.env.DRONE_COMMIT||process.env.CI_COMMIT,ys=process.env.DRONE_BUILD_EVENT||process.env.DRONE_EVENT||process.env.CI_EVENT||"push",bs="",Es=process.env.DRONE_PULL_REQUEST,_s=process.env.DRONE_TARGET_BRANCH,Ts=process.env.DRONE_BRANCH||process.env.CI_BRANCH,Ss="drone";else if(process.env.GITLAB_CI)gs=process.env.CI_PROJECT_PATH,Ts=process.env.CI_MERGE_REQUEST_SOURCE_BRANCH_NAME||process.env.CI_COMMIT_REF_NAME,bs=process.env.CI_COMMIT_MESSAGE,Es=process.env.CI_MERGE_REQUEST_ID||"",_s=process.env.CI_MERGE_REQUEST_TARGET_BRANCH_NAME||process.env.CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_NAME,ws=process.env.CI_COMMIT_SHA,ys=process.env.CI_PIPELINE_SOURCE,Os=process.env.CI_JOB_URL,Ns="gitlab",Ss="gitlab";else if("codeship"===process.env.CI_NAME)gs=process.env.CI_REPO_NAME,Ts=process.env.CI_BRANCH,bs=process.env.CI_COMMIT_MESSAGE||process.env.CI_MESSAGE,ys="push",Es=process.env.CI_PR_NUMBER,_s="",ws=process.env.CI_COMMIT_ID,As=process.env.CI_BUILD_URL,Ss="codeship";else if(process.env.GITHUB_ACTION){const e=process.env.GITHUB_REF.split("/")[2];gs=process.env.GITHUB_REPOSITORY,ws=process.env.GITHUB_SHA,ys=process.env.GITHUB_EVENT_NAME,bs="",Es="pull_request"===ys?e:"",Ts="pull_request"===ys?process.env.GITHUB_HEAD_REF:e,_s=process.env.GITHUB_BASE_REF,Ss="github_actions"}else process.env.CF_PAGES?(gs="",ys="push",Es="",_s="",ws=process.env.CF_PAGES_COMMIT_SHA,Ts=process.env.CF_PAGES_BRANCH,Ss="cloudflare"):process.env.NETLIFY?(gs=process.env.REPOSITORY_URL.split("@github.com/").pop(),ys=process.env.PULL_REQUEST?"pull_request":"push",Es=process.env.PULL_REQUEST?process.env.REVIEW_ID:"",_s="",ws=process.env.COMMIT_REF,Ts=process.env.HEAD,Ss="netlify"):process.env.NOW_GITHUB_ORG?(gs=process.env.NOW_GITHUB_ORG+"/"+process.env.NOW_GITHUB_REPO,ys="push",Es="",ws=process.env.NOW_GITHUB_COMMIT_SHA,Ts=process.env.NOW_GITHUB_COMMIT_REF,Ss="now"):process.env.BUDDY?(gs=process.env.BUDDY_PROJECT_NAME,Ts=process.env.BUDDY_EXECUTION_BRANCH,bs=process.env.BUDDY_EXECUTION_REVISION_MESSAGE,Es=process.env.BUDDY_EXECUTION_PULL_REQUEST_NO,_s=process.env.BUDDY_EXECUTION_PULL_REQUEST_BASE_BRANCH,ws=process.env.BUDDY_EXECUTION_REVISION,ys=process.env.BUDDY_EXECUTION_MODE,Os=process.env.BUDDY_EXECUTION_REVISION_URL,Ns="buddy",Ss="buddy"):process.env.CF_BUILD_URL?(gs=process.env.CF_REPO_NAME,Ts=process.env.CF_BRANCH,bs=process.env.CF_COMMIT_MESSAGE,Es=process.env.CF_PULL_REQUEST_NUMBER,_s=process.env.CF_PULL_REQUEST_TARGET,ws=process.env.CF_REVISION,ys="push",As=process.env.CF_BUILD_URL,Ns="codefresh",Ss="codefresh"):process.env.CI&&(Ns=process.env.CI_PLATFORM,gs=process.env.CI_REPO_OWNER+"/"+process.env.CI_REPO_NAME,ws=process.env.CI_COMMIT_SHA,ys=process.env.CI_EVENT||"push",bs=process.env.CI_COMMIT_MESSAGE,Es=process.env.CI_MERGE_REQUEST_ID,_s=process.env.CI_TARGET_BRANCH,Ts=process.env.CI_BRANCH,Ss=process.env.CI);var Ds={repo:gs,sha:ws,event:ys,commit_message:bs,branch:Ts,pull_request_number:Es,pull_request_target_branch:_s,ci:Ss,platform:Ns,jobUrl:Os,buildUrl:As};const{repo:Cs,sha:ks,ci:Ps}=Ds,Rs=process.env.SIZE_STORE_ENDPOINT||"https://size-store.now.sh";var Fs={publishDiff:async function(e,a){if("test"!==process.env.NODE_ENV&&Ps)try{const t={ci:Ps,repo:Cs,sha:ks,filename:a,diff:e};await vs.post(Rs+"/diff",t)}catch(e){console.error("error: while publishing diff",e)}},publishSizes:async function(e,a){if("test"!==process.env.NODE_ENV&&Ps)try{const t={ci:Ps,repo:Cs,sha:ks,filename:a,size:e};await vs.post(Rs+"/size",t)}catch(e){console.error("error: while publishing sizes",e)}}},Vs=function(e){return Object.defineProperty(function(){if("function"!=typeof arguments[arguments.length-1])return new Promise((a,t)=>{arguments[arguments.length]=(e,p)=>{if(e)return t(e);a(p)},arguments.length++,e.apply(this,arguments)});e.apply(this,arguments)},"name",{value:e.name})},js=process.cwd,xs=null,Is=process.env.GRACEFUL_FS_PLATFORM||process.platform;process.cwd=function(){return xs||(xs=js.call(process)),xs};try{process.cwd()}catch(e){}if("function"==typeof process.chdir){var Us=process.chdir;process.chdir=function(e){xs=null,Us.call(process,e)},Object.setPrototypeOf&&Object.setPrototypeOf(process.chdir,Us)}var Gs=l.Stream,Bs=Object.getPrototypeOf||function(e){return e.__proto__},Ls=_(function(e){var a,t;function r(e,t){Object.defineProperty(e,a,{get:function(){return t}})}"function"==typeof Symbol&&"function"==typeof Symbol.for?(a=Symbol.for("graceful-fs.queue"),t=Symbol.for("graceful-fs.previous")):(a="___graceful-fs.queue",t="___graceful-fs.previous");var i,o=function(){};function d(e){(function(e){var a,t;function p(a){return a?function(t,p,r){return a.call(e,t,p,function(e){n(e)&&(e=null),r&&r.apply(this,arguments)})}:a}function r(a){return a?function(t,p){try{return a.call(e,t,p)}catch(e){if(!n(e))throw e}}:a}function i(a){return a?function(t,p,r,i){return a.call(e,t,p,r,function(e){n(e)&&(e=null),i&&i.apply(this,arguments)})}:a}function o(a){return a?function(t,p,r){try{return a.call(e,t,p,r)}catch(e){if(!n(e))throw e}}:a}function d(a){return a?function(t,p,r){function i(e,a){a&&(a.uid<0&&(a.uid+=4294967296),a.gid<0&&(a.gid+=4294967296)),r&&r.apply(this,arguments)}return"function"==typeof p&&(r=p,p=null),p?a.call(e,t,p,i):a.call(e,t,i)}:a}function s(a){return a?function(t,p){var r=p?a.call(e,t,p):a.call(e,t);return r&&(r.uid<0&&(r.uid+=4294967296),r.gid<0&&(r.gid+=4294967296)),r}:a}function n(e){return!e||"ENOSYS"===e.code||!(process.getuid&&0===process.getuid()||"EINVAL"!==e.code&&"EPERM"!==e.code)}w.hasOwnProperty("O_SYMLINK")&&process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)&&function(e){e.lchmod=function(a,t,p){e.open(a,w.O_WRONLY|w.O_SYMLINK,t,function(a,r){a?p&&p(a):e.fchmod(r,t,function(a){e.close(r,function(e){p&&p(a||e)})})})},e.lchmodSync=function(a,t){var p,r=e.openSync(a,w.O_WRONLY|w.O_SYMLINK,t),i=!0;try{p=e.fchmodSync(r,t),i=!1}finally{if(i)try{e.closeSync(r)}catch(e){}else e.closeSync(r)}return p}}(e),e.lutimes||function(e){w.hasOwnProperty("O_SYMLINK")?(e.lutimes=function(a,t,p,r){e.open(a,w.O_SYMLINK,function(a,i){a?r&&r(a):e.futimes(i,t,p,function(a){e.close(i,function(e){r&&r(a||e)})})})},e.lutimesSync=function(a,t,p){var r,i=e.openSync(a,w.O_SYMLINK),o=!0;try{r=e.futimesSync(i,t,p),o=!1}finally{if(o)try{e.closeSync(i)}catch(e){}else e.closeSync(i)}return r}):(e.lutimes=function(e,a,t,p){p&&process.nextTick(p)},e.lutimesSync=function(){})}(e),e.chown=i(e.chown),e.fchown=i(e.fchown),e.lchown=i(e.lchown),e.chmod=p(e.chmod),e.fchmod=p(e.fchmod),e.lchmod=p(e.lchmod),e.chownSync=o(e.chownSync),e.fchownSync=o(e.fchownSync),e.lchownSync=o(e.lchownSync),e.chmodSync=r(e.chmodSync),e.fchmodSync=r(e.fchmodSync),e.lchmodSync=r(e.lchmodSync),e.stat=d(e.stat),e.fstat=d(e.fstat),e.lstat=d(e.lstat),e.statSync=s(e.statSync),e.fstatSync=s(e.fstatSync),e.lstatSync=s(e.lstatSync),e.lchmod||(e.lchmod=function(e,a,t){t&&process.nextTick(t)},e.lchmodSync=function(){}),e.lchown||(e.lchown=function(e,a,t,p){p&&process.nextTick(p)},e.lchownSync=function(){}),"win32"===Is&&(e.rename=(a=e.rename,function(t,p,r){var i=Date.now(),o=0;a(t,p,function d(s){if(s&&("EACCES"===s.code||"EPERM"===s.code)&&Date.now()-i<6e4)return setTimeout(function(){e.stat(p,function(e,i){e&&"ENOENT"===e.code?a(t,p,d):r(s)})},o),void(o<100&&(o+=10));r&&r(s)})})),e.read=function(a){function t(t,p,r,i,o,d){var s;if(d&&"function"==typeof d){var n=0;s=function(l,m,c){if(l&&"EAGAIN"===l.code&&n<10)return n++,a.call(e,t,p,r,i,o,s);d.apply(this,arguments)}}return a.call(e,t,p,r,i,o,s)}return Object.setPrototypeOf&&Object.setPrototypeOf(t,a),t}(e.read),e.readSync=(t=e.readSync,function(a,p,r,i,o){for(var d=0;;)try{return t.call(e,a,p,r,i,o)}catch(e){if("EAGAIN"===e.code&&d<10){d++;continue}throw e}})})(e),e.gracefulify=d,e.createReadStream=function(a,t){return new e.ReadStream(a,t)},e.createWriteStream=function(a,t){return new e.WriteStream(a,t)};var a=e.readFile;e.readFile=function(e,t,p){return"function"==typeof t&&(p=t,t=null),function e(t,p,r,i){return a(t,p,function(a){!a||"EMFILE"!==a.code&&"ENFILE"!==a.code?"function"==typeof r&&r.apply(this,arguments):l([e,[t,p,r],a,i||Date.now(),Date.now()])})}(e,t,p)};var t=e.writeFile;e.writeFile=function(e,a,p,r){return"function"==typeof p&&(r=p,p=null),function e(a,p,r,i,o){return t(a,p,r,function(t){!t||"EMFILE"!==t.code&&"ENFILE"!==t.code?"function"==typeof i&&i.apply(this,arguments):l([e,[a,p,r,i],t,o||Date.now(),Date.now()])})}(e,a,p,r)};var p=e.appendFile;p&&(e.appendFile=function(e,a,t,r){return"function"==typeof t&&(r=t,t=null),function e(a,t,r,i,o){return p(a,t,r,function(p){!p||"EMFILE"!==p.code&&"ENFILE"!==p.code?"function"==typeof i&&i.apply(this,arguments):l([e,[a,t,r,i],p,o||Date.now(),Date.now()])})}(e,a,t,r)});var r=e.copyFile;r&&(e.copyFile=function(e,a,t,p){return"function"==typeof t&&(p=t,t=0),function e(a,t,p,i,o){return r(a,t,p,function(r){!r||"EMFILE"!==r.code&&"ENFILE"!==r.code?"function"==typeof i&&i.apply(this,arguments):l([e,[a,t,p,i],r,o||Date.now(),Date.now()])})}(e,a,t,p)});var i=e.readdir;if(e.readdir=function(e,a,t){return"function"==typeof a&&(t=a,a=null),function e(a,t,p,r){return i(a,t,function(i,o){!i||"EMFILE"!==i.code&&"ENFILE"!==i.code?(o&&o.sort&&o.sort(),"function"==typeof p&&p.call(this,i,o)):l([e,[a,t,p],i,r||Date.now(),Date.now()])})}(e,a,t)},"v0.8"===process.version.substr(0,4)){var o=function(e){return{ReadStream:function a(t,p){if(!(this instanceof a))return new a(t,p);Gs.call(this);var r=this;this.path=t,this.fd=null,this.readable=!0,this.paused=!1,this.flags="r",this.mode=438,this.bufferSize=65536,p=p||{};for(var i=Object.keys(p),o=0,d=i.length;o<d;o++){var s=i[o];this[s]=p[s]}if(this.encoding&&this.setEncoding(this.encoding),void 0!==this.start){if("number"!=typeof this.start)throw TypeError("start must be a Number");if(void 0===this.end)this.end=Infinity;else if("number"!=typeof this.end)throw TypeError("end must be a Number");if(this.start>this.end)throw new Error("start must be <= end");this.pos=this.start}null===this.fd?e.open(this.path,this.flags,this.mode,function(e,a){if(e)return r.emit("error",e),void(r.readable=!1);r.fd=a,r.emit("open",a),r._read()}):process.nextTick(function(){r._read()})},WriteStream:function a(t,p){if(!(this instanceof a))return new a(t,p);Gs.call(this),this.path=t,this.fd=null,this.writable=!0,this.flags="w",this.encoding="binary",this.mode=438,this.bytesWritten=0,p=p||{};for(var r=Object.keys(p),i=0,o=r.length;i<o;i++){var d=r[i];this[d]=p[d]}if(void 0!==this.start){if("number"!=typeof this.start)throw TypeError("start must be a Number");if(this.start<0)throw new Error("start must be >= zero");this.pos=this.start}this.busy=!1,this._queue=[],null===this.fd&&(this._open=e.open,this._queue.push([this._open,this.path,this.flags,this.mode,void 0]),this.flush())}}}(e);u=o.ReadStream,h=o.WriteStream}var s=e.ReadStream;s&&(u.prototype=Object.create(s.prototype),u.prototype.open=function(){var e=this;v(e.path,e.flags,e.mode,function(a,t){a?(e.autoClose&&e.destroy(),e.emit("error",a)):(e.fd=t,e.emit("open",t),e.read())})});var n=e.WriteStream;n&&(h.prototype=Object.create(n.prototype),h.prototype.open=function(){var e=this;v(e.path,e.flags,e.mode,function(a,t){a?(e.destroy(),e.emit("error",a)):(e.fd=t,e.emit("open",t))})}),Object.defineProperty(e,"ReadStream",{get:function(){return u},set:function(e){u=e},enumerable:!0,configurable:!0}),Object.defineProperty(e,"WriteStream",{get:function(){return h},set:function(e){h=e},enumerable:!0,configurable:!0});var m=u;Object.defineProperty(e,"FileReadStream",{get:function(){return m},set:function(e){m=e},enumerable:!0,configurable:!0});var c=h;function u(e,a){return this instanceof u?(s.apply(this,arguments),this):u.apply(Object.create(u.prototype),arguments)}function h(e,a){return this instanceof h?(n.apply(this,arguments),this):h.apply(Object.create(h.prototype),arguments)}Object.defineProperty(e,"FileWriteStream",{get:function(){return c},set:function(e){c=e},enumerable:!0,configurable:!0});var f=e.open;function v(e,a,t,p){return"function"==typeof t&&(p=t,t=null),function e(a,t,p,r,i){return f(a,t,p,function(o,d){!o||"EMFILE"!==o.code&&"ENFILE"!==o.code?"function"==typeof r&&r.apply(this,arguments):l([e,[a,t,p,r],o,i||Date.now(),Date.now()])})}(e,a,t,p)}return e.open=v,e}function l(e){o("ENQUEUE",e[0].name,e[1]),p[a].push(e),c()}function m(){for(var e=Date.now(),t=0;t<p[a].length;++t)p[a][t].length>2&&(p[a][t][3]=e,p[a][t][4]=e);c()}function c(){if(clearTimeout(i),i=void 0,0!==p[a].length){var e=p[a].shift(),t=e[0],r=e[1],d=e[2],s=e[3],n=e[4];if(void 0===s)o("RETRY",t.name,r),t.apply(null,r);else if(Date.now()-s>=6e4){o("TIMEOUT",t.name,r);var l=r.pop();"function"==typeof l&&l.call(null,d)}else{var m=Date.now()-n,u=Math.max(n-s,1);m>=Math.min(1.2*u,100)?(o("RETRY",t.name,r),t.apply(null,r.concat([s]))):p[a].push(e)}void 0===i&&(i=setTimeout(c,0))}}n.debuglog?o=n.debuglog("gfs4"):/\bgfs4\b/i.test(process.env.NODE_DEBUG||"")&&(o=function(){var e=n.format.apply(n,arguments);e="GFS4: "+e.split(/\n/).join("\nGFS4: "),console.error(e)}),p[a]||(r(p,y[a]||[]),p.close=function(e){function a(a,t){return e.call(p,a,function(e){e||m(),"function"==typeof t&&t.apply(this,arguments)})}return Object.defineProperty(a,t,{value:e}),a}(p.close),p.closeSync=function(e){function a(a){e.apply(p,arguments),m()}return Object.defineProperty(a,t,{value:e}),a}(p.closeSync),/\bgfs4\b/i.test(process.env.NODE_DEBUG||"")&&process.on("exit",function(){o(p[a]),s.equal(p[a].length,0)})),y[a]||r(y,p[a]),e.exports=d(function(e){if(null===e||"object"!=typeof e)return e;if(e instanceof Object)var a={__proto__:Bs(e)};else a=Object.create(null);return Object.getOwnPropertyNames(e).forEach(function(t){Object.defineProperty(a,t,Object.getOwnPropertyDescriptor(e,t))}),a}(p)),process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!p.__patched&&(e.exports=d(p),p.__patched=!0)}),Ms=_(function(e,a){const t=Vs,p=["access","appendFile","chmod","chown","close","copyFile","fchmod","fchown","fdatasync","fstat","fsync","ftruncate","futimes","lchown","lchmod","link","lstat","mkdir","mkdtemp","open","readFile","readdir","readlink","realpath","rename","rmdir","stat","symlink","truncate","unlink","utimes","writeFile"].filter(e=>"function"==typeof Ls[e]);Object.keys(Ls).forEach(e=>{"promises"!==e&&(a[e]=Ls[e])}),p.forEach(e=>{a[e]=t(Ls[e])}),a.exists=function(e,a){return"function"==typeof a?Ls.exists(e,a):new Promise(a=>Ls.exists(e,a))},a.read=function(e,a,t,p,r,i){return"function"==typeof i?Ls.read(e,a,t,p,r,i):new Promise((i,o)=>{Ls.read(e,a,t,p,r,(e,a,t)=>{if(e)return o(e);i({bytesRead:a,buffer:t})})})},a.write=function(e,a,...t){return"function"==typeof t[t.length-1]?Ls.write(e,a,...t):new Promise((p,r)=>{Ls.write(e,a,...t,(e,a,t)=>{if(e)return r(e);p({bytesWritten:a,buffer:t})})})},"function"==typeof Ls.realpath.native&&(a.realpath.native=t(Ls.realpath.native))});const qs=/[<>:"|?*]/;var $s=function(e){const t=function(e){return(e=a.normalize(a.resolve(e)).split(a.sep)).length>0?e[0]:null}(e);return e=e.replace(t,""),qs.test(e)};const Hs=$s,zs=parseInt("0777",8),Ws=$s,Js=parseInt("0777",8);var Ys=function e(t,p,r){p&&"object"==typeof p||(p={mode:p});let i=p.mode;const o=p.fs||Ls;if("win32"===process.platform&&Ws(t)){const e=new Error(t+" contains invalid WIN32 path characters.");throw e.code="EINVAL",e}void 0===i&&(i=Js&~process.umask()),r||(r=null),t=a.resolve(t);try{o.mkdirSync(t,i),r=r||t}catch(i){if("ENOENT"===i.code){if(a.dirname(t)===t)throw i;r=e(a.dirname(t),p,r),e(t,p,r)}else{let e;try{e=o.statSync(t)}catch(e){throw i}if(!e.isDirectory())throw i}}return r};const Ks=Vs(function e(t,p,r,i){if("function"==typeof p?(r=p,p={}):p&&"object"==typeof p||(p={mode:p}),"win32"===process.platform&&Hs(t)){const e=new Error(t+" contains invalid WIN32 path characters.");return e.code="EINVAL",r(e)}let o=p.mode;const d=p.fs||Ls;void 0===o&&(o=zs&~process.umask()),i||(i=null),r=r||function(){},t=a.resolve(t),d.mkdir(t,o,o=>{if(!o)return r(null,i=i||t);switch(o.code){case"ENOENT":if(a.dirname(t)===t)return r(o);e(a.dirname(t),p,(a,i)=>{a?r(a,i):e(t,p,r,i)});break;default:d.stat(t,(e,a)=>{e||!a.isDirectory()?r(o,i):r(null,i)})}})});var Qs={mkdirs:Ks,mkdirsSync:Ys,mkdirp:Ks,mkdirpSync:Ys,ensureDir:Ks,ensureDirSync:Ys};const Xs=process.versions.node.split("."),Zs=Number.parseInt(Xs[0],10),en=Number.parseInt(Xs[1],10),an=Number.parseInt(Xs[2],10);function tn(){if(Zs>10)return!0;if(10===Zs){if(en>5)return!0;if(5===en&&an>=0)return!0}return!1}function pn(e,t){const p=a.resolve(e).split(a.sep).filter(e=>e),r=a.resolve(t).split(a.sep).filter(e=>e);return p.reduce((e,a,t)=>e&&r[t]===a,!0)}function rn(e,a,t){return`Cannot ${t} '${e}' to a subdirectory of itself, '${a}'.`}var on={checkPaths:function(e,a,t,p){!function(e,a,t){tn()?Ls.stat(e,{bigint:!0},(e,p)=>{if(e)return t(e);Ls.stat(a,{bigint:!0},(e,a)=>e?"ENOENT"===e.code?t(null,{srcStat:p,destStat:null}):t(e):t(null,{srcStat:p,destStat:a}))}):Ls.stat(e,(e,p)=>{if(e)return t(e);Ls.stat(a,(e,a)=>e?"ENOENT"===e.code?t(null,{srcStat:p,destStat:null}):t(e):t(null,{srcStat:p,destStat:a}))})}(e,a,(r,i)=>{if(r)return p(r);const{srcStat:o,destStat:d}=i;return d&&d.ino&&d.dev&&d.ino===o.ino&&d.dev===o.dev?p(new Error("Source and destination must not be the same.")):o.isDirectory()&&pn(e,a)?p(new Error(rn(e,a,t))):p(null,{srcStat:o,destStat:d})})},checkPathsSync:function(e,a,t){const{srcStat:p,destStat:r}=function(e,a){let t,p;t=tn()?Ls.statSync(e,{bigint:!0}):Ls.statSync(e);try{p=tn()?Ls.statSync(a,{bigint:!0}):Ls.statSync(a)}catch(e){if("ENOENT"===e.code)return{srcStat:t,destStat:null};throw e}return{srcStat:t,destStat:p}}(e,a);if(r&&r.ino&&r.dev&&r.ino===p.ino&&r.dev===p.dev)throw new Error("Source and destination must not be the same.");if(p.isDirectory()&&pn(e,a))throw new Error(rn(e,a,t));return{srcStat:p,destStat:r}},checkParentPaths:function e(t,p,r,i,o){const d=a.resolve(a.dirname(t)),s=a.resolve(a.dirname(r));if(s===d||s===a.parse(s).root)return o();tn()?Ls.stat(s,{bigint:!0},(a,d)=>a?"ENOENT"===a.code?o():o(a):d.ino&&d.dev&&d.ino===p.ino&&d.dev===p.dev?o(new Error(rn(t,r,i))):e(t,p,s,i,o)):Ls.stat(s,(a,d)=>a?"ENOENT"===a.code?o():o(a):d.ino&&d.dev&&d.ino===p.ino&&d.dev===p.dev?o(new Error(rn(t,r,i))):e(t,p,s,i,o))},checkParentPathsSync:function e(t,p,r,i){const o=a.resolve(a.dirname(t)),d=a.resolve(a.dirname(r));if(d===o||d===a.parse(d).root)return;let s;try{s=tn()?Ls.statSync(d,{bigint:!0}):Ls.statSync(d)}catch(e){if("ENOENT"===e.code)return;throw e}if(s.ino&&s.dev&&s.ino===p.ino&&s.dev===p.dev)throw new Error(rn(t,r,i));return e(t,p,d,i)},isSrcSubdir:pn};const dn=Qs.mkdirsSync;function sn(e,t,p,r){if(!r.filter||r.filter(t,p))return function(e,t,p,r){const i=(r.dereference?Ls.statSync:Ls.lstatSync)(t);return i.isDirectory()?function(e,a,t,p,r){if(!a)return function(e,a,t,p){return Ls.mkdirSync(t),ln(a,t,p),Ls.chmodSync(t,e.mode)}(e,t,p,r);if(a&&!a.isDirectory())throw new Error(`Cannot overwrite non-directory '${p}' with directory '${t}'.`);return ln(t,p,r)}(i,e,t,p,r):i.isFile()||i.isCharacterDevice()||i.isBlockDevice()?function(e,a,t,p,r){return a?function(e,a,t,p){if(p.overwrite)return Ls.unlinkSync(t),nn(e,a,t,p);if(p.errorOnExist)throw new Error(`'${t}' already exists`)}(e,t,p,r):nn(e,t,p,r)}(i,e,t,p,r):i.isSymbolicLink()?function(e,t,p,r){let i=Ls.readlinkSync(t);if(r.dereference&&(i=a.resolve(process.cwd(),i)),e){let e;try{e=Ls.readlinkSync(p)}catch(e){if("EINVAL"===e.code||"UNKNOWN"===e.code)return Ls.symlinkSync(i,p);throw e}if(r.dereference&&(e=a.resolve(process.cwd(),e)),on.isSrcSubdir(i,e))throw new Error(`Cannot copy '${i}' to a subdirectory of itself, '${e}'.`);if(Ls.statSync(p).isDirectory()&&on.isSrcSubdir(e,i))throw new Error(`Cannot overwrite '${e}' with '${i}'.`);return function(e,a){return Ls.unlinkSync(a),Ls.symlinkSync(e,a)}(i,p)}return Ls.symlinkSync(i,p)}(e,t,p,r):void 0}(e,t,p,r)}function nn(e,a,t,p){return"function"==typeof Ls.copyFileSync?(Ls.copyFileSync(a,t),Ls.chmodSync(t,e.mode),p.preserveTimestamps?function(e,a,t){const p=Ls.openSync(e,"r+");return Ls.futimesSync(p,a,t),Ls.closeSync(p)}(t,e.atime,e.mtime):void 0):function(e,a,t,p){const r=function(e){if("function"==typeof Buffer.allocUnsafe)try{return Buffer.allocUnsafe(65536)}catch(e){return new Buffer(65536)}return new Buffer(65536)}(),i=Ls.openSync(a,"r"),o=Ls.openSync(t,"w",e.mode);let d=0;for(;d<e.size;){const e=Ls.readSync(i,r,0,65536,d);Ls.writeSync(o,r,0,e),d+=e}p.preserveTimestamps&&Ls.futimesSync(o,e.atime,e.mtime),Ls.closeSync(i),Ls.closeSync(o)}(e,a,t,p)}function ln(e,t,p){Ls.readdirSync(e).forEach(r=>function(e,t,p,r){const i=a.join(t,e),o=a.join(p,e),{destStat:d}=on.checkPathsSync(i,o,"copy");return sn(d,i,o,r)}(r,e,t,p))}var mn,cn={copySync:function(e,t,p){"function"==typeof p&&(p={filter:p}),(p=p||{}).clobber=!("clobber"in p)||!!p.clobber,p.overwrite="overwrite"in p?!!p.overwrite:p.clobber,p.preserveTimestamps&&"ia32"===process.arch&&console.warn("fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269");const{srcStat:r,destStat:i}=on.checkPathsSync(e,t,"copy");return on.checkParentPathsSync(e,r,t,"copy"),function(e,t,p,r){if(r.filter&&!r.filter(t,p))return;const i=a.dirname(p);return Ls.existsSync(i)||dn(i),sn(e,t,p,r)}(i,e,t,p)}},un={pathExists:(mn=function(e){return Ms.access(e).then(()=>!0).catch(()=>!1)},Object.defineProperty(function(){const e=arguments[arguments.length-1];if("function"!=typeof e)return mn.apply(this,arguments);mn.apply(this,arguments).then(a=>e(null,a),e)},"name",{value:mn.name})),pathExistsSync:Ms.existsSync};const hn=Qs.mkdirs,fn=un.pathExists;function vn(e,t,p,r,i){const o=a.dirname(p);fn(o,(a,d)=>a?i(a):d?wn(e,t,p,r,i):void hn(o,a=>a?i(a):wn(e,t,p,r,i)))}function gn(e,a,t,p,r,i){Promise.resolve(r.filter(t,p)).then(o=>o?e(a,t,p,r,i):i(),e=>i(e))}function wn(e,a,t,p,r){return p.filter?gn(yn,e,a,t,p,r):yn(e,a,t,p,r)}function yn(e,t,p,r,i){(r.dereference?Ls.stat:Ls.lstat)(t,(o,d)=>o?i(o):d.isDirectory()?function(e,a,t,p,r,i){return a?a&&!a.isDirectory()?i(new Error(`Cannot overwrite non-directory '${p}' with directory '${t}'.`)):En(t,p,r,i):function(e,a,t,p,r){Ls.mkdir(t,i=>{if(i)return r(i);En(a,t,p,a=>a?r(a):Ls.chmod(t,e.mode,r))})}(e,t,p,r,i)}(d,e,t,p,r,i):d.isFile()||d.isCharacterDevice()||d.isBlockDevice()?function(e,a,t,p,r,i){return a?function(e,a,t,p,r){if(!p.overwrite)return p.errorOnExist?r(new Error(`'${t}' already exists`)):r();Ls.unlink(t,i=>i?r(i):bn(e,a,t,p,r))}(e,t,p,r,i):bn(e,t,p,r,i)}(d,e,t,p,r,i):d.isSymbolicLink()?function(e,t,p,r,i){Ls.readlink(t,(t,o)=>t?i(t):(r.dereference&&(o=a.resolve(process.cwd(),o)),e?void Ls.readlink(p,(t,d)=>t?"EINVAL"===t.code||"UNKNOWN"===t.code?Ls.symlink(o,p,i):i(t):(r.dereference&&(d=a.resolve(process.cwd(),d)),on.isSrcSubdir(o,d)?i(new Error(`Cannot copy '${o}' to a subdirectory of itself, '${d}'.`)):e.isDirectory()&&on.isSrcSubdir(d,o)?i(new Error(`Cannot overwrite '${d}' with '${o}'.`)):function(e,a,t){Ls.unlink(a,p=>p?t(p):Ls.symlink(e,a,t))}(o,p,i))):Ls.symlink(o,p,i)))}(e,t,p,r,i):void 0)}function bn(e,a,t,p,r){return"function"==typeof Ls.copyFile?Ls.copyFile(a,t,a=>a?r(a):_n(e,t,p,r)):function(e,a,t,p,r){const i=Ls.createReadStream(a);i.on("error",e=>r(e)).once("open",()=>{const a=Ls.createWriteStream(t,{mode:e.mode});a.on("error",e=>r(e)).on("open",()=>i.pipe(a)).once("close",()=>_n(e,t,p,r))})}(e,a,t,p,r)}function _n(e,a,t,p){Ls.chmod(a,e.mode,r=>r?p(r):t.preserveTimestamps?function(e,a,t,p){Ls.open(e,"r+",(e,r)=>{if(e)return p(e);Ls.futimes(r,a,t,e=>{Ls.close(r,a=>{p&&p(e||a)})})})}(a,e.atime,e.mtime,p):p())}function En(e,t,p,r){Ls.readdir(e,(i,o)=>i?r(i):function e(t,p,r,i,o){const d=t.pop();return d?function(t,p,r,i,o,d){const s=a.join(r,p),n=a.join(i,p);on.checkPaths(s,n,"copy",(a,p)=>{if(a)return d(a);const{destStat:l}=p;wn(l,s,n,o,a=>a?d(a):e(t,r,i,o,d))})}(t,d,p,r,i,o):o()}(o,e,t,p,r))}var Tn={copy:Vs(function(e,a,t,p){"function"!=typeof t||p?"function"==typeof t&&(t={filter:t}):(p=t,t={}),p=p||function(){},(t=t||{}).clobber=!("clobber"in t)||!!t.clobber,t.overwrite="overwrite"in t?!!t.overwrite:t.clobber,t.preserveTimestamps&&"ia32"===process.arch&&console.warn("fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269"),on.checkPaths(e,a,"copy",(r,i)=>{if(r)return p(r);const{srcStat:o,destStat:d}=i;on.checkParentPaths(e,o,a,"copy",r=>r?p(r):t.filter?gn(vn,d,e,a,t,p):vn(d,e,a,t,p))})})};const Sn="win32"===process.platform;function On(e){["unlink","chmod","stat","lstat","rmdir","readdir"].forEach(a=>{e[a]=e[a]||Ls[a],e[a+="Sync"]=e[a]||Ls[a]}),e.maxBusyTries=e.maxBusyTries||3}function An(e,a,t){let p=0;"function"==typeof a&&(t=a,a={}),s(e,"rimraf: missing path"),s.strictEqual(typeof e,"string","rimraf: path should be a string"),s.strictEqual(typeof t,"function","rimraf: callback function required"),s(a,"rimraf: invalid options argument provided"),s.strictEqual(typeof a,"object","rimraf: options should be object"),On(a),Nn(e,a,function r(i){if(i){if(("EBUSY"===i.code||"ENOTEMPTY"===i.code||"EPERM"===i.code)&&p<a.maxBusyTries)return p++,setTimeout(()=>Nn(e,a,r),100*p);"ENOENT"===i.code&&(i=null)}t(i)})}function Nn(e,a,t){s(e),s(a),s("function"==typeof t),a.lstat(e,(p,r)=>p&&"ENOENT"===p.code?t(null):p&&"EPERM"===p.code&&Sn?Dn(e,a,p,t):r&&r.isDirectory()?kn(e,a,p,t):void a.unlink(e,p=>{if(p){if("ENOENT"===p.code)return t(null);if("EPERM"===p.code)return Sn?Dn(e,a,p,t):kn(e,a,p,t);if("EISDIR"===p.code)return kn(e,a,p,t)}return t(p)}))}function Dn(e,a,t,p){s(e),s(a),s("function"==typeof p),t&&s(t instanceof Error),a.chmod(e,438,r=>{r?p("ENOENT"===r.code?null:t):a.stat(e,(r,i)=>{r?p("ENOENT"===r.code?null:t):i.isDirectory()?kn(e,a,t,p):a.unlink(e,p)})})}function Cn(e,a,t){let p;s(e),s(a),t&&s(t instanceof Error);try{a.chmodSync(e,438)}catch(e){if("ENOENT"===e.code)return;throw t}try{p=a.statSync(e)}catch(e){if("ENOENT"===e.code)return;throw t}p.isDirectory()?Rn(e,a,t):a.unlinkSync(e)}function kn(e,t,p,r){s(e),s(t),p&&s(p instanceof Error),s("function"==typeof r),t.rmdir(e,i=>{!i||"ENOTEMPTY"!==i.code&&"EEXIST"!==i.code&&"EPERM"!==i.code?r(i&&"ENOTDIR"===i.code?p:i):function(e,t,p){s(e),s(t),s("function"==typeof p),t.readdir(e,(r,i)=>{if(r)return p(r);let o,d=i.length;if(0===d)return t.rmdir(e,p);i.forEach(r=>{An(a.join(e,r),t,a=>{if(!o)return a?p(o=a):void(0==--d&&t.rmdir(e,p))})})})}(e,t,r)})}function Pn(e,a){let t;On(a=a||{}),s(e,"rimraf: missing path"),s.strictEqual(typeof e,"string","rimraf: path should be a string"),s(a,"rimraf: missing options"),s.strictEqual(typeof a,"object","rimraf: options should be object");try{t=a.lstatSync(e)}catch(t){if("ENOENT"===t.code)return;"EPERM"===t.code&&Sn&&Cn(e,a,t)}try{t&&t.isDirectory()?Rn(e,a,null):a.unlinkSync(e)}catch(t){if("ENOENT"===t.code)return;if("EPERM"===t.code)return Sn?Cn(e,a,t):Rn(e,a,t);if("EISDIR"!==t.code)throw t;Rn(e,a,t)}}function Rn(e,t,p){s(e),s(t),p&&s(p instanceof Error);try{t.rmdirSync(e)}catch(r){if("ENOTDIR"===r.code)throw p;if("ENOTEMPTY"===r.code||"EEXIST"===r.code||"EPERM"===r.code)!function(e,t){if(s(e),s(t),t.readdirSync(e).forEach(p=>Pn(a.join(e,p),t)),!Sn)return t.rmdirSync(e,t);{const a=Date.now();do{try{return t.rmdirSync(e,t)}catch(e){}}while(Date.now()-a<500)}}(e,t);else if("ENOENT"!==r.code)throw r}}var Fn=An;An.sync=Pn;var Vn={remove:Vs(Fn),removeSync:Fn.sync};const jn=Vs(function(e,t){t=t||function(){},Ls.readdir(e,(p,r)=>{if(p)return Qs.mkdirs(e,t);r=r.map(t=>a.join(e,t)),function e(){const a=r.pop();if(!a)return t();Vn.remove(a,a=>{if(a)return t(a);e()})}()})});function xn(e){let t;try{t=Ls.readdirSync(e)}catch(a){return Qs.mkdirsSync(e)}t.forEach(t=>{t=a.join(e,t),Vn.removeSync(t)})}var In={emptyDirSync:xn,emptydirSync:xn,emptyDir:jn,emptydir:jn};const Un=un.pathExists;var Gn={createFile:Vs(function(e,t){function p(){Ls.writeFile(e,"",e=>{if(e)return t(e);t()})}Ls.stat(e,(r,i)=>{if(!r&&i.isFile())return t();const o=a.dirname(e);Un(o,(e,a)=>e?t(e):a?p():void Qs.mkdirs(o,e=>{if(e)return t(e);p()}))})}),createFileSync:function(e){let t;try{t=Ls.statSync(e)}catch(e){}if(t&&t.isFile())return;const p=a.dirname(e);Ls.existsSync(p)||Qs.mkdirsSync(p),Ls.writeFileSync(e,"")}};const Bn=un.pathExists;var Ln={createLink:Vs(function(e,t,p){function r(e,a){Ls.link(e,a,e=>{if(e)return p(e);p(null)})}Bn(t,(i,o)=>i?p(i):o?p(null):void Ls.lstat(e,i=>{if(i)return i.message=i.message.replace("lstat","ensureLink"),p(i);const o=a.dirname(t);Bn(o,(a,i)=>a?p(a):i?r(e,t):void Qs.mkdirs(o,a=>{if(a)return p(a);r(e,t)}))}))}),createLinkSync:function(e,t){if(Ls.existsSync(t))return;try{Ls.lstatSync(e)}catch(e){throw e.message=e.message.replace("lstat","ensureLink"),e}const p=a.dirname(t);return Ls.existsSync(p)||Qs.mkdirsSync(p),Ls.linkSync(e,t)}};const Mn=un.pathExists,qn=Qs.mkdirs,$n=Qs.mkdirsSync,Hn=un.pathExists;var zn,Wn={createSymlink:Vs(function(e,t,p,r){r="function"==typeof p?p:r,p="function"!=typeof p&&p,Hn(t,(i,o)=>i?r(i):o?r(null):void function(e,t,p){if(a.isAbsolute(e))return Ls.lstat(e,a=>a?(a.message=a.message.replace("lstat","ensureSymlink"),p(a)):p(null,{toCwd:e,toDst:e}));{const r=a.dirname(t),i=a.join(r,e);Mn(i,(t,o)=>t?p(t):o?p(null,{toCwd:i,toDst:e}):Ls.lstat(e,t=>t?(t.message=t.message.replace("lstat","ensureSymlink"),p(t)):p(null,{toCwd:e,toDst:a.relative(r,e)})))}}(e,t,(i,o)=>{if(i)return r(i);e=o.toDst,function(e,a,t){if(t="function"==typeof a?a:t,a="function"!=typeof a&&a)return t(null,a);Ls.lstat(e,(e,p)=>{if(e)return t(null,"file");a=p&&p.isDirectory()?"dir":"file",t(null,a)})}(o.toCwd,p,(p,i)=>{if(p)return r(p);const o=a.dirname(t);Hn(o,(a,p)=>a?r(a):p?Ls.symlink(e,t,i,r):void qn(o,a=>{if(a)return r(a);Ls.symlink(e,t,i,r)}))})}))}),createSymlinkSync:function(e,t,p){if(Ls.existsSync(t))return;const r=function(e,t){let p;if(a.isAbsolute(e)){if(p=Ls.existsSync(e),!p)throw new Error("absolute srcpath does not exist");return{toCwd:e,toDst:e}}{const r=a.dirname(t),i=a.join(r,e);if(p=Ls.existsSync(i),p)return{toCwd:i,toDst:e};if(p=Ls.existsSync(e),!p)throw new Error("relative srcpath does not exist");return{toCwd:e,toDst:a.relative(r,e)}}}(e,t);e=r.toDst,p=function(e,a){let t;if(a)return a;try{t=Ls.lstatSync(e)}catch(e){return"file"}return t&&t.isDirectory()?"dir":"file"}(r.toCwd,p);const i=a.dirname(t);return Ls.existsSync(i)||$n(i),Ls.symlinkSync(e,t,p)}},Jn={createFile:Gn.createFile,createFileSync:Gn.createFileSync,ensureFile:Gn.createFile,ensureFileSync:Gn.createFileSync,createLink:Ln.createLink,createLinkSync:Ln.createLinkSync,ensureLink:Ln.createLink,ensureLinkSync:Ln.createLinkSync,createSymlink:Wn.createSymlink,createSymlinkSync:Wn.createSymlinkSync,ensureSymlink:Wn.createSymlink,ensureSymlinkSync:Wn.createSymlinkSync};try{zn=Ls}catch(e){zn=p}function Yn(e,a){var t,p="\n";return"object"==typeof a&&null!==a&&(a.spaces&&(t=a.spaces),a.EOL&&(p=a.EOL)),JSON.stringify(e,a?a.replacer:null,t).replace(/\n/g,p)+p}function Kn(e){return Buffer.isBuffer(e)&&(e=e.toString("utf8")),e.replace(/^\uFEFF/,"")}var Qn={readFile:function(e,a,t){null==t&&(t=a,a={}),"string"==typeof a&&(a={encoding:a});var p=!0;"throws"in(a=a||{})&&(p=a.throws),(a.fs||zn).readFile(e,a,function(r,i){if(r)return t(r);var o;i=Kn(i);try{o=JSON.parse(i,a?a.reviver:null)}catch(a){return p?(a.message=e+": "+a.message,t(a)):t(null,null)}t(null,o)})},readFileSync:function(e,a){"string"==typeof(a=a||{})&&(a={encoding:a});var t=a.fs||zn,p=!0;"throws"in a&&(p=a.throws);try{var r=t.readFileSync(e,a);return r=Kn(r),JSON.parse(r,a.reviver)}catch(a){if(p)throw a.message=e+": "+a.message,a;return null}},writeFile:function(e,a,t,p){null==p&&(p=t,t={});var r=(t=t||{}).fs||zn,i="";try{i=Yn(a,t)}catch(e){return void(p&&p(e,null))}r.writeFile(e,i,t,p)},writeFileSync:function(e,a,t){var p=(t=t||{}).fs||zn,r=Yn(a,t);return p.writeFileSync(e,r,t)}};const Xn=Vs;var Zn={readJson:Xn(Qn.readFile),readJsonSync:Qn.readFileSync,writeJson:Xn(Qn.writeFile),writeJsonSync:Qn.writeFileSync};const el=un.pathExists;Zn.outputJson=Vs(function(e,t,p,r){"function"==typeof p&&(r=p,p={});const i=a.dirname(e);el(i,(a,o)=>a?r(a):o?Zn.writeJson(e,t,p,r):void Qs.mkdirs(i,a=>{if(a)return r(a);Zn.writeJson(e,t,p,r)}))}),Zn.outputJsonSync=function(e,t,p){const r=a.dirname(e);Ls.existsSync(r)||Qs.mkdirsSync(r),Zn.writeJsonSync(e,t,p)},Zn.outputJSON=Zn.outputJson,Zn.outputJSONSync=Zn.outputJsonSync,Zn.writeJSON=Zn.writeJson,Zn.writeJSONSync=Zn.writeJsonSync,Zn.readJSON=Zn.readJson,Zn.readJSONSync=Zn.readJsonSync;var al=Zn;const tl=cn.copySync,pl=Vn.removeSync,rl=Qs.mkdirpSync;function il(e,a,t){try{Ls.renameSync(e,a)}catch(p){if("EXDEV"!==p.code)throw p;return function(e,a,t){return tl(e,a,{overwrite:t,errorOnExist:!0}),pl(e)}(e,a,t)}}var ol={moveSync:function(e,t,p){const r=(p=p||{}).overwrite||p.clobber||!1,{srcStat:i}=on.checkPathsSync(e,t,"move");return on.checkParentPathsSync(e,i,t,"move"),rl(a.dirname(t)),function(e,a,t){if(t)return pl(a),il(e,a,t);if(Ls.existsSync(a))throw new Error("dest already exists.");return il(e,a,t)}(e,t,r)}};const dl=Tn.copy,sl=Vn.remove,nl=Qs.mkdirp,ll=un.pathExists;function ml(e,a,t,p){Ls.rename(e,a,r=>r?"EXDEV"!==r.code?p(r):function(e,a,t,p){dl(e,a,{overwrite:t,errorOnExist:!0},a=>a?p(a):sl(e,p))}(e,a,t,p):p())}var cl={move:Vs(function(e,t,p,r){"function"==typeof p&&(r=p,p={});const i=p.overwrite||p.clobber||!1;on.checkPaths(e,t,"move",(p,o)=>{if(p)return r(p);const{srcStat:d}=o;on.checkParentPaths(e,d,t,"move",p=>{if(p)return r(p);nl(a.dirname(t),a=>a?r(a):function(e,a,t,p){if(t)return sl(a,r=>r?p(r):ml(e,a,t,p));ll(a,(r,i)=>r?p(r):i?p(new Error("dest already exists.")):ml(e,a,t,p))}(e,t,i,r))})})})};const ul=un.pathExists;var hl={outputFile:Vs(function(e,t,p,r){"function"==typeof p&&(r=p,p="utf8");const i=a.dirname(e);ul(i,(a,o)=>a?r(a):o?Ls.writeFile(e,t,p,r):void Qs.mkdirs(i,a=>{if(a)return r(a);Ls.writeFile(e,t,p,r)}))}),outputFileSync:function(e,...t){const p=a.dirname(e);if(Ls.existsSync(p))return Ls.writeFileSync(e,...t);Qs.mkdirsSync(p),Ls.writeFileSync(e,...t)}},fl=_(function(e){e.exports=Object.assign({},Ms,cn,Tn,In,Jn,al,Qs,ol,cl,hl,un,Vn),Object.getOwnPropertyDescriptor(p,"promises")&&Object.defineProperty(e.exports,"promises",{get:()=>p.promises})});const{publishSizes:vl,publishDiff:gl}=Fs,{noop:wl,toFileMap:yl,toMap:bl,dedupe:_l}={noop:function(e){return e},toMap:function(e,a){return e.reduce((e,t,p)=>(e[t]=a[p],e),{})},dedupe:function(e,a,t){return t.indexOf(e)===a},toFileMap:function(e){return e.reduce((e,a)=>(a.size&&(e[a.filename]=a.size),e),{})}},El=Ur(Wi),Tl=Wo.sync;Tl.file=(e,a)=>new Promise((t,p)=>{const r=fl.createReadStream(e);r.on("error",p);const i=r.pipe(Wo.stream(a));i.on("error",p),i.on("brotli-size",t)});const Sl=e=>Buffer.byteLength(e);Sl.file=async e=>(await fl.stat(e)).size;const Ol={brotli:Tl,gzip:lo,none:Sl};async function Al(e){try{return(await fl.readJSON(e)).sort((e,a)=>a.timestamp-e.timestamp)}catch(e){return[]}}async function Nl(e){try{return await p.promises.access(e,p.constants.F_OK),!0}catch(e){}return!1}function Dl(e){if(e)return console.log(`Stripping hash from build chunks using '${e}' pattern.`),function(a){return a.replace(new RegExp(e),(e,...a)=>{if((a=a.slice(0,-2).filter(e=>null!=e)).length){for(let t=0;t<a.length;t++){const p=a[t]||"";e=e.replace(p,p.replace(/./g,"*"))}return e}return""})}}function Cl(e,a){let t=(e>0?"+":"")+Lo(e);if(0===Math.abs(e));else if(0===a)t+=" (new file)";else if(a===-e)t+=" (removed)";else{const p=Math.round(e/a*100);t+=` (${p>0?"+":""}${p}%)`}return t}function kl(e,a){if(0===a)return"🆕";const t=Math.round(e/a*100);return t>=50?"🆘":t>=20?"🚨":t>=10?"⚠️":t>=5?"🔍":t<=-50?"🏆":t<=-20?"🎉":t<=-10?"👏":t<=-5?"✅":""}function Pl(e){if(0==e.length)return"";for(;e.every(e=>!e[e.length-1]);)for(const a of e)a.pop();const[a]=e;let t=a.length;if(3===t&&e.every(e=>"0 B"===e[2])){t-=1;for(const a of e)a.pop()}return 0===t?"":[["Filename","Size","Change",""].slice(0,t),[":---",":---:",":---:",":---:"].slice(0,t),...e].map(e=>`| ${e.join(" | ")} |`).join("\n")}function Rl(e){return/^(1|true|yes)$/.test(e)}(async()=>{try{const e=x.getInput("repo-token"),t=at.getOctokit(e);await async function(e,t,p){const{number:r}=t.issue;try{x.debug("pr"+JSON.stringify(t.payload,null,2))}catch(e){}let i,o;if("push"==t.eventName)i=t.payload.before,o=t.payload.ref,console.log(`Pushed new commit on top of ${o} (${i})`);else{if("pull_request"!=t.eventName&&"pull_request_target"!=t.eventName)throw new Error(`Unsupported eventName in github.context: ${t.eventName}. Only "pull_request", "pull_request_target", and "push" triggered workflows are currently supported.`);{const e=t.payload.pull_request;i=e.base.sha,o=e.base.ref,console.log(`PR #${r} is targeted at ${o} (${o})`)}}x.getInput("cwd")&&process.chdir(x.getInput("cwd"));const d=new class{constructor(e){const t=e||{};t.pattern=t.pattern||"**/*.{mjs,js,jsx,css,html}",t.filename=t.filename||"size-plugin.json",t.writeFile=!1!==t.writeFile,t.stripHash=t.stripHash||wl,t.filepath=a.join(process.cwd(),t.filename),t.mode=t.mode||process.env.NODE_ENV,t.compression=t.compression||"gzip",this.compressionSize=Ol[t.compression],this.options=t}filterFiles(e){const a=ui.filter(this.options.pattern),t=this.options.exclude?ui.filter(this.options.exclude):()=>!1;return e.filter(e=>a(e)&&!t(e))}async readFromDisk(e){const t=await El(this.options.pattern,{cwd:e,ignore:this.options.exclude}),p=await Promise.all(this.filterFiles(t).map(t=>this.compressionSize.file(a.join(e,t)).catch(()=>null)));return bl(t.map(e=>this.options.stripHash(e)),p)}async getPreviousSizes(e){const a=await Al(this.options.filepath);if(a.length){const[{files:e}]=a;return yl(e)}return this.readFromDisk(e)}async getSizes(e){const a=this.filterFiles(Object.keys(e)),t=await Promise.all(a.map(a=>this.compressionSize(e[a].source)));return bl(a.map(e=>this.options.stripHash(e)),t)}async getDiff(e,a){const t=[...Object.keys(e),...Object.keys(a)].filter(_l),p=[];for(const r of t){const t=a[r]||0;p.push({filename:r,size:t,delta:t-(e[r]||0)})}return p}async printSizes(e){const a=Math.max(...e.map(e=>e.filename.length),this.options.columnWidth||0);let t="";const p=[];for(const r of e){const e=r.filename,i=r.size,o=r.delta,d=new Array(a-e.length+2).join(" ")+e+" ⏤  ",s=i>102400?"red":i>40960?"yellow":i>20480?"cyan":"green";let n=jo[s](Lo(i)),l="";o&&Math.abs(o)>1&&(l=(o>0?"+":"")+Lo(o),o>1024?(n=jo.bold(n),l=jo.red(l)):o<-10&&(l=jo.green(l)),n+=` (${l})`);let m=d+n+"\n";const c={name:e,size:i,sizeText:n,delta:o,deltaText:l,msg:d,color:s};p.push(c),this.options.decorateItem&&(m=this.options.decorateItem(m,c)||m),t+=m}if(this.options.decorateAfter){const a=this.options.decorateAfter({sizes:p,raw:e,output:t});a&&(t+="\n"+a.replace(/^\n/g,""))}return t}async uploadSizes(e){const a={timestamp:Date.now(),files:e};if(this.options.save&&await this.options.save(a),this.options.publish&&await gl(a,this.options.filename),"production"===this.options.mode&&a.files.some(e=>0!==e.delta)){const e=await Al(this.options.filepath);e.unshift(a),this.options.writeFile&&(await fl.ensureFile(this.options.filename),await fl.writeJSON(this.options.filename,e)),this.options.publish&&await vl(e,this.options.filename)}}async execute(e,a){const t=await(this.options.getPreviousSizes||this.getPreviousSizes).call(this,a),p=await(this.options.getSizes||this.getSizes).call(this,e),r=await(this.options.getDiff||this.getDiff).call(this,t,p),i=await(this.options.printSizes||this.printSizes).call(this,r);return await(this.options.uploadSizes||this.uploadSizes).call(this,r),i}}({compression:x.getInput("compression"),pattern:x.getInput("pattern")||"**/dist/**/*.{js,mjs,cjs}",exclude:x.getInput("exclude")||"{**/*.map,**/node_modules/**}",stripHash:Dl(x.getInput("strip-hash"))}),s=x.getInput("build-script")||"build",n=process.cwd();let l=await Nl(a.resolve(n,"yarn.lock")),m=await Nl(a.resolve(n,"package-lock.json")),c="npm",u="npm install";l?(c="yarn",u="yarn --frozen-lockfile"):m&&(u="npm ci"),x.startGroup("[current] Install Dependencies"),console.log("Installing using "+u),await it.exec(u),x.endGroup(),x.startGroup("[current] Build using "+c),console.log(`Building using ${c} run ${s}`),await it.exec(`${c} run ${s}`),x.endGroup(),await it.exec("git reset --hard");const h=await d.readFromDisk(n);x.startGroup("[base] Checkout target branch");try{if(!o)throw Error("missing context.payload.pull_request.base.ref");await it.exec("git fetch -n origin "+o),console.log("successfully fetched base.ref")}catch(e){console.log("fetching base.ref failed",e.message);try{await it.exec("git fetch -n origin "+i),console.log("successfully fetched base.sha")}catch(e){console.log("fetching base.sha failed",e.message);try{await it.exec("git fetch -n")}catch(e){console.log("fetch failed",e.message)}}}console.log("checking out and building base commit");try{if(!o)throw Error("missing context.payload.base.ref");await it.exec("git reset --hard "+o)}catch(e){await it.exec("git reset --hard "+i)}x.endGroup();const f=x.getInput("clean-script");f&&(x.startGroup(`[base] Cleanup via ${c} run ${f}`),await it.exec(`${c} run ${f}`),x.endGroup()),x.startGroup("[base] Install Dependencies"),l=await Nl(a.resolve(n,"yarn.lock")),m=await Nl(a.resolve(n,"package-lock.json")),l?(c="yarn",u="yarn --frozen-lockfile"):m&&(u="npm ci"),console.log("Installing using "+u),await it.exec(u),x.endGroup(),x.startGroup("[base] Build using "+c),await it.exec(`${c} run ${s}`),x.endGroup(),await it.exec("git reset --hard");const v=await d.readFromDisk(n),g=await d.getDiff(v,h);x.startGroup("Size Differences:");const w=await d.printSizes(g);console.log(w),x.endGroup();const y=function(e,{showTotal:a,collapseUnchanged:t,omitUnchanged:p,minimumChangeThreshold:r}){let i=[],o=[],d=0,s=0;for(const a of e){const{filename:e,size:n,delta:l}=a;d+=n,s+=l;const m=n-l,c=Math.abs(l)<r;if(c&&p)continue;const u=[`\`${e}\``,Lo(n),Cl(l,m),kl(l,m)];c&&t?o.push(u):i.push(u)}let n=Pl(i);if(0!==o.length&&(n+=`\n\n<details><summary>ℹ️ <strong>View Unchanged</strong></summary>\n\n${Pl(o)}\n\n</details>\n\n`),a){const e=d-s;let a=Cl(s,e),t=kl(s,e);n=`**Total Size:** ${Lo(d)}\n\n${n}`,n=`**Size Change:** ${a} ${t}\n\n${n}`}return n}(g,{collapseUnchanged:Rl(x.getInput("collapse-unchanged")),omitUnchanged:Rl(x.getInput("omit-unchanged")),showTotal:Rl(x.getInput("show-total")),minimumChangeThreshold:parseInt(x.getInput("minimum-change-threshold"),10)});let b=!1;const _={...t.repo,issue_number:r},E={..._,body:y+'\n\n<a href="https://github.com/preactjs/compressed-size-action"><sub>compressed-size-action</sub></a>'};if("pull_request"!==t.eventName&&"pull_request_target"!==t.eventName)console.log("No PR associated with this action run. Not posting a check or comment."),b=!1;else if(Rl(x.getInput("use-check")))if(p){const a=await async function(e,a){const t=await e.checks.create({...a.repo,name:"Compressed Size",head_sha:a.payload.pull_request.head.sha,status:"in_progress"});return async p=>{await e.checks.update({...a.repo,check_run_id:t.data.id,completed_at:(new Date).toISOString(),status:"completed",...p})}}(e,t);await a({conclusion:"success",output:{title:"Compressed Size Action",summary:y}})}else b=!0;else{let a;x.startGroup("Updating stats PR comment");try{const t=(await e.issues.listComments(_)).data;for(let e=t.length;e--;){const p=t[e];if("Bot"===p.user.type&&/<sub>[\s\n]*(compressed|gzip)-size-action/.test(p.body)){a=p.id;break}}}catch(e){console.log("Error checking for previous comments: "+e.message)}if(a){console.log("Updating previous comment #"+a);try{await e.issues.updateComment({...t.repo,comment_id:a,body:E.body})}catch(e){console.log("Error editing previous comment: "+e.message),a=null}}if(!a){console.log("Creating new comment");try{await e.issues.createComment(E)}catch(a){console.log("Error creating comment: "+a.message),console.log("Submitting a PR review comment instead...");try{const a=t.issue;await e.pulls.createReview({owner:a.owner,repo:a.repo,pull_number:a.number,event:"COMMENT",body:E.body})}catch(e){console.log("Error creating PR review."),b=!0}}}x.endGroup()}b&&console.log(`\n\t\t\tError: compressed-size-action was unable to comment on your PR.\n\t\t\tThis can happen for PR's originating from a fork without write permissions.\n\t\t\tYou can copy the size table directly into a comment using the markdown below:\n\t\t\t\n\n${E.body}\n\n\n\t\t`.replace(/^(\t|  )+/gm,"")),console.log("All done!")}(t,at.context,e)}catch(e){x.setFailed(e.message)}})();
